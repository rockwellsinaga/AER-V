import {
  require_react
} from "./chunk-NKBGLYTV.js";
import {
  __toESM
} from "./chunk-PLDDJCW6.js";

// node_modules/@refinedev/devtools-shared/dist/index.mjs
var import_react = __toESM(require_react(), 1);
var c = ((t) => (t.RELOAD = "devtools:reload", t.DEVTOOLS_INIT = "devtools:init", t.DEVTOOLS_ALREADY_CONNECTED = "devtools:already-connected", t.ACTIVITY = "devtools:send-activity", t.DEVTOOLS_ACTIVITY_UPDATE = "devtools:activity-update", t.DEVTOOLS_CONNECTED_APP = "devtools:connected-app", t.DEVTOOLS_DISCONNECTED_APP = "devtools:disconnected-app", t.DEVTOOLS_HIGHLIGHT_IN_MONITOR = "devtools:highlight-in-monitor", t.DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION = "devtools:highlight-in-monitor-action", t.DEVTOOLS_LOGIN_SUCCESS = "devtools:login-success", t.DEVTOOLS_DISPLAY_LOGIN_FAILURE = "devtools:display-login-failure", t.DEVTOOLS_LOGIN_FAILURE = "devtools:login-failure", t.DEVTOOLS_RELOAD_AFTER_LOGIN = "devtools:reload-after-login", t.DEVTOOLS_INVALIDATE_QUERY = "devtools:invalidate-query", t.DEVTOOLS_INVALIDATE_QUERY_ACTION = "devtools:invalidate-query-action", t))(c || {});
var T = { useCan: "access-control", useLog: "audit-log", useLogList: "audit-log", useCreate: "data", useCreateMany: "data", useCustom: "data", useCustomMutation: "data", useDelete: "data", useDeleteMany: "data", useInfiniteList: "data", useList: "data", useMany: "data", useOne: "data", useUpdate: "data", useUpdateMany: "data", useForgotPassword: "auth", useGetIdentity: "auth", useIsAuthenticated: "auth", useLogin: "auth", useLogout: "auth", useOnError: "auth", usePermissions: "auth", useRegister: "auth", useUpdatePassword: "auth" };
var L = Object.entries(T).reduce((e, [o, s]) => (e[s] || (e[s] = []), e[s].push(o), e), {});
async function d(e, o, s) {
  if (e.readyState !== e.OPEN) {
    await new Promise((n) => {
      let r = () => {
        e.send(JSON.stringify({ event: o, payload: s })), n(), e.removeEventListener("open", r);
      };
      e.addEventListener("open", r);
    });
    return;
  }
  e.send(JSON.stringify({ event: o, payload: s }));
}
var p = import_react.default.createContext({ __devtools: false, httpUrl: "http://localhost:5001", wsUrl: "ws://localhost:5001", ws: null });
var D = ({ __devtools: e, url: o = ["http://localhost:5001", "ws://localhost:5001"], children: s }) => {
  let n = Array.isArray(o) ? o[0] : o, r = Array.isArray(o) ? o[1] : o.replace(/http(s)?:\/\//, "ws$1://"), [i, y] = import_react.default.useState({ __devtools: e ?? false, httpUrl: n, wsUrl: r, ws: null }), [O, v] = import_react.default.useState(null);
  import_react.default.useEffect(() => {
    let l = null, a = new WebSocket(i.wsUrl);
    return a.addEventListener("open", () => {
      i.__devtools || (l = setTimeout(() => {
        d(a, "devtools:init", { url: window.location.origin });
      }, 300));
    }), v(a), () => {
      l && clearTimeout(l), a.readyState === WebSocket.CONNECTING ? a.addEventListener("open", () => {
        a.close(1e3, window.location.origin);
      }) : a.close(1e3, window.location.origin);
    };
  }, []);
  let E = import_react.default.useMemo(() => ({ ...i, ws: O }), [i, O]);
  return import_react.default.createElement(p.Provider, { value: E }, s);
};
function _(e, o, s) {
  let n = (r) => {
    let { event: i, payload: y } = JSON.parse(r.data);
    o === i && s(y);
  };
  return e.addEventListener("message", n), () => {
    e.removeEventListener("message", n);
  };
}

export {
  c,
  T,
  d,
  p,
  D,
  _
};
//# sourceMappingURL=chunk-F5W75ND7.js.map
