{
  "version": 3,
  "sources": ["../../stackframe/stackframe.js", "../../error-stack-parser/error-stack-parser.js", "../../use-sync-external-store/cjs/use-sync-external-store-shim.development.js", "../../use-sync-external-store/shim/index.js", "../../es-errors/type.js", "../../object-inspect/index.js", "../../side-channel-list/index.js", "../../es-object-atoms/index.js", "../../es-errors/index.js", "../../es-errors/eval.js", "../../es-errors/range.js", "../../es-errors/ref.js", "../../es-errors/syntax.js", "../../es-errors/uri.js", "../../math-intrinsics/abs.js", "../../math-intrinsics/floor.js", "../../math-intrinsics/max.js", "../../math-intrinsics/min.js", "../../math-intrinsics/pow.js", "../../math-intrinsics/round.js", "../../math-intrinsics/isNaN.js", "../../math-intrinsics/sign.js", "../../gopd/gOPD.js", "../../gopd/index.js", "../../es-define-property/index.js", "../../has-symbols/shams.js", "../../has-symbols/index.js", "../../get-proto/Reflect.getPrototypeOf.js", "../../get-proto/Object.getPrototypeOf.js", "../../function-bind/implementation.js", "../../function-bind/index.js", "../../call-bind-apply-helpers/functionCall.js", "../../call-bind-apply-helpers/functionApply.js", "../../call-bind-apply-helpers/reflectApply.js", "../../call-bind-apply-helpers/actualApply.js", "../../call-bind-apply-helpers/index.js", "../../dunder-proto/get.js", "../../get-proto/index.js", "../../hasown/index.js", "../../get-intrinsic/index.js", "../../call-bound/index.js", "../../side-channel-map/index.js", "../../side-channel-weakmap/index.js", "../../side-channel/index.js", "../../qs/lib/formats.js", "../../qs/lib/utils.js", "../../qs/lib/stringify.js", "../../qs/lib/parse.js", "../../qs/lib/index.js", "../../warn-once/index.js", "../../papaparse/papaparse.min.js", "../../@refinedev/core/src/components/pages/error/index.tsx", "../../@refinedev/core/src/hooks/auth/usePermissions/index.ts", "../../@refinedev/core/src/contexts/auth/index.tsx", "../../@refinedev/core/src/definitions/table/index.ts", "../../@refinedev/core/src/definitions/helpers/userFriendlySeconds/index.ts", "../../@refinedev/core/src/definitions/helpers/importCSVMapper/index.ts", "../../@refinedev/core/src/definitions/helpers/userFriendlyResourceName/index.ts", "../../@refinedev/core/src/definitions/helpers/handleUseParams/index.tsx", "../../@refinedev/core/src/definitions/helpers/keys/index.ts", "../../@refinedev/core/src/definitions/helpers/pickNotDeprecated/index.ts", "../../@refinedev/core/src/definitions/helpers/queryKeys/index.ts", "../../@refinedev/core/src/definitions/helpers/hasPermission/index.ts", "../../@refinedev/core/src/definitions/helpers/router/is-parameter.ts", "../../@refinedev/core/src/definitions/helpers/router/split-to-segments.ts", "../../@refinedev/core/src/definitions/helpers/router/is-segment-counts-same.ts", "../../@refinedev/core/src/definitions/helpers/router/remove-leading-trailing-slashes.ts", "../../@refinedev/core/src/definitions/helpers/router/check-by-segments.ts", "../../@refinedev/core/src/definitions/helpers/router/get-default-action-path.ts", "../../@refinedev/core/src/definitions/helpers/router/get-parent-resource.ts", "../../@refinedev/core/src/definitions/helpers/router/get-parent-prefix-for-resource.ts", "../../@refinedev/core/src/definitions/helpers/router/get-action-routes-from-resource.ts", "../../@refinedev/core/src/definitions/helpers/router/pick-matched-route.ts", "../../@refinedev/core/src/definitions/helpers/router/match-resource-from-route.ts", "../../@refinedev/core/src/definitions/helpers/routeGenerator/index.ts", "../../@refinedev/core/src/definitions/helpers/treeView/createTreeView/index.ts", "../../@refinedev/core/src/definitions/helpers/humanizeString/index.ts", "../../@refinedev/core/src/contexts/refine/index.tsx", "../../@refinedev/core/src/components/layoutWrapper/defaultLayout/index.tsx", "../../@refinedev/core/src/definitions/helpers/handleRefineOptions/index.ts", "../../@refinedev/core/src/definitions/helpers/redirectPage/index.ts", "../../@refinedev/core/src/definitions/helpers/sequentialPromises/index.ts", "../../@refinedev/core/src/definitions/helpers/pick-resource/index.ts", "../../@refinedev/core/src/definitions/helpers/pickDataProvider/index.ts", "../../@refinedev/core/src/definitions/helpers/handleMultiple/index.ts", "../../@refinedev/core/src/definitions/helpers/useInfinitePagination/index.ts", "../../@refinedev/core/src/definitions/helpers/legacy-resource-transform/index.ts", "../../@refinedev/core/src/definitions/helpers/router/pick-route-params.ts", "../../@refinedev/core/src/definitions/helpers/router/prepare-route-params.ts", "../../@refinedev/core/src/definitions/helpers/router/compose-route.ts", "../../@refinedev/core/src/definitions/helpers/useActiveAuthProvider/index.ts", "../../@refinedev/core/src/definitions/helpers/handlePaginationParams/index.ts", "../../@refinedev/core/src/definitions/helpers/useMediaQuery/index.ts", "../../@refinedev/core/src/definitions/helpers/safe-translate/index.ts", "../../@refinedev/core/src/definitions/helpers/generateDocumentTitle/index.ts", "../../@refinedev/core/src/hooks/refine/useMutationMode.ts", "../../@refinedev/core/src/hooks/refine/useWarnAboutChange/index.ts", "../../@refinedev/core/src/contexts/unsavedWarn/index.tsx", "../../@refinedev/core/src/hooks/refine/useSyncWithLocation.ts", "../../@refinedev/core/src/hooks/refine/useTitle.tsx", "../../@refinedev/core/src/hooks/refine/useRefineContext.ts", "../../@refinedev/core/src/definitions/helpers/useUserFriendlyName/index.ts", "../../@refinedev/core/src/definitions/helpers/flatten-object-keys/index.ts", "../../@refinedev/core/src/definitions/helpers/property-path-to-array/index.ts", "../../@refinedev/core/src/definitions/helpers/downloadInBrowser/index.ts", "../../@refinedev/core/src/definitions/helpers/defer-execution/index.ts", "../../@refinedev/core/src/definitions/helpers/async-debounce/index.ts", "../../@refinedev/core/src/definitions/helpers/prepare-query-context/index.ts", "../../@refinedev/core/src/definitions/upload/file2Base64/index.ts", "../../@refinedev/core/src/hooks/useKeys/index.tsx", "../../@refinedev/core/src/hooks/auth/useGetIdentity/index.ts", "../../@refinedev/core/src/hooks/auth/useLogout/index.ts", "../../@refinedev/core/src/hooks/auth/useInvalidateAuthStore/index.ts", "../../@refinedev/core/src/hooks/auth/useLogin/index.ts", "../../@refinedev/core/src/hooks/auth/useRegister/index.ts", "../../@refinedev/core/src/hooks/auth/useForgotPassword/index.ts", "../../@refinedev/core/src/hooks/auth/useUpdatePassword/index.ts", "../../@refinedev/core/src/hooks/auth/useIsAuthenticated/index.ts", "../../@refinedev/core/src/hooks/auth/useOnError/index.ts", "../../@refinedev/core/src/hooks/auth/useIsExistAuthentication/index.ts", "../../@refinedev/core/src/hooks/data/useList.ts", "../../@refinedev/core/src/hooks/useLoadingOvertime/index.ts", "../../@refinedev/core/src/hooks/data/useOne.ts", "../../@refinedev/core/src/hooks/data/useMany.ts", "../../@refinedev/core/src/hooks/data/useUpdate.ts", "../../@refinedev/core/src/contexts/undoableQueue/types.ts", "../../@refinedev/core/src/hooks/data/useCreate.ts", "../../@refinedev/core/src/hooks/data/useDelete.ts", "../../@refinedev/core/src/hooks/data/useCreateMany.ts", "../../@refinedev/core/src/hooks/data/useUpdateMany.ts", "../../@refinedev/core/src/hooks/data/useDeleteMany.ts", "../../@refinedev/core/src/hooks/data/useApiUrl.ts", "../../@refinedev/core/src/hooks/data/useCustom.ts", "../../@refinedev/core/src/hooks/data/useCustomMutation.ts", "../../@refinedev/core/src/hooks/data/useDataProvider.tsx", "../../@refinedev/core/src/contexts/data/index.tsx", "../../@refinedev/core/src/hooks/data/useInfiniteList.ts", "../../@refinedev/core/src/hooks/live/useResourceSubscription/index.ts", "../../@refinedev/core/src/contexts/live/index.tsx", "../../@refinedev/core/src/hooks/invalidate/index.tsx", "../../@refinedev/core/src/hooks/resource/useResource/index.ts", "../../@refinedev/core/src/contexts/resource/index.tsx", "../../@refinedev/core/src/hooks/deepMemo/index.tsx", "../../@refinedev/core/src/hooks/memoized/index.tsx", "../../@refinedev/core/src/contexts/router/picker/index.tsx", "../../@refinedev/core/src/hooks/router/use-parsed/index.tsx", "../../@refinedev/core/src/contexts/router/index.tsx", "../../@refinedev/core/src/hooks/router/use-parse/index.tsx", "../../@refinedev/core/src/hooks/resource/useResourceWithRoute/index.ts", "../../@refinedev/core/src/hooks/live/useLiveMode/index.ts", "../../@refinedev/core/src/hooks/live/useSubscription/index.ts", "../../@refinedev/core/src/hooks/live/usePublish/index.ts", "../../@refinedev/core/src/hooks/notification/useCancelNotification/index.tsx", "../../@refinedev/core/src/contexts/undoableQueue/index.tsx", "../../@refinedev/core/src/hooks/notification/useNotification/index.ts", "../../@refinedev/core/src/contexts/notification/index.tsx", "../../@refinedev/core/src/hooks/notification/useHandleNotification/index.ts", "../../@refinedev/core/src/hooks/i18n/useSetLocale.ts", "../../@refinedev/core/src/contexts/i18n/index.tsx", "../../@refinedev/core/src/hooks/i18n/useTranslate.ts", "../../@refinedev/core/src/hooks/i18n/useGetLocale.ts", "../../@refinedev/core/src/hooks/i18n/useTranslation.tsx", "../../@refinedev/core/src/hooks/export/index.ts", "../../@refinedev/core/src/hooks/form/index.ts", "../../@refinedev/core/src/hooks/redirection/index.ts", "../../@refinedev/core/src/hooks/router/use-back/index.tsx", "../../@refinedev/core/src/hooks/router/use-go/index.tsx", "../../@refinedev/core/src/hooks/router/use-get-to-path/index.ts", "../../@refinedev/core/src/hooks/navigation/index.ts", "../../@refinedev/core/src/hooks/show/index.ts", "../../@refinedev/core/src/hooks/import/index.tsx", "../../@refinedev/core/src/hooks/modal/useModal/index.tsx", "../../@refinedev/core/src/hooks/router/use-to-path/index.ts", "../../@refinedev/core/src/components/link/index.tsx", "../../@refinedev/core/src/hooks/router/use-link/index.tsx", "../../@refinedev/core/src/hooks/legacy-router/useRouterContext.ts", "../../@refinedev/core/src/contexts/router/legacy/index.tsx", "../../@refinedev/core/src/hooks/accessControl/useCan/index.ts", "../../@refinedev/core/src/contexts/accessControl/index.tsx", "../../@refinedev/core/src/definitions/helpers/sanitize-resource/index.ts", "../../@refinedev/core/src/hooks/accessControl/useCanWithoutCache.ts", "../../@refinedev/core/src/hooks/useSelect/index.ts", "../../@refinedev/core/src/hooks/useTable/index.ts", "../../@refinedev/core/src/hooks/auditLog/useLog/index.ts", "../../@refinedev/core/src/contexts/auditLog/index.tsx", "../../@refinedev/core/src/hooks/auditLog/useLogList/index.ts", "../../@refinedev/core/src/hooks/breadcrumb/index.ts", "../../@refinedev/core/src/hooks/menu/useMenu.tsx", "../../@refinedev/core/src/definitions/helpers/menu/create-resource-key.ts", "../../@refinedev/core/src/definitions/helpers/menu/create-tree.ts", "../../@refinedev/core/src/contexts/metaContext/index.tsx", "../../@refinedev/core/src/hooks/useMeta/index.ts", "../../@refinedev/core/src/hooks/use-refine-options/index.tsx", "../../@refinedev/core/src/hooks/use-resource-params/index.ts", "../../@refinedev/core/src/hooks/use-resource-params/use-id/index.tsx", "../../@refinedev/core/src/hooks/use-resource-params/use-action/index.tsx", "../../@refinedev/core/src/hooks/button/actionable-button/index.tsx", "../../@refinedev/core/src/hooks/button/navigation-button/index.tsx", "../../@refinedev/core/src/hooks/button/button-can-access/index.tsx", "../../@refinedev/core/src/hooks/button/delete-button/index.tsx", "../../@refinedev/core/src/hooks/button/refresh-button/index.tsx", "../../@refinedev/core/src/hooks/button/index.tsx", "../../@refinedev/core/src/components/pages/login/index.tsx", "../../@refinedev/core/src/components/pages/auth/index.tsx", "../../@refinedev/core/src/components/pages/auth/components/login/index.tsx", "../../@refinedev/core/src/components/pages/auth/components/register/index.tsx", "../../@refinedev/core/src/components/pages/auth/components/forgotPassword/index.tsx", "../../@refinedev/core/src/components/pages/auth/components/updatePassword/index.tsx", "../../@refinedev/core/src/components/pages/ready/index.tsx", "../../@refinedev/core/src/components/pages/welcome/index.tsx", "../../@refinedev/core/src/components/pages/config-success/index.tsx", "../../@refinedev/core/src/components/pages/config-error/index.tsx", "../../@refinedev/core/src/components/containers/refine/index.tsx", "../../@refinedev/core/src/components/telemetry/index.tsx", "../../@refinedev/core/src/hooks/useTelemetryData/index.ts", "../../@refinedev/core/src/definitions/helpers/check-router-prop-misuse/index.ts", "../../@refinedev/core/src/hooks/router/use-router-misuse-warning/index.ts", "../../@refinedev/core/src/components/undoableQueue/index.tsx", "../../@refinedev/core/src/components/layoutWrapper/index.tsx", "../../@refinedev/core/src/components/authenticated/index.tsx", "../../@refinedev/core/src/components/routeChangeHandler/index.tsx", "../../@refinedev/core/src/components/canAccess/index.tsx", "../../@refinedev/core/src/components/gh-banner/index.tsx", "../../@refinedev/core/src/components/gh-banner/styles.ts", "../../@refinedev/core/src/components/autoSaveIndicator/index.tsx", "../../@refinedev/devtools-internal/src/get-trace.ts", "../../@refinedev/devtools-internal/src/clean-stack.ts", "../../@refinedev/devtools-internal/src/constants.ts", "../../@refinedev/devtools-internal/src/is-refine-stack.ts", "../../@refinedev/devtools-internal/src/get-package-name-from-filename.ts", "../../@refinedev/devtools-internal/src/get-resource-path.ts", "../../@refinedev/devtools-internal/src/get-xray.ts", "../../@refinedev/devtools-internal/src/use-query-subscription.tsx", "../../@refinedev/devtools-internal/src/listeners.ts", "../../@refinedev/devtools-internal/src/create-identifier.ts", "../../@tanstack/query-core/src/subscribable.ts", "../../@tanstack/query-core/src/utils.ts", "../../@tanstack/query-core/src/focusManager.ts", "../../@tanstack/query-core/src/onlineManager.ts", "../../@tanstack/query-core/src/retryer.ts", "../../@tanstack/query-core/src/logger.ts", "../../@tanstack/query-core/src/notifyManager.ts", "../../@tanstack/query-core/src/removable.ts", "../../@tanstack/query-core/src/query.ts", "../../@tanstack/query-core/src/queryCache.ts", "../../@tanstack/query-core/src/mutation.ts", "../../@tanstack/query-core/src/mutationCache.ts", "../../@tanstack/query-core/src/infiniteQueryBehavior.ts", "../../@tanstack/query-core/src/queryClient.ts", "../../@tanstack/query-core/src/queryObserver.ts", "../../@tanstack/query-core/src/infiniteQueryObserver.ts", "../../@tanstack/query-core/src/mutationObserver.ts", "../../@tanstack/react-query/src/reactBatchedUpdates.ts", "../../@tanstack/react-query/src/setBatchUpdatesFn.ts", "../../@tanstack/react-query/src/useSyncExternalStore.ts", "../../@tanstack/react-query/src/QueryClientProvider.tsx", "../../@tanstack/react-query/src/isRestoring.tsx", "../../@tanstack/react-query/src/QueryErrorResetBoundary.tsx", "../../@tanstack/react-query/src/utils.ts", "../../@tanstack/react-query/src/errorBoundaryUtils.ts", "../../@tanstack/react-query/src/suspense.ts", "../../@tanstack/react-query/src/useBaseQuery.ts", "../../@tanstack/react-query/src/useQuery.ts", "../../@tanstack/react-query/src/useMutation.ts", "../../@tanstack/react-query/src/useInfiniteQuery.ts"],
  "sourcesContent": ["(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n    var objectProps = ['evalOrigin'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);\n\n    function StackFrame(obj) {\n        if (!obj) return;\n        for (var i = 0; i < props.length; i++) {\n            if (obj[props[i]] !== undefined) {\n                this['set' + _capitalize(props[i])](obj[props[i]]);\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var fileName = this.getFileName() || '';\n            var lineNumber = this.getLineNumber() || '';\n            var columnNumber = this.getColumnNumber() || '';\n            var functionName = this.getFunctionName() || '';\n            if (this.getIsEval()) {\n                if (fileName) {\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n                }\n                return '[eval]:' + lineNumber + ':' + columnNumber;\n            }\n            if (functionName) {\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n            }\n            return fileName + ':' + lineNumber + ':' + columnNumber;\n        }\n    };\n\n    StackFrame.fromString = function StackFrame$$fromString(str) {\n        var argsStartIndex = str.indexOf('(');\n        var argsEndIndex = str.lastIndexOf(')');\n\n        var functionName = str.substring(0, argsStartIndex);\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n        var locationString = str.substring(argsEndIndex + 1);\n\n        if (locationString.indexOf('@') === 0) {\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n            var fileName = parts[1];\n            var lineNumber = parts[2];\n            var columnNumber = parts[3];\n        }\n\n        return new StackFrame({\n            functionName: functionName,\n            args: args || undefined,\n            fileName: fileName,\n            lineNumber: lineNumber || undefined,\n            columnNumber: columnNumber || undefined\n        });\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n", "(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[()]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^()]*)|(,.*$)/g, '');\n                }\n                var sanitizedLine = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').replace(/^.*?\\s+/, '');\n\n                // capture and preseve the parenthesized location \"(/foo/my bar.js:12:87)\" in\n                // case it has spaces in it, as the string is split on \\s+ later on\n                var location = sanitizedLine.match(/ (\\(.+\\)$)/);\n\n                // remove the parenthesized location from the line, if it was matched\n                sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;\n\n                // if a location was matched, pass it to extractLocation() otherwise pass all sanitizedLine\n                // because this line doesn't have function name\n                var locationParts = this.extractLocation(location ? location[1] : sanitizedLine);\n                var functionName = location && sanitizedLine || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;\n                    var matches = line.match(functionNameRegex);\n                    var functionName = matches && matches[1] ? matches[1] : undefined;\n                    var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                    .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                    .replace(/\\([^)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^(]+\\(([^)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n", "/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function is(x, y) {\n      return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n    }\n    function useSyncExternalStore$2(subscribe, getSnapshot) {\n      didWarnOld18Alpha ||\n        void 0 === React.startTransition ||\n        ((didWarnOld18Alpha = !0),\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.\"\n        ));\n      var value = getSnapshot();\n      if (!didWarnUncachedGetSnapshot) {\n        var cachedValue = getSnapshot();\n        objectIs(value, cachedValue) ||\n          (console.error(\n            \"The result of getSnapshot should be cached to avoid an infinite loop\"\n          ),\n          (didWarnUncachedGetSnapshot = !0));\n      }\n      cachedValue = useState({\n        inst: { value: value, getSnapshot: getSnapshot }\n      });\n      var inst = cachedValue[0].inst,\n        forceUpdate = cachedValue[1];\n      useLayoutEffect(\n        function () {\n          inst.value = value;\n          inst.getSnapshot = getSnapshot;\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n        },\n        [subscribe, value, getSnapshot]\n      );\n      useEffect(\n        function () {\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n          return subscribe(function () {\n            checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n          });\n        },\n        [subscribe]\n      );\n      useDebugValue(value);\n      return value;\n    }\n    function checkIfSnapshotChanged(inst) {\n      var latestGetSnapshot = inst.getSnapshot;\n      inst = inst.value;\n      try {\n        var nextValue = latestGetSnapshot();\n        return !objectIs(inst, nextValue);\n      } catch (error) {\n        return !0;\n      }\n    }\n    function useSyncExternalStore$1(subscribe, getSnapshot) {\n      return getSnapshot();\n    }\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n    var React = require(\"react\"),\n      objectIs = \"function\" === typeof Object.is ? Object.is : is,\n      useState = React.useState,\n      useEffect = React.useEffect,\n      useLayoutEffect = React.useLayoutEffect,\n      useDebugValue = React.useDebugValue,\n      didWarnOld18Alpha = !1,\n      didWarnUncachedGetSnapshot = !1,\n      shim =\n        \"undefined\" === typeof window ||\n        \"undefined\" === typeof window.document ||\n        \"undefined\" === typeof window.document.createElement\n          ? useSyncExternalStore$1\n          : useSyncExternalStore$2;\n    exports.useSyncExternalStore =\n      void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n  })();\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n", "'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n", "var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nvar quotes = {\n    __proto__: null,\n    'double': '\"',\n    single: \"'\"\n};\nvar quoteREs = {\n    __proto__: null,\n    'double': /([\"\\\\])/g,\n    single: /(['\\\\])/g\n};\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && !has(quotes, opts.quoteStyle)) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (\n        (typeof globalThis !== 'undefined' && obj === globalThis)\n        || (typeof global !== 'undefined' && obj === global)\n    ) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var style = opts.quoteStyle || defaultStyle;\n    var quoteChar = quotes[style];\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction canTrustToString(obj) {\n    return !toStringTag || !(typeof obj === 'object' && (toStringTag in obj || typeof obj[toStringTag] !== 'undefined'));\n}\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && canTrustToString(obj); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && canTrustToString(obj); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && canTrustToString(obj); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && canTrustToString(obj); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && canTrustToString(obj); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && canTrustToString(obj); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && canTrustToString(obj); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    var quoteRE = quoteREs[opts.quoteStyle || 'single'];\n    quoteRE.lastIndex = 0;\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, quoteRE, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n", "'use strict';\n\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\n\n/*\n* This function traverses the list returning the node corresponding to the given key.\n*\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list.\n* By doing so, all the recently used nodes can be accessed relatively quickly.\n*/\n/** @type {import('./list.d.ts').listGetNode} */\n// eslint-disable-next-line consistent-return\nvar listGetNode = function (list, key, isDelete) {\n\t/** @type {typeof list | NonNullable<(typeof list)['next']>} */\n\tvar prev = list;\n\t/** @type {(typeof list)['next']} */\n\tvar curr;\n\t// eslint-disable-next-line eqeqeq\n\tfor (; (curr = prev.next) != null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tif (!isDelete) {\n\t\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t\tcurr.next = /** @type {NonNullable<typeof list.next>} */ (list.next);\n\t\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\t}\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\n/** @type {import('./list.d.ts').listGet} */\nvar listGet = function (objects, key) {\n\tif (!objects) {\n\t\treturn void undefined;\n\t}\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\n/** @type {import('./list.d.ts').listSet} */\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = /** @type {import('./list.d.ts').ListNode<typeof value, typeof key>} */ ({ // eslint-disable-line no-param-reassign, no-extra-parens\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t});\n\t}\n};\n/** @type {import('./list.d.ts').listHas} */\nvar listHas = function (objects, key) {\n\tif (!objects) {\n\t\treturn false;\n\t}\n\treturn !!listGetNode(objects, key);\n};\n/** @type {import('./list.d.ts').listDelete} */\n// eslint-disable-next-line consistent-return\nvar listDelete = function (objects, key) {\n\tif (objects) {\n\t\treturn listGetNode(objects, key, true);\n\t}\n};\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannelList() {\n\t/** @typedef {ReturnType<typeof getSideChannelList>} Channel */\n\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t/** @type {import('./list.d.ts').RootNode<V, K> | undefined} */ var $o;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\tvar root = $o && $o.next;\n\t\t\tvar deletedNode = listDelete($o, key);\n\t\t\tif (deletedNode && root && root === deletedNode) {\n\t\t\t\t$o = void undefined;\n\t\t\t}\n\t\t\treturn !!deletedNode;\n\t\t},\n\t\tget: function (key) {\n\t\t\treturn listGet($o, key);\n\t\t},\n\t\thas: function (key) {\n\t\t\treturn listHas($o, key);\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$o) {\n\t\t\t\t// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head\n\t\t\t\t$o = {\n\t\t\t\t\tnext: void undefined\n\t\t\t\t};\n\t\t\t}\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\tlistSet(/** @type {NonNullable<typeof $o>} */ ($o), key, value);\n\t\t}\n\t};\n\t// @ts-expect-error TODO: figure out why this is erroring\n\treturn channel;\n};\n", "'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Object;\n", "'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n", "'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n", "'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n", "'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n", "'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n", "'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n", "'use strict';\n\n/** @type {import('./abs')} */\nmodule.exports = Math.abs;\n", "'use strict';\n\n/** @type {import('./floor')} */\nmodule.exports = Math.floor;\n", "'use strict';\n\n/** @type {import('./max')} */\nmodule.exports = Math.max;\n", "'use strict';\n\n/** @type {import('./min')} */\nmodule.exports = Math.min;\n", "'use strict';\n\n/** @type {import('./pow')} */\nmodule.exports = Math.pow;\n", "'use strict';\n\n/** @type {import('./round')} */\nmodule.exports = Math.round;\n", "'use strict';\n\n/** @type {import('./isNaN')} */\nmodule.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n", "'use strict';\n\nvar $isNaN = require('./isNaN');\n\n/** @type {import('./sign')} */\nmodule.exports = function sign(number) {\n\tif ($isNaN(number) || number === 0) {\n\t\treturn number;\n\t}\n\treturn number < 0 ? -1 : +1;\n};\n", "'use strict';\n\n/** @type {import('./gOPD')} */\nmodule.exports = Object.getOwnPropertyDescriptor;\n", "'use strict';\n\n/** @type {import('.')} */\nvar $gOPD = require('./gOPD');\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n", "'use strict';\n\n/** @type {import('.')} */\nvar $defineProperty = Object.defineProperty || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n", "'use strict';\n\n/** @type {import('./shams')} */\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\t/** @type {{ [k in symbol]?: unknown }} */\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (var _ in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\t// eslint-disable-next-line no-extra-parens\n\t\tvar descriptor = /** @type {PropertyDescriptor} */ (Object.getOwnPropertyDescriptor(obj, sym));\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n", "'use strict';\n\n/** @type {import('./Reflect.getPrototypeOf')} */\nmodule.exports = (typeof Reflect !== 'undefined' && Reflect.getPrototypeOf) || null;\n", "'use strict';\n\nvar $Object = require('es-object-atoms');\n\n/** @type {import('./Object.getPrototypeOf')} */\nmodule.exports = $Object.getPrototypeOf || null;\n", "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n", "'use strict';\n\n/** @type {import('./functionCall')} */\nmodule.exports = Function.prototype.call;\n", "'use strict';\n\n/** @type {import('./functionApply')} */\nmodule.exports = Function.prototype.apply;\n", "'use strict';\n\n/** @type {import('./reflectApply')} */\nmodule.exports = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;\n", "'use strict';\n\nvar bind = require('function-bind');\n\nvar $apply = require('./functionApply');\nvar $call = require('./functionCall');\nvar $reflectApply = require('./reflectApply');\n\n/** @type {import('./actualApply')} */\nmodule.exports = $reflectApply || bind.call($call, $apply);\n", "'use strict';\n\nvar bind = require('function-bind');\nvar $TypeError = require('es-errors/type');\n\nvar $call = require('./functionCall');\nvar $actualApply = require('./actualApply');\n\n/** @type {(args: [Function, thisArg?: unknown, ...args: unknown[]]) => Function} TODO FIXME, find a way to use import('.') */\nmodule.exports = function callBindBasic(args) {\n\tif (args.length < 1 || typeof args[0] !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\treturn $actualApply(bind, $call, args);\n};\n", "'use strict';\n\nvar callBind = require('call-bind-apply-helpers');\nvar gOPD = require('gopd');\n\nvar hasProtoAccessor;\ntry {\n\t// eslint-disable-next-line no-extra-parens, no-proto\n\thasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */ ([]).__proto__ === Array.prototype;\n} catch (e) {\n\tif (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {\n\t\tthrow e;\n\t}\n}\n\n// eslint-disable-next-line no-extra-parens\nvar desc = !!hasProtoAccessor && gOPD && gOPD(Object.prototype, /** @type {keyof typeof Object.prototype} */ ('__proto__'));\n\nvar $Object = Object;\nvar $getPrototypeOf = $Object.getPrototypeOf;\n\n/** @type {import('./get')} */\nmodule.exports = desc && typeof desc.get === 'function'\n\t? callBind([desc.get])\n\t: typeof $getPrototypeOf === 'function'\n\t\t? /** @type {import('./get')} */ function getDunder(value) {\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\treturn $getPrototypeOf(value == null ? value : $Object(value));\n\t\t}\n\t\t: false;\n", "'use strict';\n\nvar reflectGetProto = require('./Reflect.getPrototypeOf');\nvar originalGetProto = require('./Object.getPrototypeOf');\n\nvar getDunderProto = require('dunder-proto/get');\n\n/** @type {import('.')} */\nmodule.exports = reflectGetProto\n\t? function getProto(O) {\n\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\treturn reflectGetProto(O);\n\t}\n\t: originalGetProto\n\t\t? function getProto(O) {\n\t\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\t\tthrow new TypeError('getProto: not an object');\n\t\t\t}\n\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\treturn originalGetProto(O);\n\t\t}\n\t\t: getDunderProto\n\t\t\t? function getProto(O) {\n\t\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\t\treturn getDunderProto(O);\n\t\t\t}\n\t\t\t: null;\n", "'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n", "'use strict';\n\nvar undefined;\n\nvar $Object = require('es-object-atoms');\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar abs = require('math-intrinsics/abs');\nvar floor = require('math-intrinsics/floor');\nvar max = require('math-intrinsics/max');\nvar min = require('math-intrinsics/min');\nvar pow = require('math-intrinsics/pow');\nvar round = require('math-intrinsics/round');\nvar sign = require('math-intrinsics/sign');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = require('gopd');\nvar $defineProperty = require('es-define-property');\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = require('get-proto');\nvar $ObjectGPO = require('get-proto/Object.getPrototypeOf');\nvar $ReflectGPO = require('get-proto/Reflect.getPrototypeOf');\n\nvar $apply = require('call-bind-apply-helpers/functionApply');\nvar $call = require('call-bind-apply-helpers/functionCall');\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float16Array%': typeof Float16Array === 'undefined' ? undefined : Float16Array,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': $Object,\n\t'%Object.getOwnPropertyDescriptor%': $gOPD,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\n\t'%Function.prototype.call%': $call,\n\t'%Function.prototype.apply%': $apply,\n\t'%Object.defineProperty%': $defineProperty,\n\t'%Object.getPrototypeOf%': $ObjectGPO,\n\t'%Math.abs%': abs,\n\t'%Math.floor%': floor,\n\t'%Math.max%': max,\n\t'%Math.min%': min,\n\t'%Math.pow%': pow,\n\t'%Math.round%': round,\n\t'%Math.sign%': sign,\n\t'%Reflect.getPrototypeOf%': $ReflectGPO\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call($call, Array.prototype.concat);\nvar $spliceApply = bind.call($apply, Array.prototype.splice);\nvar $replace = bind.call($call, String.prototype.replace);\nvar $strSlice = bind.call($call, String.prototype.slice);\nvar $exec = bind.call($call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBindBasic = require('call-bind-apply-helpers');\n\n/** @type {(thisArg: string, searchString: string, position?: number) => number} */\nvar $indexOf = callBindBasic([GetIntrinsic('%String.prototype.indexOf%')]);\n\n/** @type {import('.')} */\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\t/* eslint no-extra-parens: 0 */\n\n\tvar intrinsic = /** @type {(this: unknown, ...args: unknown[]) => unknown} */ (GetIntrinsic(name, !!allowMissing));\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBindBasic(/** @type {const} */ ([intrinsic]));\n\t}\n\treturn intrinsic;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\nvar $Map = GetIntrinsic('%Map%', true);\n\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => V} */\nvar $mapGet = callBound('Map.prototype.get', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K, value: V) => void} */\nvar $mapSet = callBound('Map.prototype.set', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */\nvar $mapHas = callBound('Map.prototype.has', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */\nvar $mapDelete = callBound('Map.prototype.delete', true);\n/** @type {<K, V>(thisArg: Map<K, V>) => number} */\nvar $mapSize = callBound('Map.prototype.size', true);\n\n/** @type {import('.')} */\nmodule.exports = !!$Map && /** @type {Exclude<import('.'), false>} */ function getSideChannelMap() {\n\t/** @typedef {ReturnType<typeof getSideChannelMap>} Channel */\n\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t/** @type {Map<K, V> | undefined} */ var $m;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\tif ($m) {\n\t\t\t\tvar result = $mapDelete($m, key);\n\t\t\t\tif ($mapSize($m) === 0) {\n\t\t\t\t\t$m = void undefined;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($m) {\n\t\t\t\treturn $mapGet($m, key);\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($m) {\n\t\t\t\treturn $mapHas($m, key);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$m) {\n\t\t\t\t// @ts-expect-error TS can't handle narrowing a variable inside a closure\n\t\t\t\t$m = new $Map();\n\t\t\t}\n\t\t\t$mapSet($m, key, value);\n\t\t}\n\t};\n\n\t// @ts-expect-error TODO: figure out why TS is erroring here\n\treturn channel;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bound');\nvar inspect = require('object-inspect');\nvar getSideChannelMap = require('side-channel-map');\n\nvar $TypeError = require('es-errors/type');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\n\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => V} */\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K, value: V) => void} */\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */\nvar $weakMapDelete = callBound('WeakMap.prototype.delete', true);\n\n/** @type {import('.')} */\nmodule.exports = $WeakMap\n\t? /** @type {Exclude<import('.'), false>} */ function getSideChannelWeakMap() {\n\t\t/** @typedef {ReturnType<typeof getSideChannelWeakMap>} Channel */\n\t\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t\t/** @type {WeakMap<K & object, V> | undefined} */ var $wm;\n\t\t/** @type {Channel | undefined} */ var $m;\n\n\t\t/** @type {Channel} */\n\t\tvar channel = {\n\t\t\tassert: function (key) {\n\t\t\t\tif (!channel.has(key)) {\n\t\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t\t}\n\t\t\t},\n\t\t\t'delete': function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapDelete($wm, key);\n\t\t\t\t\t}\n\t\t\t\t} else if (getSideChannelMap) {\n\t\t\t\t\tif ($m) {\n\t\t\t\t\t\treturn $m['delete'](key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tget: function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn $m && $m.get(key);\n\t\t\t},\n\t\t\thas: function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!$m && $m.has(key);\n\t\t\t},\n\t\t\tset: function (key, value) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif (!$wm) {\n\t\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t\t}\n\t\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t\t} else if (getSideChannelMap) {\n\t\t\t\t\tif (!$m) {\n\t\t\t\t\t\t$m = getSideChannelMap();\n\t\t\t\t\t}\n\t\t\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t\t\t/** @type {NonNullable<typeof $m>} */ ($m).set(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// @ts-expect-error TODO: figure out why this is erroring\n\t\treturn channel;\n\t}\n\t: getSideChannelMap;\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar inspect = require('object-inspect');\nvar getSideChannelList = require('side-channel-list');\nvar getSideChannelMap = require('side-channel-map');\nvar getSideChannelWeakMap = require('side-channel-weakmap');\n\nvar makeChannel = getSideChannelWeakMap || getSideChannelMap || getSideChannelList;\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannel() {\n\t/** @typedef {ReturnType<typeof getSideChannel>} Channel */\n\n\t/** @type {Channel | undefined} */ var $channelData;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\treturn !!$channelData && $channelData['delete'](key);\n\t\t},\n\t\tget: function (key) {\n\t\t\treturn $channelData && $channelData.get(key);\n\t\t},\n\t\thas: function (key) {\n\t\t\treturn !!$channelData && $channelData.has(key);\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$channelData) {\n\t\t\t\t$channelData = makeChannel();\n\t\t\t}\n\n\t\t\t$channelData.set(key, value);\n\t\t}\n\t};\n\t// @ts-expect-error TODO: figure out why this is erroring\n\treturn channel;\n};\n", "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n", "'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? { __proto__: null } : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object' && typeof source !== 'function') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if (\n                (options && (options.plainObjects || options.allowPrototypes))\n                || !has.call(Object.prototype, source)\n            ) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, defaultDecoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar limit = 1024;\n\n/* eslint operator-linebreak: [2, \"before\"] */\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var j = 0; j < string.length; j += limit) {\n        var segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        var arr = [];\n\n        for (var i = 0; i < segment.length; ++i) {\n            var c = segment.charCodeAt(i);\n            if (\n                c === 0x2D // -\n                || c === 0x2E // .\n                || c === 0x5F // _\n                || c === 0x7E // ~\n                || (c >= 0x30 && c <= 0x39) // 0-9\n                || (c >= 0x41 && c <= 0x5A) // a-z\n                || (c >= 0x61 && c <= 0x7A) // A-Z\n                || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n\n            if (c < 0x80) {\n                arr[arr.length] = hexTable[c];\n                continue;\n            }\n\n            if (c < 0x800) {\n                arr[arr.length] = hexTable[0xC0 | (c >> 6)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            if (c < 0xD800 || c >= 0xE000) {\n                arr[arr.length] = hexTable[0xE0 | (c >> 12)]\n                    + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            i += 1;\n            c = 0x10000 + (((c & 0x3FF) << 10) | (segment.charCodeAt(i) & 0x3FF));\n\n            arr[arr.length] = hexTable[0xF0 | (c >> 18)]\n                + hexTable[0x80 | ((c >> 12) & 0x3F)]\n                + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                + hexTable[0x80 | (c & 0x3F)];\n        }\n\n        out += arr.join('');\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n", "'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    commaRoundTrip: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    filter: void undefined,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    allowEmptyArrays,\n    strictNullHandling,\n    skipNulls,\n    encodeDotInKeys,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var encodedPrefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encodedPrefix + '[]' : encodedPrefix;\n\n    if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n        return adjustedPrefix + '[]';\n    }\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && key && typeof key.value !== 'undefined'\n            ? key.value\n            : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var encodedKey = allowDots && encodeDotInKeys ? String(key).replace(/\\./g, '%2E') : String(key);\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, encodedKey) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + encodedKey : '[' + encodedKey + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            allowEmptyArrays,\n            strictNullHandling,\n            skipNulls,\n            encodeDotInKeys,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    var arrayFormat;\n    if (opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = defaults.arrayFormat;\n    }\n\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[options.arrayFormat];\n    var commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n        var value = obj[key];\n\n        if (options.skipNulls && value === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            value,\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.allowEmptyArrays,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encodeDotInKeys,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n", "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowEmptyArrays: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decodeDotInKeys: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    duplicates: 'combine',\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictDepth: false,\n    strictNullHandling: false,\n    throwOnLimitExceeded: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options, currentArrayLength) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    if (options.throwOnLimitExceeded && currentArrayLength >= options.arrayLimit) {\n        throw new RangeError('Array limit exceeded. Only ' + options.arrayLimit + ' element' + (options.arrayLimit === 1 ? '' : 's') + ' allowed in an array.');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    cleanStr = cleanStr.replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(\n        options.delimiter,\n        options.throwOnLimitExceeded ? limit + 1 : limit\n    );\n\n    if (options.throwOnLimitExceeded && parts.length > limit) {\n        throw new RangeError('Parameter limit exceeded. Only ' + limit + ' parameter' + (limit === 1 ? '' : 's') + ' allowed.');\n    }\n\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key;\n        var val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n\n            val = utils.maybeMap(\n                parseArrayValue(\n                    part.slice(pos + 1),\n                    options,\n                    isArray(obj[key]) ? obj[key].length : 0\n                ),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(String(val));\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        var existing = has.call(obj, key);\n        if (existing && options.duplicates === 'combine') {\n            obj[key] = utils.combine(obj[key], val);\n        } else if (!existing || options.duplicates === 'last') {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var currentArrayLength = 0;\n    if (chain.length > 0 && chain[chain.length - 1] === '[]') {\n        var parentKey = chain.slice(0, -1).join('');\n        currentArrayLength = Array.isArray(val) && val[parentKey] ? val[parentKey].length : 0;\n    }\n\n    var leaf = valuesParsed ? val : parseArrayValue(val, options, currentArrayLength);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = options.allowEmptyArrays && (leaf === '' || (options.strictNullHandling && leaf === null))\n                ? []\n                : utils.combine([], leaf);\n        } else {\n            obj = options.plainObjects ? { __proto__: null } : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, '.') : cleanRoot;\n            var index = parseInt(decodedRoot, 10);\n            if (!options.parseArrays && decodedRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== decodedRoot\n                && String(index) === decodedRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (decodedRoot !== '__proto__') {\n                obj[decodedRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, check strictDepth option for throw, else just add whatever is left\n\n    if (segment) {\n        if (options.strictDepth === true) {\n            throw new RangeError('Input depth exceeded depth option of ' + options.depth + ' and strictDepth is true');\n        }\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.decodeDotInKeys !== 'undefined' && typeof opts.decodeDotInKeys !== 'boolean') {\n        throw new TypeError('`decodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.decoder !== null && typeof opts.decoder !== 'undefined' && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    if (typeof opts.throwOnLimitExceeded !== 'undefined' && typeof opts.throwOnLimitExceeded !== 'boolean') {\n        throw new TypeError('`throwOnLimitExceeded` option must be a boolean');\n    }\n\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    var duplicates = typeof opts.duplicates === 'undefined' ? defaults.duplicates : opts.duplicates;\n\n    if (duplicates !== 'combine' && duplicates !== 'first' && duplicates !== 'last') {\n        throw new TypeError('The duplicates option must be either combine, first, or last');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decodeDotInKeys: typeof opts.decodeDotInKeys === 'boolean' ? opts.decodeDotInKeys : defaults.decodeDotInKeys,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        duplicates: duplicates,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictDepth: typeof opts.strictDepth === 'boolean' ? !!opts.strictDepth : defaults.strictDepth,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n        throwOnLimitExceeded: typeof opts.throwOnLimitExceeded === 'boolean' ? opts.throwOnLimitExceeded : false\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? { __proto__: null } : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? { __proto__: null } : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n", "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n", "const DEV = process.env.NODE_ENV !== \"production\";\n\nconst warnings = new Set();\n\nfunction warnOnce(condition, ...rest) {\n  if (DEV && condition) {\n    const key = rest.join(\" \");\n\n    if (warnings.has(key)) {\n      return;\n    }\n\n    warnings.add(key);\n    console.warn(...rest);\n  }\n}\n\nmodule.exports = warnOnce;\n", "/* @license\nPapa Parse\nv5.5.3\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n((e,t)=>{\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof module&&\"undefined\"!=typeof exports?module.exports=t():e.Papa=t()})(this,function r(){var n=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==n?n:{};var d,s=!n.document&&!!n.postMessage,a=n.IS_PAPA_WORKER||!1,o={},h=0,v={};function u(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=b(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null);this._handle=new i(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(t,e){var i=parseInt(this._config.skipFirstNLines)||0;if(this.isFirstChunk&&0<i){let e=this._config.newline;e||(r=this._config.quoteChar||'\"',e=this._handle.guessLineEndings(t,r)),t=[...t.split(e).slice(i)].join(e)}this.isFirstChunk&&U(this._config.beforeFirstChunk)&&void 0!==(r=this._config.beforeFirstChunk(t))&&(t=r),this.isFirstChunk=!1,this._halted=!1;var i=this._partialLine+t,r=(this._partialLine=\"\",this._handle.parse(i,this._baseIndex,!this._finished));if(!this._handle.paused()&&!this._handle.aborted()){t=r.meta.cursor,i=(this._finished||(this._partialLine=i.substring(t-this._baseIndex),this._baseIndex=t),r&&r.data&&(this._rowCount+=r.data.length),this._finished||this._config.preview&&this._rowCount>=this._config.preview);if(a)n.postMessage({results:r,workerId:v.WORKER_ID,finished:i});else if(U(this._config.chunk)&&!e){if(this._config.chunk(r,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);this._completeResults=r=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(r.data),this._completeResults.errors=this._completeResults.errors.concat(r.errors),this._completeResults.meta=r.meta),this._completed||!i||!U(this._config.complete)||r&&r.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),i||r&&r.meta.paused||this._nextChunk(),r}this._halted=!0},this._sendError=function(e){U(this._config.error)?this._config.error(e):a&&this._config.error&&n.postMessage({workerId:v.WORKER_ID,error:e,finished:!1})}}function f(e){var r;(e=e||{}).chunkSize||(e.chunkSize=v.RemoteChunkSize),u.call(this,e),this._nextChunk=s?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(r=new XMLHttpRequest,this._config.withCredentials&&(r.withCredentials=this._config.withCredentials),s||(r.onload=y(this._chunkLoaded,this),r.onerror=y(this._chunkError,this)),r.open(this._config.downloadRequestBody?\"POST\":\"GET\",this._input,!s),this._config.downloadRequestHeaders){var e,t=this._config.downloadRequestHeaders;for(e in t)r.setRequestHeader(e,t[e])}var i;this._config.chunkSize&&(i=this._start+this._config.chunkSize-1,r.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+i));try{r.send(this._config.downloadRequestBody)}catch(e){this._chunkError(e.message)}s&&0===r.status&&this._chunkError()}},this._chunkLoaded=function(){4===r.readyState&&(r.status<200||400<=r.status?this._chunkError():(this._start+=this._config.chunkSize||r.responseText.length,this._finished=!this._config.chunkSize||this._start>=(e=>null!==(e=e.getResponseHeader(\"Content-Range\"))?parseInt(e.substring(e.lastIndexOf(\"/\")+1)):-1)(r),this.parseChunk(r.responseText)))},this._chunkError=function(e){e=r.statusText||e;this._sendError(new Error(e))}}function l(e){(e=e||{}).chunkSize||(e.chunkSize=v.LocalChunkSize),u.call(this,e);var i,r,n=\"undefined\"!=typeof FileReader;this.stream=function(e){this._input=e,r=e.slice||e.webkitSlice||e.mozSlice,n?((i=new FileReader).onload=y(this._chunkLoaded,this),i.onerror=y(this._chunkError,this)):i=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input,t=(this._config.chunkSize&&(t=Math.min(this._start+this._config.chunkSize,this._input.size),e=r.call(e,this._start,t)),i.readAsText(e,this._config.encoding));n||this._chunkLoaded({target:{result:t}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(i.error)}}function c(e){var i;u.call(this,e=e||{}),this.stream=function(e){return i=e,this._nextChunk()},this._nextChunk=function(){var e,t;if(!this._finished)return e=this._config.chunkSize,i=e?(t=i.substring(0,e),i.substring(e)):(t=i,\"\"),this._finished=!i,this.parseChunk(t)}}function p(e){u.call(this,e=e||{});var t=[],i=!0,r=!1;this.pause=function(){u.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){u.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._checkIsFinished=function(){r&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):i=!0},this._streamData=y(function(e){try{t.push(\"string\"==typeof e?e:e.toString(this._config.encoding)),i&&(i=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=y(function(e){this._streamCleanUp(),this._sendError(e)},this),this._streamEnd=y(function(){this._streamCleanUp(),r=!0,this._streamData(\"\")},this),this._streamCleanUp=y(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function i(m){var n,s,a,t,o=Math.pow(2,53),h=-o,u=/^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/,d=/^((\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)))$/,i=this,r=0,f=0,l=!1,e=!1,c=[],p={data:[],errors:[],meta:{}};function y(e){return\"greedy\"===m.skipEmptyLines?\"\"===e.join(\"\").trim():1===e.length&&0===e[0].length}function g(){if(p&&a&&(k(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+v.DefaultDelimiter+\"'\"),a=!1),m.skipEmptyLines&&(p.data=p.data.filter(function(e){return!y(e)})),_()){if(p)if(Array.isArray(p.data[0])){for(var e=0;_()&&e<p.data.length;e++)p.data[e].forEach(t);p.data.splice(0,1)}else p.data.forEach(t);function t(e,t){U(m.transformHeader)&&(e=m.transformHeader(e,t)),c.push(e)}}function i(e,t){for(var i=m.header?{}:[],r=0;r<e.length;r++){var n=r,s=e[r],s=((e,t)=>(e=>(m.dynamicTypingFunction&&void 0===m.dynamicTyping[e]&&(m.dynamicTyping[e]=m.dynamicTypingFunction(e)),!0===(m.dynamicTyping[e]||m.dynamicTyping)))(e)?\"true\"===t||\"TRUE\"===t||\"false\"!==t&&\"FALSE\"!==t&&((e=>{if(u.test(e)){e=parseFloat(e);if(h<e&&e<o)return 1}})(t)?parseFloat(t):d.test(t)?new Date(t):\"\"===t?null:t):t)(n=m.header?r>=c.length?\"__parsed_extra\":c[r]:n,s=m.transform?m.transform(s,n):s);\"__parsed_extra\"===n?(i[n]=i[n]||[],i[n].push(s)):i[n]=s}return m.header&&(r>c.length?k(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+c.length+\" fields but parsed \"+r,f+t):r<c.length&&k(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+c.length+\" fields but parsed \"+r,f+t)),i}var r;p&&(m.header||m.dynamicTyping||m.transform)&&(r=1,!p.data.length||Array.isArray(p.data[0])?(p.data=p.data.map(i),r=p.data.length):p.data=i(p.data,0),m.header&&p.meta&&(p.meta.fields=c),f+=r)}function _(){return m.header&&0===c.length}function k(e,t,i,r){e={type:e,code:t,message:i};void 0!==r&&(e.row=r),p.errors.push(e)}U(m.step)&&(t=m.step,m.step=function(e){p=e,_()?g():(g(),0!==p.data.length&&(r+=e.data.length,m.preview&&r>m.preview?s.abort():(p.data=p.data[0],t(p,i))))}),this.parse=function(e,t,i){var r=m.quoteChar||'\"',r=(m.newline||(m.newline=this.guessLineEndings(e,r)),a=!1,m.delimiter?U(m.delimiter)&&(m.delimiter=m.delimiter(e),p.meta.delimiter=m.delimiter):((r=((e,t,i,r,n)=>{var s,a,o,h;n=n||[\",\",\"\\t\",\"|\",\";\",v.RECORD_SEP,v.UNIT_SEP];for(var u=0;u<n.length;u++){for(var d,f=n[u],l=0,c=0,p=0,g=(o=void 0,new E({comments:r,delimiter:f,newline:t,preview:10}).parse(e)),_=0;_<g.data.length;_++)i&&y(g.data[_])?p++:(d=g.data[_].length,c+=d,void 0===o?o=d:0<d&&(l+=Math.abs(d-o),o=d));0<g.data.length&&(c/=g.data.length-p),(void 0===a||l<=a)&&(void 0===h||h<c)&&1.99<c&&(a=l,s=f,h=c)}return{successful:!!(m.delimiter=s),bestDelimiter:s}})(e,m.newline,m.skipEmptyLines,m.comments,m.delimitersToGuess)).successful?m.delimiter=r.bestDelimiter:(a=!0,m.delimiter=v.DefaultDelimiter),p.meta.delimiter=m.delimiter),b(m));return m.preview&&m.header&&r.preview++,n=e,s=new E(r),p=s.parse(n,t,i),g(),l?{meta:{paused:!0}}:p||{meta:{paused:!1}}},this.paused=function(){return l},this.pause=function(){l=!0,s.abort(),n=U(m.chunk)?\"\":n.substring(s.getCharIndex())},this.resume=function(){i.streamer._halted?(l=!1,i.streamer.parseChunk(n,!0)):setTimeout(i.resume,3)},this.aborted=function(){return e},this.abort=function(){e=!0,s.abort(),p.meta.aborted=!0,U(m.complete)&&m.complete(p),n=\"\"},this.guessLineEndings=function(e,t){e=e.substring(0,1048576);var t=new RegExp(P(t)+\"([^]*?)\"+P(t),\"gm\"),i=(e=e.replace(t,\"\")).split(\"\\r\"),t=e.split(\"\\n\"),e=1<t.length&&t[0].length<i[0].length;if(1===i.length||e)return\"\\n\";for(var r=0,n=0;n<i.length;n++)\"\\n\"===i[n][0]&&r++;return r>=i.length/2?\"\\r\\n\":\"\\r\"}}function P(e){return e.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function E(C){var S=(C=C||{}).delimiter,O=C.newline,x=C.comments,I=C.step,A=C.preview,T=C.fastMode,D=null,L=!1,F=null==C.quoteChar?'\"':C.quoteChar,j=F;if(void 0!==C.escapeChar&&(j=C.escapeChar),(\"string\"!=typeof S||-1<v.BAD_DELIMITERS.indexOf(S))&&(S=\",\"),x===S)throw new Error(\"Comment character same as delimiter\");!0===x?x=\"#\":(\"string\"!=typeof x||-1<v.BAD_DELIMITERS.indexOf(x))&&(x=!1),\"\\n\"!==O&&\"\\r\"!==O&&\"\\r\\n\"!==O&&(O=\"\\n\");var z=0,M=!1;this.parse=function(i,t,r){if(\"string\"!=typeof i)throw new Error(\"Input must be a string\");var n=i.length,e=S.length,s=O.length,a=x.length,o=U(I),h=[],u=[],d=[],f=z=0;if(!i)return w();if(T||!1!==T&&-1===i.indexOf(F)){for(var l=i.split(O),c=0;c<l.length;c++){if(d=l[c],z+=d.length,c!==l.length-1)z+=O.length;else if(r)return w();if(!x||d.substring(0,a)!==x){if(o){if(h=[],k(d.split(S)),R(),M)return w()}else k(d.split(S));if(A&&A<=c)return h=h.slice(0,A),w(!0)}}return w()}for(var p=i.indexOf(S,z),g=i.indexOf(O,z),_=new RegExp(P(j)+P(F),\"g\"),m=i.indexOf(F,z);;)if(i[z]===F)for(m=z,z++;;){if(-1===(m=i.indexOf(F,m+1)))return r||u.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:h.length,index:z}),E();if(m===n-1)return E(i.substring(z,m).replace(_,F));if(F===j&&i[m+1]===j)m++;else if(F===j||0===m||i[m-1]!==j){-1!==p&&p<m+1&&(p=i.indexOf(S,m+1));var y=v(-1===(g=-1!==g&&g<m+1?i.indexOf(O,m+1):g)?p:Math.min(p,g));if(i.substr(m+1+y,e)===S){d.push(i.substring(z,m).replace(_,F)),i[z=m+1+y+e]!==F&&(m=i.indexOf(F,z)),p=i.indexOf(S,z),g=i.indexOf(O,z);break}y=v(g);if(i.substring(m+1+y,m+1+y+s)===O){if(d.push(i.substring(z,m).replace(_,F)),b(m+1+y+s),p=i.indexOf(S,z),m=i.indexOf(F,z),o&&(R(),M))return w();if(A&&h.length>=A)return w(!0);break}u.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:h.length,index:z}),m++}}else if(x&&0===d.length&&i.substring(z,z+a)===x){if(-1===g)return w();z=g+s,g=i.indexOf(O,z),p=i.indexOf(S,z)}else if(-1!==p&&(p<g||-1===g))d.push(i.substring(z,p)),z=p+e,p=i.indexOf(S,z);else{if(-1===g)break;if(d.push(i.substring(z,g)),b(g+s),o&&(R(),M))return w();if(A&&h.length>=A)return w(!0)}return E();function k(e){h.push(e),f=z}function v(e){var t=0;return t=-1!==e&&(e=i.substring(m+1,e))&&\"\"===e.trim()?e.length:t}function E(e){return r||(void 0===e&&(e=i.substring(z)),d.push(e),z=n,k(d),o&&R()),w()}function b(e){z=e,k(d),d=[],g=i.indexOf(O,z)}function w(e){if(C.header&&!t&&h.length&&!L){var s=h[0],a=Object.create(null),o=new Set(s);let n=!1;for(let r=0;r<s.length;r++){let i=s[r];if(a[i=U(C.transformHeader)?C.transformHeader(i,r):i]){let e,t=a[i];for(;e=i+\"_\"+t,t++,o.has(e););o.add(e),s[r]=e,a[i]++,n=!0,(D=null===D?{}:D)[e]=i}else a[i]=1,s[r]=i;o.add(i)}n&&console.warn(\"Duplicate headers found and renamed.\"),L=!0}return{data:h,errors:u,meta:{delimiter:S,linebreak:O,aborted:M,truncated:!!e,cursor:f+(t||0),renamedHeaders:D}}}function R(){I(w()),h=[],u=[]}},this.abort=function(){M=!0},this.getCharIndex=function(){return z}}function g(e){var t=e.data,i=o[t.workerId],r=!1;if(t.error)i.userError(t.error,t.file);else if(t.results&&t.results.data){var n={abort:function(){r=!0,_(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:m,resume:m};if(U(i.userStep)){for(var s=0;s<t.results.data.length&&(i.userStep({data:t.results.data[s],errors:t.results.errors,meta:t.results.meta},n),!r);s++);delete t.results}else U(i.userChunk)&&(i.userChunk(t.results,n,t.file),delete t.results)}t.finished&&!r&&_(t.workerId,t.results)}function _(e,t){var i=o[e];U(i.userComplete)&&i.userComplete(t),i.terminate(),delete o[e]}function m(){throw new Error(\"Not implemented.\")}function b(e){if(\"object\"!=typeof e||null===e)return e;var t,i=Array.isArray(e)?[]:{};for(t in e)i[t]=b(e[t]);return i}function y(e,t){return function(){e.apply(t,arguments)}}function U(e){return\"function\"==typeof e}return v.parse=function(e,t){var i=(t=t||{}).dynamicTyping||!1;U(i)&&(t.dynamicTypingFunction=i,i={});if(t.dynamicTyping=i,t.transform=!!U(t.transform)&&t.transform,!t.worker||!v.WORKERS_SUPPORTED)return i=null,v.NODE_STREAM_INPUT,\"string\"==typeof e?(e=(e=>65279!==e.charCodeAt(0)?e:e.slice(1))(e),i=new(t.download?f:c)(t)):!0===e.readable&&U(e.read)&&U(e.on)?i=new p(t):(n.File&&e instanceof File||e instanceof Object)&&(i=new l(t)),i.stream(e);(i=(()=>{var e;return!!v.WORKERS_SUPPORTED&&(e=(()=>{var e=n.URL||n.webkitURL||null,t=r.toString();return v.BLOB_URL||(v.BLOB_URL=e.createObjectURL(new Blob([\"var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; \",\"(\",t,\")();\"],{type:\"text/javascript\"})))})(),(e=new n.Worker(e)).onmessage=g,e.id=h++,o[e.id]=e)})()).userStep=t.step,i.userChunk=t.chunk,i.userComplete=t.complete,i.userError=t.error,t.step=U(t.step),t.chunk=U(t.chunk),t.complete=U(t.complete),t.error=U(t.error),delete t.worker,i.postMessage({input:e,config:t,workerId:i.id})},v.unparse=function(e,t){var n=!1,_=!0,m=\",\",y=\"\\r\\n\",s='\"',a=s+s,i=!1,r=null,o=!1,h=((()=>{if(\"object\"==typeof t){if(\"string\"!=typeof t.delimiter||v.BAD_DELIMITERS.filter(function(e){return-1!==t.delimiter.indexOf(e)}).length||(m=t.delimiter),\"boolean\"!=typeof t.quotes&&\"function\"!=typeof t.quotes&&!Array.isArray(t.quotes)||(n=t.quotes),\"boolean\"!=typeof t.skipEmptyLines&&\"string\"!=typeof t.skipEmptyLines||(i=t.skipEmptyLines),\"string\"==typeof t.newline&&(y=t.newline),\"string\"==typeof t.quoteChar&&(s=t.quoteChar),\"boolean\"==typeof t.header&&(_=t.header),Array.isArray(t.columns)){if(0===t.columns.length)throw new Error(\"Option columns is empty\");r=t.columns}void 0!==t.escapeChar&&(a=t.escapeChar+s),t.escapeFormulae instanceof RegExp?o=t.escapeFormulae:\"boolean\"==typeof t.escapeFormulae&&t.escapeFormulae&&(o=/^[=+\\-@\\t\\r].*$/)}})(),new RegExp(P(s),\"g\"));\"string\"==typeof e&&(e=JSON.parse(e));if(Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return u(null,e,i);if(\"object\"==typeof e[0])return u(r||Object.keys(e[0]),e,i)}else if(\"object\"==typeof e)return\"string\"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields||r),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:\"object\"==typeof e.data[0]?Object.keys(e.data[0]):[]),Array.isArray(e.data[0])||\"object\"==typeof e.data[0]||(e.data=[e.data])),u(e.fields||[],e.data||[],i);throw new Error(\"Unable to serialize unrecognized input\");function u(e,t,i){var r=\"\",n=(\"string\"==typeof e&&(e=JSON.parse(e)),\"string\"==typeof t&&(t=JSON.parse(t)),Array.isArray(e)&&0<e.length),s=!Array.isArray(t[0]);if(n&&_){for(var a=0;a<e.length;a++)0<a&&(r+=m),r+=k(e[a],a);0<t.length&&(r+=y)}for(var o=0;o<t.length;o++){var h=(n?e:t[o]).length,u=!1,d=n?0===Object.keys(t[o]).length:0===t[o].length;if(i&&!n&&(u=\"greedy\"===i?\"\"===t[o].join(\"\").trim():1===t[o].length&&0===t[o][0].length),\"greedy\"===i&&n){for(var f=[],l=0;l<h;l++){var c=s?e[l]:l;f.push(t[o][c])}u=\"\"===f.join(\"\").trim()}if(!u){for(var p=0;p<h;p++){0<p&&!d&&(r+=m);var g=n&&s?e[p]:p;r+=k(t[o][g],p)}o<t.length-1&&(!i||0<h&&!d)&&(r+=y)}}return r}function k(e,t){var i,r;return null==e?\"\":e.constructor===Date?JSON.stringify(e).slice(1,25):(r=!1,o&&\"string\"==typeof e&&o.test(e)&&(e=\"'\"+e,r=!0),i=e.toString().replace(h,a),(r=r||!0===n||\"function\"==typeof n&&n(e,t)||Array.isArray(n)&&n[t]||((e,t)=>{for(var i=0;i<t.length;i++)if(-1<e.indexOf(t[i]))return!0;return!1})(i,v.BAD_DELIMITERS)||-1<i.indexOf(m)||\" \"===i.charAt(0)||\" \"===i.charAt(i.length-1))?s+i+s:i)}},v.RECORD_SEP=String.fromCharCode(30),v.UNIT_SEP=String.fromCharCode(31),v.BYTE_ORDER_MARK=\"\\ufeff\",v.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',v.BYTE_ORDER_MARK],v.WORKERS_SUPPORTED=!s&&!!n.Worker,v.NODE_STREAM_INPUT=1,v.LocalChunkSize=10485760,v.RemoteChunkSize=5242880,v.DefaultDelimiter=\",\",v.Parser=E,v.ParserHandle=i,v.NetworkStreamer=f,v.FileStreamer=l,v.StringStreamer=c,v.ReadableStreamStreamer=p,n.jQuery&&((d=n.jQuery).fn.parse=function(o){var i=o.config||{},h=[];return this.each(function(e){if(!(\"INPUT\"===d(this).prop(\"tagName\").toUpperCase()&&\"file\"===d(this).attr(\"type\").toLowerCase()&&n.FileReader)||!this.files||0===this.files.length)return!0;for(var t=0;t<this.files.length;t++)h.push({file:this.files[t],inputElem:this,instanceConfig:d.extend({},i)})}),e(),this;function e(){if(0===h.length)U(o.complete)&&o.complete();else{var e,t,i,r,n=h[0];if(U(o.before)){var s=o.before(n.file,n.inputElem);if(\"object\"==typeof s){if(\"abort\"===s.action)return e=\"AbortError\",t=n.file,i=n.inputElem,r=s.reason,void(U(o.error)&&o.error({name:e},t,i,r));if(\"skip\"===s.action)return void u();\"object\"==typeof s.config&&(n.instanceConfig=d.extend(n.instanceConfig,s.config))}else if(\"skip\"===s)return void u()}var a=n.instanceConfig.complete;n.instanceConfig.complete=function(e){U(a)&&a(e,n.file,n.inputElem),u()},v.parse(n.file,n.instanceConfig)}}function u(){h.splice(0,1),e()}}),a&&(n.onmessage=function(e){e=e.data;void 0===v.WORKER_ID&&e&&(v.WORKER_ID=e.workerId);\"string\"==typeof e.input?n.postMessage({workerId:v.WORKER_ID,results:v.parse(e.input,e.config),finished:!0}):(n.File&&e.input instanceof File||e.input instanceof Object)&&(e=v.parse(e.input,e.config))&&n.postMessage({workerId:v.WORKER_ID,results:e,finished:!0})}),(f.prototype=Object.create(u.prototype)).constructor=f,(l.prototype=Object.create(u.prototype)).constructor=l,(c.prototype=Object.create(c.prototype)).constructor=c,(p.prototype=Object.create(u.prototype)).constructor=p,v});", "import React, { useEffect, useState } from \"react\";\n\nimport {\n  useNavigation,\n  useTranslate,\n  useResource,\n  useGo,\n  useRouterType,\n} from \"@hooks\";\n\n/**\n * When the app is navigated to a non-existent route, refine shows a default error page.\n * A custom error component can be used for this error page.\n *\n * @see {@link https://refine.dev/docs/packages/documentation/routers/} for more details.\n */\nexport const ErrorComponent: React.FC = () => {\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const translate = useTranslate();\n  const { push } = useNavigation();\n  const go = useGo();\n  const routerType = useRouterType();\n\n  const { resource, action } = useResource();\n\n  useEffect(() => {\n    if (resource && action) {\n      setErrorMessage(\n        translate(\n          \"pages.error.info\",\n          {\n            action: action,\n            resource: resource.name,\n          },\n          `You may have forgotten to add the \"${action}\" component to \"${resource.name}\" resource.`,\n        ),\n      );\n    }\n  }, [resource, action]);\n\n  return (\n    <>\n      <h1>\n        {translate(\n          \"pages.error.404\",\n          undefined,\n          \"Sorry, the page you visited does not exist.\",\n        )}\n      </h1>\n      {errorMessage && <p>{errorMessage}</p>}\n      <button\n        onClick={() => {\n          if (routerType === \"legacy\") {\n            push(\"/\");\n          } else {\n            go({ to: \"/\" });\n          }\n        }}\n      >\n        {translate(\"pages.error.backHome\", undefined, \"Back Home\")}\n      </button>\n    </>\n  );\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseQueryOptions,\n  type UseQueryResult,\n  useQuery,\n} from \"@tanstack/react-query\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nimport type { PermissionResponse } from \"../../../contexts/auth/types\";\n\nexport type UsePermissionsLegacyProps<\n  TData = any,\n  TParams extends Record<string, any> = Record<string, any>,\n> = {\n  v3LegacyAuthProviderCompatible: true;\n  options?: UseQueryOptions<TData>;\n  params?: TParams;\n};\n\nexport type UsePermissionsProps<\n  TData = PermissionResponse,\n  TParams extends Record<string, any> = Record<string, any>,\n> = {\n  v3LegacyAuthProviderCompatible?: false;\n  options?: UseQueryOptions<TData>;\n  params?: TParams;\n};\n\nexport type UsePermissionsCombinedProps<\n  TData = any,\n  TParams extends Record<string, any> = Record<string, any>,\n> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  options?: UseQueryOptions<TData> | UseQueryOptions<PermissionResponse>;\n  params?: TParams;\n};\n\nexport type UsePermissionsLegacyReturnType<TData = any> = UseQueryResult<\n  TData,\n  unknown\n>;\n\nexport type UsePermissionsReturnType<TData = PermissionResponse> =\n  UseQueryResult<TData, unknown>;\n\nexport type UsePermissionsCombinedReturnType<TData = any> =\n  | UseQueryResult<TData, unknown>\n  | UseQueryResult<PermissionResponse, unknown>;\n\nexport function usePermissions<\n  TData = any,\n  TParams extends Record<string, any> = Record<string, any>,\n>(\n  props: UsePermissionsLegacyProps<TData, TParams>,\n): UsePermissionsLegacyReturnType<TData>;\n\nexport function usePermissions<\n  TData = PermissionResponse,\n  TParams extends Record<string, any> = Record<string, any>,\n>(props?: UsePermissionsProps<TData, TParams>): UsePermissionsReturnType<TData>;\n\nexport function usePermissions<\n  TData = any,\n  TParams extends Record<string, any> = Record<string, any>,\n>(\n  props?: UsePermissionsCombinedProps<TData, TParams>,\n): UsePermissionsCombinedReturnType<TData>;\n\n/**\n * `usePermissions` calls the `getPermissions` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/usePermissions} for more details.\n *\n * @typeParam TData - Result data of the query\n *\n * @typeParam TParams - Params will be passed to the `getPermissions` method of {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`}.\n *\n */\nexport function usePermissions<\n  TData = any,\n  TParams extends Record<string, any> = Record<string, any>,\n>({\n  v3LegacyAuthProviderCompatible = false,\n  options,\n  params,\n}:\n  | UsePermissionsProps<TData, TParams>\n  | UsePermissionsLegacyProps<TData, TParams> = {}):\n  | UsePermissionsReturnType\n  | UsePermissionsLegacyReturnType<TData> {\n  const { getPermissions: legacyGetPermission } = useLegacyAuthContext();\n  const { getPermissions } = useAuthBindingsContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const queryResponse = useQuery<TData>({\n    queryKey: keys().auth().action(\"permissions\").get(preferLegacyKeys),\n    // Enabled check for `getPermissions` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n    queryFn: (getPermissions\n      ? () => getPermissions(params)\n      : () => Promise.resolve(undefined)) as (\n      params?: unknown,\n    ) => Promise<TData>,\n    enabled: !v3LegacyAuthProviderCompatible && !!getPermissions,\n    ...(v3LegacyAuthProviderCompatible ? {} : options),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? {} : options?.meta),\n      ...getXRay(\"usePermissions\", preferLegacyKeys),\n    },\n  });\n\n  const legacyQueryResponse = useQuery<TData>({\n    queryKey: [\n      ...keys().auth().action(\"permissions\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    // Enabled check for `getPermissions` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n    queryFn: (legacyGetPermission\n      ? () => legacyGetPermission(params)\n      : () => Promise.resolve(undefined)) as (\n      params?: unknown,\n    ) => Promise<TData>,\n    enabled: v3LegacyAuthProviderCompatible && !!legacyGetPermission,\n    ...(v3LegacyAuthProviderCompatible ? options : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? options?.meta : {}),\n      ...getXRay(\"usePermissions\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n", "import React, { type PropsWithChildren } from \"react\";\n\nimport { useNavigation } from \"@hooks\";\n\nimport type { IAuthContext, ILegacyAuthContext } from \"./types\";\n\n/**\n * @deprecated `LegacyAuthContext` is deprecated with refine@4, use `AuthBindingsContext` instead, however, we still support `LegacyAuthContext` for backward compatibility.\n */\nexport const LegacyAuthContext = React.createContext<ILegacyAuthContext>({});\n\n/**\n * @deprecated `LegacyAuthContextProvider` is deprecated with refine@4, use `AuthBindingsContextProvider` instead, however, we still support `LegacyAuthContextProvider` for backward compatibility.\n */\nexport const LegacyAuthContextProvider: React.FC<\n  PropsWithChildren<ILegacyAuthContext>\n> = ({ children, isProvided, ...authOperations }) => {\n  const { replace } = useNavigation();\n\n  const loginFunc = async (params: any) => {\n    try {\n      const result = await authOperations.login?.(params);\n\n      return result;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  const registerFunc = async (params: any) => {\n    try {\n      const result = await authOperations.register?.(params);\n\n      return result;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  const logoutFunc = async (params: any) => {\n    try {\n      const redirectPath = await authOperations.logout?.(params);\n\n      return redirectPath;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  const checkAuthFunc = async (params: any) => {\n    try {\n      await authOperations.checkAuth?.(params);\n      return Promise.resolve();\n    } catch (error) {\n      if ((error as { redirectPath?: string })?.redirectPath) {\n        replace((error as { redirectPath: string }).redirectPath);\n      }\n\n      return Promise.reject(error);\n    }\n  };\n\n  return (\n    <LegacyAuthContext.Provider\n      value={{\n        ...authOperations,\n        login: loginFunc,\n        logout: logoutFunc,\n        checkAuth: checkAuthFunc,\n        register: registerFunc,\n        isProvided,\n      }}\n    >\n      {children}\n    </LegacyAuthContext.Provider>\n  );\n};\n\nexport const AuthBindingsContext = React.createContext<Partial<IAuthContext>>(\n  {},\n);\n\nexport const AuthBindingsContextProvider: React.FC<\n  PropsWithChildren<IAuthContext>\n> = ({ children, isProvided, ...authBindings }) => {\n  const handleLogin = async (params: unknown) => {\n    try {\n      const result = await authBindings.login?.(params);\n\n      return result;\n    } catch (error) {\n      console.warn(\n        \"Unhandled Error in login: refine always expects a resolved promise.\",\n        error,\n      );\n      return Promise.reject(error);\n    }\n  };\n\n  const handleRegister = async (params: unknown) => {\n    try {\n      const result = await authBindings.register?.(params);\n\n      return result;\n    } catch (error) {\n      console.warn(\n        \"Unhandled Error in register: refine always expects a resolved promise.\",\n        error,\n      );\n      return Promise.reject(error);\n    }\n  };\n\n  const handleLogout = async (params: unknown) => {\n    try {\n      const result = await authBindings.logout?.(params);\n\n      return result;\n    } catch (error) {\n      console.warn(\n        \"Unhandled Error in logout: refine always expects a resolved promise.\",\n        error,\n      );\n      return Promise.reject(error);\n    }\n  };\n\n  const handleCheck = async (params: unknown) => {\n    try {\n      const result = await authBindings.check?.(params);\n\n      return Promise.resolve(result);\n    } catch (error) {\n      console.warn(\n        \"Unhandled Error in check: refine always expects a resolved promise.\",\n        error,\n      );\n      return Promise.reject(error);\n    }\n  };\n\n  const handleForgotPassword = async (params: unknown) => {\n    try {\n      const result = await authBindings.forgotPassword?.(params);\n\n      return Promise.resolve(result);\n    } catch (error) {\n      console.warn(\n        \"Unhandled Error in forgotPassword: refine always expects a resolved promise.\",\n        error,\n      );\n      return Promise.reject(error);\n    }\n  };\n\n  const handleUpdatePassword = async (params: unknown) => {\n    try {\n      const result = await authBindings.updatePassword?.(params);\n      return Promise.resolve(result);\n    } catch (error) {\n      console.warn(\n        \"Unhandled Error in updatePassword: refine always expects a resolved promise.\",\n        error,\n      );\n      return Promise.reject(error);\n    }\n  };\n\n  return (\n    <AuthBindingsContext.Provider\n      value={{\n        ...authBindings,\n        login: handleLogin as IAuthContext[\"login\"],\n        logout: handleLogout as IAuthContext[\"logout\"],\n        check: handleCheck as IAuthContext[\"check\"],\n        register: handleRegister as IAuthContext[\"register\"],\n        forgotPassword: handleForgotPassword as IAuthContext[\"forgotPassword\"],\n        updatePassword: handleUpdatePassword as IAuthContext[\"updatePassword\"],\n        isProvided,\n      }}\n    >\n      {children}\n    </AuthBindingsContext.Provider>\n  );\n};\n\n/**\n * @deprecated `useLegacyAuthContext` is deprecated with refine@4, use `useAuthBindingsContext` instead, however, we still support `useLegacyAuthContext` for backward compatibility.\n */\nexport const useLegacyAuthContext = () => {\n  const context = React.useContext(LegacyAuthContext);\n\n  return context;\n};\n\nexport const useAuthBindingsContext = () => {\n  const context = React.useContext(AuthBindingsContext);\n\n  return context;\n};\n", "import differenceWith from \"lodash-es/differenceWith.js\";\nimport unionWith from \"lodash-es/unionWith.js\";\nimport qs, { type IStringifyOptions } from \"qs\";\nimport warnOnce from \"warn-once\";\n\nimport { pickNotDeprecated } from \"@definitions/helpers\";\n\nimport type {\n  CrudFilter,\n  CrudOperators,\n  CrudSort,\n  SortOrder,\n} from \"../../contexts/data/types\";\n\nexport const parseTableParams = (url: string) => {\n  const { current, pageSize, sorter, sorters, filters } = qs.parse(\n    url.substring(1), // remove first ? character\n  );\n\n  return {\n    parsedCurrent: current && Number(current),\n    parsedPageSize: pageSize && Number(pageSize),\n    parsedSorter: (pickNotDeprecated(sorters, sorter) as CrudSort[]) ?? [],\n    parsedFilters: (filters as CrudFilter[]) ?? [],\n  };\n};\n\nexport const parseTableParamsFromQuery = (params: any) => {\n  const url = qs.stringify(params);\n  return parseTableParams(`/${url}`);\n};\n\n/**\n * @internal This function is used to stringify table params from the useTable hook.\n */\nexport const stringifyTableParams = (params: {\n  pagination?: { current?: number; pageSize?: number };\n  sorters: CrudSort[];\n  filters: CrudFilter[];\n  [key: string]: any;\n}): string => {\n  const options: IStringifyOptions = {\n    skipNulls: true,\n    arrayFormat: \"indices\",\n    encode: false,\n  };\n  const { pagination, sorter, sorters, filters, ...rest } = params;\n\n  const queryString = qs.stringify(\n    {\n      ...rest,\n      ...(pagination ? pagination : {}),\n      sorters: pickNotDeprecated(sorters, sorter),\n      filters,\n    },\n    options,\n  );\n\n  return queryString;\n};\n\nexport const compareFilters = (\n  left: CrudFilter,\n  right: CrudFilter,\n): boolean => {\n  if (\n    left.operator !== \"and\" &&\n    left.operator !== \"or\" &&\n    right.operator !== \"and\" &&\n    right.operator !== \"or\"\n  ) {\n    return (\n      (\"field\" in left ? left.field : undefined) ===\n        (\"field\" in right ? right.field : undefined) &&\n      left.operator === right.operator\n    );\n  }\n\n  return (\n    (\"key\" in left ? left.key : undefined) ===\n      (\"key\" in right ? right.key : undefined) &&\n    left.operator === right.operator\n  );\n};\n\nexport const compareSorters = (left: CrudSort, right: CrudSort): boolean =>\n  left.field === right.field;\n// Keep only one CrudFilter per type according to compareFilters\n// Items in the array that is passed first to unionWith have higher priority\n// CrudFilter items with undefined values are necessary to signify no filter\n// After union, don't keep CrudFilter items with undefined value in the result\n// Items in the arrays with higher priority are put at the end.\nexport const unionFilters = (\n  permanentFilter: CrudFilter[],\n  newFilters: CrudFilter[],\n  prevFilters: CrudFilter[] = [],\n): CrudFilter[] => {\n  const isKeyRequired = newFilters.filter(\n    (f) => (f.operator === \"or\" || f.operator === \"and\") && !f.key,\n  );\n\n  if (isKeyRequired.length > 1) {\n    warnOnce(\n      true,\n      \"[conditionalFilters]: You have created multiple Conditional Filters at the top level, this requires the key parameter. \\nFor more information, see https://refine.dev/docs/advanced-tutorials/data-provider/handling-filters/#top-level-multiple-conditional-filters-usage\",\n    );\n  }\n\n  return unionWith(\n    permanentFilter,\n    newFilters,\n    prevFilters,\n    compareFilters,\n  ).filter(\n    (crudFilter) =>\n      crudFilter.value !== undefined &&\n      crudFilter.value !== null &&\n      (crudFilter.operator !== \"or\" ||\n        (crudFilter.operator === \"or\" && crudFilter.value.length !== 0)) &&\n      (crudFilter.operator !== \"and\" ||\n        (crudFilter.operator === \"and\" && crudFilter.value.length !== 0)),\n  );\n};\n\nexport const unionSorters = (\n  permanentSorter: CrudSort[],\n  newSorters: CrudSort[],\n): CrudSort[] =>\n  unionWith(permanentSorter, newSorters, compareSorters).filter(\n    (crudSorter) => crudSorter.order !== undefined && crudSorter.order !== null,\n  );\n// Prioritize filters in the permanentFilter and put it at the end of result array\nexport const setInitialFilters = (\n  permanentFilter: CrudFilter[],\n  defaultFilter: CrudFilter[],\n): CrudFilter[] => [\n  ...differenceWith(defaultFilter, permanentFilter, compareFilters),\n  ...permanentFilter,\n];\n\nexport const setInitialSorters = (\n  permanentSorter: CrudSort[],\n  defaultSorter: CrudSort[],\n): CrudSort[] => [\n  ...differenceWith(defaultSorter, permanentSorter, compareSorters),\n  ...permanentSorter,\n];\n\nexport const getDefaultSortOrder = (\n  columnName: string,\n  sorter?: CrudSort[],\n): SortOrder | undefined => {\n  if (!sorter) {\n    return undefined;\n  }\n\n  const sortItem = sorter.find((item) => item.field === columnName);\n\n  if (sortItem) {\n    return sortItem.order as SortOrder;\n  }\n\n  return undefined;\n};\n\nexport const getDefaultFilter = (\n  columnName: string,\n  filters?: CrudFilter[],\n  operatorType: CrudOperators = \"eq\",\n): CrudFilter[\"value\"] | undefined => {\n  const filter = filters?.find((filter) => {\n    if (\n      filter.operator !== \"or\" &&\n      filter.operator !== \"and\" &&\n      \"field\" in filter\n    ) {\n      const { operator, field } = filter;\n      return field === columnName && operator === operatorType;\n    }\n    return undefined;\n  });\n\n  if (filter) {\n    return filter.value || [];\n  }\n\n  return undefined;\n};\n", "export const userFriendlySecond = (miliseconds: number): number => {\n  return miliseconds / 1000; //convert to seconds\n};\n", "import fromPairs from \"lodash-es/fromPairs.js\";\nimport zip from \"lodash-es/zip.js\";\n\nimport type { MapDataFn } from \"../../../hooks/export/types\";\n\nexport const importCSVMapper = <TItem = any, TVariables = any>(\n  data: any[][],\n  mapData: MapDataFn<TItem, TVariables> = (item) => item as any,\n): TVariables[] => {\n  const [headers, ...body] = data;\n  return body\n    .map((entry) => fromPairs(zip(headers, entry)))\n    .map((item: any, index, array: any) =>\n      mapData.call(undefined, item, index, array),\n    );\n};\n", "import pluralize from \"pluralize\";\nimport { humanizeString } from \"@definitions\";\n\n/**\n * A method that the internal uses\n * @internal\n * @deprecated use `useUserFriendlyName` instead.\n */\nexport const userFriendlyResourceName = (\n  resource = \"\",\n  type: \"singular\" | \"plural\",\n): string => {\n  const humanizeResource = humanizeString(resource);\n  if (type === \"singular\") {\n    return pluralize.singular(humanizeResource);\n  }\n  return pluralize.plural(humanizeResource);\n};\n", "export const handleUseParams = (params: any = {}): any => {\n  if (params?.id) {\n    return {\n      ...params,\n      id: decodeURIComponent(params.id),\n    };\n  }\n  return params;\n};\n", "import type { BaseKey } from \"../../../contexts/data/types\";\n\ntype ParametrizedDataActions = \"list\" | \"infinite\";\ntype IdRequiredDataActions = \"one\";\ntype IdsRequiredDataActions = \"many\";\ntype DataMutationActions =\n  | \"custom\"\n  | \"customMutation\"\n  | \"create\"\n  | \"createMany\"\n  | \"update\"\n  | \"updateMany\"\n  | \"delete\"\n  | \"deleteMany\";\n\ntype AuthActionType =\n  | \"login\"\n  | \"logout\"\n  | \"identity\"\n  | \"register\"\n  | \"forgotPassword\"\n  | \"check\"\n  | \"onError\"\n  | \"permissions\"\n  | \"updatePassword\";\n\ntype AuditActionType = \"list\" | \"log\" | \"rename\";\n\ntype IdType = BaseKey;\ntype IdsType = IdType[];\n\ntype ParamsType = any;\n\ntype KeySegment = string | IdType | IdsType | ParamsType;\n\nexport function arrayFindIndex<T>(array: T[], slice: T[]): number {\n  return array.findIndex(\n    (item, index) =>\n      index <= array.length - slice.length &&\n      slice.every(\n        (sliceItem, sliceIndex) => array[index + sliceIndex] === sliceItem,\n      ),\n  );\n}\n\nexport function arrayReplace<T>(\n  array: T[],\n  partToBeReplaced: T[],\n  newPart: T[],\n): T[] {\n  const newArray: T[] = [...array];\n  const startIndex = arrayFindIndex(array, partToBeReplaced);\n\n  if (startIndex !== -1) {\n    newArray.splice(startIndex, partToBeReplaced.length, ...newPart);\n  }\n\n  return newArray;\n}\n\nexport function stripUndefined(segments: KeySegment[]) {\n  return segments.filter((segment) => segment !== undefined);\n}\n\nfunction convertToLegacy(segments: KeySegment[]) {\n  // for `list`, `many` and `one`\n  if (segments[0] === \"data\") {\n    // [data, dpName, resource, action, ...];\n    const newSegments = segments.slice(1);\n\n    if (newSegments[2] === \"many\") {\n      newSegments[2] = \"getMany\";\n    } else if (newSegments[2] === \"infinite\") {\n      newSegments[2] = \"list\";\n    } else if (newSegments[2] === \"one\") {\n      newSegments[2] = \"detail\";\n    } else if (newSegments[1] === \"custom\") {\n      const newParams = {\n        ...newSegments[2],\n      };\n      delete newParams.method;\n      delete newParams.url;\n\n      return [\n        newSegments[0],\n        newSegments[1],\n        newSegments[2].method,\n        newSegments[2].url,\n        newParams,\n      ];\n    }\n\n    return newSegments;\n  }\n  // for `audit` -> `logList`\n  if (segments[0] === \"audit\") {\n    // [audit, resource, action, params] (for log and list)\n    // or\n    // [audit, action, params] (for rename)\n    if (segments[2] === \"list\") {\n      return [\"logList\", segments[1], segments[3]];\n    }\n  }\n  // for `access` -> `useCan`\n  if (segments[0] === \"access\") {\n    // [access, resource, action, params]\n    if (segments.length === 4) {\n      return [\n        \"useCan\",\n        {\n          resource: segments[1],\n          action: segments[2],\n          ...segments[3], // params: { params, enabled }\n        },\n      ];\n    }\n  }\n  // for `auth`\n  if (segments[0] === \"auth\") {\n    if (arrayFindIndex(segments, [\"auth\", \"login\"]) !== -1) {\n      return [\"useLogin\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"logout\"]) !== -1) {\n      return [\"useLogout\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"identity\"]) !== -1) {\n      return [\"getUserIdentity\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"register\"]) !== -1) {\n      return [\"useRegister\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"forgotPassword\"]) !== -1) {\n      return [\"useForgotPassword\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"check\"]) !== -1) {\n      return [\"useAuthenticated\", segments[2]]; // [auth, check, params]\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"onError\"]) !== -1) {\n      return [\"useCheckError\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"permissions\"]) !== -1) {\n      return [\"usePermissions\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"updatePassword\"]) !== -1) {\n      return [\"useUpdatePassword\"];\n    }\n  }\n  return segments;\n}\n\nclass BaseKeyBuilder {\n  segments: KeySegment[] = [];\n\n  constructor(segments: KeySegment[] = []) {\n    this.segments = segments;\n  }\n\n  key() {\n    return this.segments;\n  }\n\n  legacy() {\n    return convertToLegacy(this.segments);\n  }\n\n  get(legacy?: boolean) {\n    return legacy ? this.legacy() : this.segments;\n  }\n}\n\nclass ParamsKeyBuilder extends BaseKeyBuilder {\n  params(paramsValue?: ParamsType) {\n    return new BaseKeyBuilder([...this.segments, paramsValue]);\n  }\n}\n\nclass DataIdRequiringKeyBuilder extends BaseKeyBuilder {\n  id(idValue?: IdType) {\n    return new ParamsKeyBuilder([\n      ...this.segments,\n      idValue ? String(idValue) : undefined,\n    ]);\n  }\n}\n\nclass DataIdsRequiringKeyBuilder extends BaseKeyBuilder {\n  ids(...idsValue: IdsType) {\n    return new ParamsKeyBuilder([\n      ...this.segments,\n      ...(idsValue.length ? [idsValue.map((el) => String(el))] : []),\n    ]);\n  }\n}\n\nclass DataResourceKeyBuilder extends BaseKeyBuilder {\n  action(actionType: ParametrizedDataActions): ParamsKeyBuilder;\n  action(actionType: IdRequiredDataActions): DataIdRequiringKeyBuilder;\n  action(actionType: IdsRequiredDataActions): DataIdsRequiringKeyBuilder;\n  action(\n    actionType:\n      | ParametrizedDataActions\n      | IdRequiredDataActions\n      | IdsRequiredDataActions,\n  ): ParamsKeyBuilder | DataIdRequiringKeyBuilder | DataIdsRequiringKeyBuilder {\n    if (actionType === \"one\") {\n      return new DataIdRequiringKeyBuilder([...this.segments, actionType]);\n    }\n    if (actionType === \"many\") {\n      return new DataIdsRequiringKeyBuilder([...this.segments, actionType]);\n    }\n    if ([\"list\", \"infinite\"].includes(actionType)) {\n      return new ParamsKeyBuilder([...this.segments, actionType]);\n    }\n    throw new Error(\"Invalid action type\");\n  }\n}\n\nclass DataKeyBuilder extends BaseKeyBuilder {\n  resource(resourceName?: string) {\n    return new DataResourceKeyBuilder([...this.segments, resourceName]);\n  }\n\n  mutation(mutationName: DataMutationActions) {\n    return new ParamsKeyBuilder([\n      ...(mutationName === \"custom\" ? this.segments : [this.segments[0]]),\n      mutationName,\n    ]);\n  }\n}\n\nclass AuthKeyBuilder extends BaseKeyBuilder {\n  action(actionType: AuthActionType) {\n    return new ParamsKeyBuilder([...this.segments, actionType]);\n  }\n}\n\nclass AccessResourceKeyBuilder extends BaseKeyBuilder {\n  action(resourceName: string) {\n    return new ParamsKeyBuilder([...this.segments, resourceName]);\n  }\n}\n\nclass AccessKeyBuilder extends BaseKeyBuilder {\n  resource(resourceName?: string) {\n    return new AccessResourceKeyBuilder([...this.segments, resourceName]);\n  }\n}\n\nclass AuditActionKeyBuilder extends BaseKeyBuilder {\n  action(actionType: Extract<AuditActionType, \"list\">) {\n    return new ParamsKeyBuilder([...this.segments, actionType]);\n  }\n}\n\nclass AuditKeyBuilder extends BaseKeyBuilder {\n  resource(resourceName?: string) {\n    return new AuditActionKeyBuilder([...this.segments, resourceName]);\n  }\n\n  action(actionType: Extract<AuditActionType, \"rename\" | \"log\">) {\n    return new ParamsKeyBuilder([...this.segments, actionType]);\n  }\n}\n\nexport class KeyBuilder extends BaseKeyBuilder {\n  data(name?: string) {\n    return new DataKeyBuilder([\"data\", name || \"default\"]);\n  }\n\n  auth() {\n    return new AuthKeyBuilder([\"auth\"]);\n  }\n\n  access() {\n    return new AccessKeyBuilder([\"access\"]);\n  }\n\n  audit() {\n    return new AuditKeyBuilder([\"audit\"]);\n  }\n}\n\nexport const keys = () => new KeyBuilder([]);\n", "/*\n * Returns first value that is not undefined.\n * @internal This is an internal helper function. Please do not use externally.\n */\nexport const pickNotDeprecated = <T extends unknown[]>(\n  ...args: T\n): T[never] => {\n  return args.find((arg) => typeof arg !== \"undefined\");\n};\n", "import type { QueryKey } from \"@tanstack/react-query\";\n\nimport type { IQueryKeys, MetaQuery } from \"../../../contexts/data/types\";\nimport { keys as newKeys } from \"../keys\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * @deprecated `queryKeys` is deprecated. Please use `keys` instead.\n */\nexport const queryKeys = (\n  resource?: string,\n  dataProviderName?: string,\n  meta?: MetaQuery,\n  /**\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery | undefined,\n): IQueryKeys => {\n  const providerName = dataProviderName || \"default\";\n  const keys: IQueryKeys = {\n    all: [providerName],\n    resourceAll: [providerName, resource || \"\"],\n    list: (config) => [\n      ...keys.resourceAll,\n      \"list\",\n      {\n        ...config,\n        ...(pickNotDeprecated(meta, metaData) || {}),\n      } as QueryKey,\n    ],\n    many: (ids) =>\n      [\n        ...keys.resourceAll,\n        \"getMany\",\n        ids?.map(String) as QueryKey,\n        { ...(pickNotDeprecated(meta, metaData) || {}) } as QueryKey,\n      ].filter((item) => item !== undefined),\n    detail: (id) => [\n      ...keys.resourceAll,\n      \"detail\",\n      id?.toString(),\n      { ...(pickNotDeprecated(meta, metaData) || {}) } as QueryKey,\n    ],\n    logList: (meta) =>\n      [\"logList\", resource, meta as any, metaData as QueryKey].filter(\n        (item) => item !== undefined,\n      ),\n  };\n  return keys;\n};\n\nexport const queryKeysReplacement = (preferLegacyKeys?: boolean) => {\n  return (\n    resource?: string,\n    dataProviderName?: string,\n    meta?: MetaQuery,\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery | undefined,\n  ): IQueryKeys => {\n    const providerName = dataProviderName || \"default\";\n\n    const keys: IQueryKeys = {\n      all: newKeys().data(providerName).get(preferLegacyKeys),\n      resourceAll: newKeys()\n        .data(dataProviderName)\n        .resource(resource ?? \"\")\n        .get(preferLegacyKeys),\n      list: (config) =>\n        newKeys()\n          .data(dataProviderName)\n          .resource(resource ?? \"\")\n          .action(\"list\")\n          .params({\n            ...config,\n            ...(pickNotDeprecated(meta, metaData) || {}),\n          })\n          .get(preferLegacyKeys),\n      many: (ids) =>\n        newKeys()\n          .data(dataProviderName)\n          .resource(resource ?? \"\")\n          .action(\"many\")\n          .ids(...(ids ?? []))\n          .params({\n            ...(pickNotDeprecated(meta, metaData) || {}),\n          })\n          .get(preferLegacyKeys),\n      detail: (id) =>\n        newKeys()\n          .data(dataProviderName)\n          .resource(resource ?? \"\")\n          .action(\"one\")\n          .id(id ?? \"\")\n          .params({\n            ...(pickNotDeprecated(meta, metaData) || {}),\n          })\n          .get(preferLegacyKeys),\n      logList: (meta) =>\n        [\n          ...newKeys()\n            .audit()\n            .resource(resource)\n            .action(\"list\")\n            .params(meta)\n            .get(preferLegacyKeys),\n          metaData as QueryKey,\n        ].filter((item) => item !== undefined),\n    };\n\n    return keys;\n  };\n};\n", "export const hasPermission = (\n  permissions: string[] | undefined,\n  action: string | undefined,\n): boolean => {\n  if (!permissions || !action) {\n    return false;\n  }\n  return !!permissions.find((i) => i === action);\n};\n", "/**\n * Check if a segment is a parameter. (e.g. :id)\n */\nexport const isParameter = (segment: string) => {\n  return segment.startsWith(\":\");\n};\n", "/**\n * Split a path to segments.\n */\nexport const splitToSegments = (path: string) => {\n  const segments = path.split(\"/\").filter((segment) => segment !== \"\");\n  return segments;\n};\n", "import { splitToSegments } from \"./split-to-segments\";\n\n/**\n * Checks if the both routes have the same number of segments.\n */\nexport const isSegmentCountsSame = (route: string, resourceRoute: string) => {\n  const routeSegments = splitToSegments(route);\n  const resourceRouteSegments = splitToSegments(resourceRoute);\n\n  return routeSegments.length === resourceRouteSegments.length;\n};\n", "/**\n * Remove leading and trailing slashes from a route.\n */\nexport const removeLeadingTrailingSlashes = (route: string) => {\n  return route.replace(/^\\/|\\/$/g, \"\");\n};\n", "import { isParameter } from \"./is-parameter\";\nimport { isSegmentCountsSame } from \"./is-segment-counts-same\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { splitToSegments } from \"./split-to-segments\";\n\n/**\n * This function if the route and resourceRoute match by segments.\n * - First, trailing and leading slashes are removed\n * - Then, the route and resourceRoute are split to segments and checked if they have the same number of segments\n * - Then, each segment is checked if it is a parameter or if it matches the resourceRoute segment\n * - If all segments match, the function returns true, otherwise false\n */\nexport const checkBySegments = (route: string, resourceRoute: string) => {\n  const stdRoute = removeLeadingTrailingSlashes(route);\n  const stdResourceRoute = removeLeadingTrailingSlashes(resourceRoute);\n  // we need to check if the route and resourceRoute have the same number of segments\n  // if not, we can't match them\n  if (!isSegmentCountsSame(stdRoute, stdResourceRoute)) {\n    return false;\n  }\n\n  const routeSegments = splitToSegments(stdRoute);\n  const resourceRouteSegments = splitToSegments(stdResourceRoute);\n\n  return resourceRouteSegments.every((segment, index) => {\n    return isParameter(segment) || segment === routeSegments[index];\n  });\n};\n", "import type { Action } from \"../../../contexts/router/types\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\n\n/**\n * This helper function returns the default path for a given action and resource.\n * It also applies the parentPrefix if provided.\n * This is used by the legacy router and the new router if the resource doesn't provide a custom path.\n */\nexport const getDefaultActionPath = (\n  resourceName: string,\n  action: Action,\n  parentPrefix?: string,\n): string => {\n  const cleanParentPrefix = removeLeadingTrailingSlashes(parentPrefix || \"\");\n\n  let path = `${cleanParentPrefix}${\n    cleanParentPrefix ? \"/\" : \"\"\n  }${resourceName}`;\n\n  if (action === \"list\") {\n    path = `${path}`;\n  } else if (action === \"create\") {\n    path = `${path}/create`;\n  } else if (action === \"edit\") {\n    path = `${path}/edit/:id`;\n  } else if (action === \"show\") {\n    path = `${path}/show/:id`;\n  } else if (action === \"clone\") {\n    path = `${path}/clone/:id`;\n  }\n\n  return `/${path.replace(/^\\//, \"\")}`;\n};\n", "import type { IResourceItem } from \"../../../contexts/resource/types\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * Returns the parent resource of the given resource.\n * Works both with the deprecated `parentName` and the new `parent` property.\n */\nexport const getParentResource = (\n  resource: IResourceItem,\n  resources: IResourceItem[],\n): IResourceItem | undefined => {\n  const parentName = pickNotDeprecated(\n    resource.meta?.parent,\n    resource.options?.parent,\n    resource.parentName,\n  );\n\n  if (!parentName) {\n    return undefined;\n  }\n\n  const parentResource = resources.find(\n    (resource) => (resource.identifier ?? resource.name) === parentName,\n  );\n\n  /**\n   * If the parent resource is not found, we return a resource object with the name of the parent resource.\n   * Because we still want to have nesting and prefixing for the resource even if the parent is not explicitly defined.\n   */\n  return parentResource ?? { name: parentName };\n};\n", "import type { ResourceProps } from \"../../../contexts/resource/types\";\nimport { getParentResource } from \"./get-parent-resource\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\n\n/**\n * Returns the parent prefix for a resource\n * - If `legacy` is provided, the computation is based on the `route` option of the resource\n */\nexport const getParentPrefixForResource = (\n  resource: ResourceProps,\n  resources: ResourceProps[],\n  /**\n   * Uses legacy route if true (`options.route`)\n   */\n  legacy?: boolean,\n): string | undefined => {\n  const parents: ResourceProps[] = [];\n\n  let parent = getParentResource(resource, resources);\n\n  while (parent) {\n    parents.push(parent);\n    parent = getParentResource(parent, resources);\n  }\n\n  if (parents.length === 0) {\n    return undefined;\n  }\n\n  return `/${parents\n    .reverse()\n    .map((parent) => {\n      const v = legacy ? parent.options?.route ?? parent.name : parent.name;\n      return removeLeadingTrailingSlashes(v);\n    })\n    .join(\"/\")}`;\n};\n", "import type { IResourceItem } from \"../../../contexts/resource/types\";\nimport type { Action } from \"../../../contexts/router/types\";\nimport { getDefaultActionPath } from \"./get-default-action-path\";\nimport { getParentPrefixForResource } from \"./get-parent-prefix-for-resource\";\n\nexport type ResourceActionRoute = {\n  action: Action;\n  resource: IResourceItem;\n  route: string;\n};\n\n/**\n * This function returns all the routes for available actions for a resource.\n * - If the action is a function, it means we're fallbacking to default path for the action\n * - If the action is a string, it means we don't have the component, but we have the route\n * - If the action is an object, it means we have the component and the route\n * - It will return an array of objects with the action, the resource and the route\n */\nexport const getActionRoutesFromResource = (\n  resource: IResourceItem,\n  resources: IResourceItem[],\n  /**\n   * Uses legacy route if true (`options.route`)\n   */\n  legacy?: boolean,\n) => {\n  const actions: ResourceActionRoute[] = [];\n\n  const actionList: Action[] = [\"list\", \"show\", \"edit\", \"create\", \"clone\"];\n\n  const parentPrefix = getParentPrefixForResource(resource, resources, legacy);\n\n  actionList.forEach((action) => {\n    const item =\n      legacy && action === \"clone\" ? resource.create : resource[action];\n\n    let route: string | undefined = undefined;\n\n    if (typeof item === \"function\" || legacy) {\n      // means we're fallbacking to default path for the action\n      route = getDefaultActionPath(\n        legacy\n          ? resource.meta?.route ?? resource.options?.route ?? resource.name\n          : resource.name,\n        action,\n        legacy ? parentPrefix : undefined,\n      );\n    } else if (typeof item === \"string\") {\n      // means we don't have the component, but we have the route\n      route = item;\n    } else if (typeof item === \"object\") {\n      // means we have the component and the route\n      route = item.path;\n    }\n\n    if (route) {\n      actions.push({\n        action,\n        resource,\n        route: `/${route.replace(/^\\//, \"\")}`,\n      });\n    }\n  });\n\n  return actions;\n};\n", "import type { ResourceActionRoute } from \"./get-action-routes-from-resource\";\nimport { isParameter } from \"./is-parameter\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { splitToSegments } from \"./split-to-segments\";\n\n/**\n * Picks the most eligible route from the given matched routes.\n * - If there's only one route, it returns it.\n * - If there's more than one route, it picks the best non-greedy match.\n */\nexport const pickMatchedRoute = (\n  routes: ResourceActionRoute[],\n): ResourceActionRoute | undefined => {\n  // these routes are all matched, we should pick the least parametrized one\n\n  // no routes, no match\n  if (routes.length === 0) {\n    return undefined;\n  }\n\n  // no need to calculate the route segments if there's only one route\n  if (routes.length === 1) {\n    return routes[0];\n  }\n\n  // remove trailing and leading slashes\n  // split them to segments\n  const sanitizedRoutes = routes.map((route) => ({\n    ...route,\n    splitted: splitToSegments(removeLeadingTrailingSlashes(route.route)),\n  }));\n\n  // at this point, before calling this function, we already checked for segment lenghts and expect all of them to be the same\n  const segmentsCount = sanitizedRoutes[0]?.splitted.length ?? 0;\n\n  let eligibleRoutes: Array<(typeof sanitizedRoutes)[number]> = [\n    ...sanitizedRoutes,\n  ];\n\n  // loop through the segments\n  for (let i = 0; i < segmentsCount; i++) {\n    const nonParametrizedRoutes = eligibleRoutes.filter(\n      (route) => !isParameter(route.splitted[i]),\n    );\n\n    if (nonParametrizedRoutes.length === 0) {\n      // keep the eligible routes as they are\n      continue;\n    }\n    if (nonParametrizedRoutes.length === 1) {\n      // no need to continue, we found the route\n      eligibleRoutes = nonParametrizedRoutes;\n      break;\n    }\n\n    // we have more than one non-parametrized route, we need to check the next segment\n    eligibleRoutes = nonParametrizedRoutes;\n  }\n\n  return eligibleRoutes[0];\n};\n", "import type { IResourceItem } from \"../../../contexts/resource/types\";\nimport type { Action } from \"../../../contexts/router/types\";\nimport { checkBySegments } from \"./check-by-segments\";\nimport { getActionRoutesFromResource } from \"./get-action-routes-from-resource\";\nimport { pickMatchedRoute } from \"./pick-matched-route\";\n\n/**\n * Match the resource from the route\n * - It will calculate all possible routes for resources and their actions\n * - It will check if the route matches any of the possible routes\n * - It will return the most eligible resource and action\n */\nexport const matchResourceFromRoute = (\n  route: string,\n  resources: IResourceItem[],\n): {\n  found: boolean;\n  resource?: IResourceItem;\n  action?: Action;\n  matchedRoute?: string;\n} => {\n  const allActionRoutes = resources.flatMap((resource) => {\n    return getActionRoutesFromResource(resource, resources);\n  });\n\n  const allFound = allActionRoutes.filter((actionRoute) => {\n    return checkBySegments(route, actionRoute.route);\n  });\n\n  const mostEligible = pickMatchedRoute(allFound);\n\n  return {\n    found: !!mostEligible,\n    resource: mostEligible?.resource,\n    action: mostEligible?.action,\n    matchedRoute: mostEligible?.route,\n  };\n};\n", "import type { ResourceProps } from \"../../../contexts/resource/types\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\nimport { getParentPrefixForResource } from \"../router\";\n\n/**\n * generates route for the resource based on parents and custom routes\n * @deprecated this is a **legacy** function and works only with the old resource definition\n */\nexport const routeGenerator = (\n  item: ResourceProps,\n  resourcesFromProps: ResourceProps[],\n): string | undefined => {\n  let route;\n\n  const parentPrefix = getParentPrefixForResource(\n    item,\n    resourcesFromProps,\n    true,\n  );\n\n  if (parentPrefix) {\n    const meta = pickNotDeprecated(item.meta, item.options);\n    route = `${parentPrefix}/${meta?.route ?? item.name}`;\n  } else {\n    route = item.options?.route ?? item.name;\n  }\n\n  return `/${route.replace(/^\\//, \"\")}`;\n};\n", "import { pickNotDeprecated } from \"@definitions/helpers/pickNotDeprecated\";\n\nimport type {\n  IMenuItem,\n  IResourceItem,\n  ITreeMenu,\n} from \"../../../../contexts/resource/types\";\n\n/**\n * @deprecated This helper is deprecated. Please use `createTree` instead.\n */\nexport const createTreeView = (\n  resources: IResourceItem[] | IMenuItem[],\n): ITreeMenu[] | ITreeMenu[] => {\n  const tree = [];\n  const resourcesRouteObject: { [key: string]: any } = {};\n  const resourcesNameObject: { [key: string]: any } = {};\n  let parent: IResourceItem | IMenuItem;\n  let child: ITreeMenu;\n\n  for (let i = 0; i < resources.length; i++) {\n    parent = resources[i];\n\n    const route =\n      parent.route ??\n      pickNotDeprecated(parent?.meta, parent.options)?.route ??\n      \"\";\n\n    resourcesRouteObject[route] = parent;\n    resourcesRouteObject[route][\"children\"] = [];\n\n    resourcesNameObject[parent.name] = parent;\n    resourcesNameObject[parent.name][\"children\"] = [];\n  }\n\n  for (const name in resourcesRouteObject) {\n    if (Object.hasOwn(resourcesRouteObject, name)) {\n      child = resourcesRouteObject[name];\n\n      if (child.parentName && resourcesNameObject[child.parentName]) {\n        resourcesNameObject[child.parentName][\"children\"].push(child);\n      } else {\n        tree.push(child);\n      }\n    }\n  }\n\n  return tree;\n};\n", "export const humanizeString = (text: string): string => {\n  text = text.replace(/([a-z]{1})([A-Z]{1})/g, \"$1-$2\");\n  text = text.replace(/([A-Z]{1})([A-Z]{1})([a-z]{1})/g, \"$1-$2$3\");\n\n  text = text\n    .toLowerCase()\n    .replace(/[_-]+/g, \" \")\n    .replace(/\\s{2,}/g, \" \")\n    .trim();\n  text = text.charAt(0).toUpperCase() + text.slice(1);\n\n  return text;\n};\n// https://www.npmjs.com/package/humanize-string\n", "import React from \"react\";\n\nimport pluralize from \"pluralize\";\n\nimport { DefaultLayout } from \"@components/layoutWrapper/defaultLayout\";\n\nimport { humanizeString } from \"../../definitions/helpers/humanizeString\";\nimport type {\n  IRefineContext,\n  IRefineContextOptions,\n  IRefineContextProvider,\n} from \"./types\";\n\nimport { LoginPage as DefaultLoginPage } from \"@components/pages\";\n\nconst defaultTitle: IRefineContextOptions[\"title\"] = {\n  icon: (\n    <svg\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      data-testid=\"refine-logo\"\n      id=\"refine-default-logo\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M13.7889 0.422291C12.6627 -0.140764 11.3373 -0.140764 10.2111 0.422291L2.21115 4.42229C0.85601 5.09986 0 6.48491 0 8V16C0 17.5151 0.85601 18.9001 2.21115 19.5777L10.2111 23.5777C11.3373 24.1408 12.6627 24.1408 13.7889 23.5777L21.7889 19.5777C23.144 18.9001 24 17.5151 24 16V8C24 6.48491 23.144 5.09986 21.7889 4.42229L13.7889 0.422291ZM8 8C8 5.79086 9.79086 4 12 4C14.2091 4 16 5.79086 16 8V16C16 18.2091 14.2091 20 12 20C9.79086 20 8 18.2091 8 16V8Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M14 8C14 9.10457 13.1046 10 12 10C10.8954 10 10 9.10457 10 8C10 6.89543 10.8954 6 12 6C13.1046 6 14 6.89543 14 8Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  text: \"Refine Project\",\n};\n\nexport const defaultRefineOptions: IRefineContextOptions = {\n  mutationMode: \"pessimistic\",\n  syncWithLocation: false,\n  undoableTimeout: 5000,\n  warnWhenUnsavedChanges: false,\n  liveMode: \"off\",\n  redirect: {\n    afterCreate: \"list\",\n    afterClone: \"list\",\n    afterEdit: \"list\",\n  },\n  overtime: {\n    enabled: true,\n    interval: 1000,\n  },\n  textTransformers: {\n    humanize: humanizeString,\n    plural: pluralize.plural,\n    singular: pluralize.singular,\n  },\n  disableServerSideValidation: false,\n  title: defaultTitle,\n};\n\nexport const RefineContext = React.createContext<IRefineContext>({\n  hasDashboard: false,\n  mutationMode: \"pessimistic\",\n  warnWhenUnsavedChanges: false,\n  syncWithLocation: false,\n  undoableTimeout: 5000,\n  Title: undefined,\n  Sider: undefined,\n  Header: undefined,\n  Footer: undefined,\n  Layout: DefaultLayout,\n  OffLayoutArea: undefined,\n  liveMode: \"off\",\n  onLiveEvent: undefined,\n  options: defaultRefineOptions,\n});\n\nexport const RefineContextProvider: React.FC<IRefineContextProvider> = ({\n  hasDashboard,\n  mutationMode,\n  warnWhenUnsavedChanges,\n  syncWithLocation,\n  undoableTimeout,\n  children,\n  DashboardPage,\n  Title,\n  Layout = DefaultLayout,\n  Header,\n  Sider,\n  Footer,\n  OffLayoutArea,\n  LoginPage = DefaultLoginPage,\n  catchAll,\n  liveMode = \"off\",\n  onLiveEvent,\n  options,\n}) => {\n  return (\n    <RefineContext.Provider\n      value={{\n        __initialized: true,\n        hasDashboard,\n        mutationMode,\n        warnWhenUnsavedChanges,\n        syncWithLocation,\n        Title,\n        undoableTimeout,\n        Layout,\n        Header,\n        Sider,\n        Footer,\n        OffLayoutArea,\n        DashboardPage,\n        LoginPage,\n        catchAll,\n        liveMode,\n        onLiveEvent,\n        options,\n      }}\n    >\n      {children}\n    </RefineContext.Provider>\n  );\n};\n", "import React from \"react\";\n\nimport type { LayoutProps } from \"../../../contexts/refine/types\";\n\nexport const DefaultLayout: React.FC<LayoutProps> = ({ children }) => {\n  return <div>{children}</div>;\n};\n", "import type { QueryClient, QueryClientConfig } from \"@tanstack/react-query\";\n\nimport { defaultRefineOptions } from \"@contexts/refine\";\n\nimport type { MutationMode } from \"../../../contexts/data/types\";\nimport type { LiveModeProps } from \"../../../contexts/live/types\";\nimport type {\n  IRefineContextOptions,\n  IRefineOptions,\n} from \"../../../contexts/refine/types\";\n\ntype HandleRefineOptionsProps = {\n  options?: IRefineOptions;\n  mutationMode?: MutationMode;\n  syncWithLocation?: boolean;\n  warnWhenUnsavedChanges?: boolean;\n  undoableTimeout?: number;\n  liveMode?: LiveModeProps[\"liveMode\"];\n  disableTelemetry?: boolean;\n  reactQueryClientConfig?: QueryClientConfig;\n  reactQueryDevtoolConfig?: any | false;\n};\n\ntype HandleRefineOptionsReturnValues = {\n  optionsWithDefaults: IRefineContextOptions;\n  disableTelemetryWithDefault: boolean;\n  reactQueryWithDefaults: {\n    clientConfig: QueryClientConfig | InstanceType<typeof QueryClient>;\n    devtoolConfig: false | any;\n  };\n};\n\nexport const handleRefineOptions = ({\n  options,\n  disableTelemetry,\n  liveMode,\n  mutationMode,\n  reactQueryClientConfig,\n  reactQueryDevtoolConfig,\n  syncWithLocation,\n  undoableTimeout,\n  warnWhenUnsavedChanges,\n}: HandleRefineOptionsProps = {}): HandleRefineOptionsReturnValues => {\n  const optionsWithDefaults: IRefineContextOptions = {\n    breadcrumb: options?.breadcrumb,\n    mutationMode:\n      options?.mutationMode ??\n      mutationMode ??\n      defaultRefineOptions.mutationMode,\n    undoableTimeout:\n      options?.undoableTimeout ??\n      undoableTimeout ??\n      defaultRefineOptions.undoableTimeout,\n    syncWithLocation:\n      options?.syncWithLocation ??\n      syncWithLocation ??\n      defaultRefineOptions.syncWithLocation,\n    warnWhenUnsavedChanges:\n      options?.warnWhenUnsavedChanges ??\n      warnWhenUnsavedChanges ??\n      defaultRefineOptions.warnWhenUnsavedChanges,\n    liveMode: options?.liveMode ?? liveMode ?? defaultRefineOptions.liveMode,\n    redirect: {\n      afterCreate:\n        options?.redirect?.afterCreate ??\n        defaultRefineOptions.redirect.afterCreate,\n      afterClone:\n        options?.redirect?.afterClone ??\n        defaultRefineOptions.redirect.afterClone,\n      afterEdit:\n        options?.redirect?.afterEdit ?? defaultRefineOptions.redirect.afterEdit,\n    },\n    overtime: options?.overtime ?? defaultRefineOptions.overtime,\n    textTransformers: {\n      humanize:\n        options?.textTransformers?.humanize ??\n        defaultRefineOptions.textTransformers.humanize,\n      plural:\n        options?.textTransformers?.plural ??\n        defaultRefineOptions.textTransformers.plural,\n      singular:\n        options?.textTransformers?.singular ??\n        defaultRefineOptions.textTransformers.singular,\n    },\n    disableServerSideValidation:\n      options?.disableServerSideValidation ??\n      defaultRefineOptions.disableServerSideValidation,\n    projectId: options?.projectId,\n    useNewQueryKeys: options?.useNewQueryKeys,\n    title: {\n      icon:\n        typeof options?.title?.icon === \"undefined\"\n          ? defaultRefineOptions.title.icon\n          : options?.title?.icon,\n      text:\n        typeof options?.title?.text === \"undefined\"\n          ? defaultRefineOptions.title.text\n          : options?.title?.text,\n    },\n  };\n\n  const disableTelemetryWithDefault =\n    options?.disableTelemetry ?? disableTelemetry ?? false;\n\n  const reactQueryWithDefaults = {\n    clientConfig:\n      options?.reactQuery?.clientConfig ?? reactQueryClientConfig ?? {},\n    devtoolConfig:\n      options?.reactQuery?.devtoolConfig ?? reactQueryDevtoolConfig ?? {},\n  };\n\n  return {\n    optionsWithDefaults,\n    disableTelemetryWithDefault,\n    reactQueryWithDefaults,\n  };\n};\n", "import type { IRefineContextOptions } from \"../../../contexts/refine/types\";\nimport type { Action } from \"../../../contexts/router/types\";\nimport type { RedirectAction } from \"../../../hooks/form/types\";\n\ntype RedirectPageProps = {\n  redirectFromProps?: RedirectAction;\n  action: Action;\n  redirectOptions: IRefineContextOptions[\"redirect\"];\n};\n\nexport const redirectPage = ({\n  redirectFromProps,\n  action,\n  redirectOptions,\n}: RedirectPageProps): RedirectAction => {\n  if (redirectFromProps || redirectFromProps === false) {\n    return redirectFromProps;\n  }\n\n  switch (action) {\n    case \"clone\":\n      return redirectOptions.afterClone;\n    case \"create\":\n      return redirectOptions.afterCreate;\n    case \"edit\":\n      return redirectOptions.afterEdit;\n    default:\n      return false;\n  }\n};\n", "type EachResolve<TResolve, Response> = (\n  result: TResolve,\n  index: number,\n) => Response;\ntype EachReject<TReject, Response> = (\n  error: TReject,\n  index: number,\n) => Response;\n\nexport const sequentialPromises = async <\n  TResolve = unknown,\n  TReject = unknown,\n  TResolveResponse = unknown,\n  TRejectResponse = unknown,\n>(\n  promises: (() => Promise<TResolve>)[],\n  onEachResolve: EachResolve<TResolve, TResolveResponse>,\n  onEachReject: EachReject<TReject, TRejectResponse>,\n): Promise<(TResolveResponse | TRejectResponse)[]> => {\n  const results = [];\n  // @ts-expect-error Remove this when we enable `downLevelIterations`\n  for (const [index, promise] of promises.entries()) {\n    try {\n      const result = await promise();\n\n      results.push(onEachResolve(result, index));\n    } catch (error) {\n      results.push(onEachReject(error as TReject, index));\n    }\n  }\n  return results;\n};\n", "import type { IResourceItem } from \"../../../contexts/resource/types\";\nimport { removeLeadingTrailingSlashes } from \"../router/remove-leading-trailing-slashes\";\n\n/**\n * Picks the resource based on the provided identifier.\n * Identifier fallbacks to `name` if `identifier` is not explicitly provided to the resource.\n * If legacy is true, then resource is matched by `route` first and then by `name`.\n */\nexport const pickResource = (\n  identifier?: string,\n  resources: IResourceItem[] = [],\n  /**\n   * If true, the identifier will be checked for `route` and `name` properties\n   */\n  legacy = false,\n): IResourceItem | undefined => {\n  if (!identifier) {\n    return undefined;\n  }\n\n  if (legacy) {\n    const resourceByRoute = resources.find(\n      (r) =>\n        removeLeadingTrailingSlashes(r.route ?? \"\") ===\n        removeLeadingTrailingSlashes(identifier),\n    );\n\n    const resource = resourceByRoute\n      ? resourceByRoute\n      : resources.find((r) => r.name === identifier);\n\n    return resource;\n  }\n\n  let resource = resources.find((r) => r.identifier === identifier);\n  if (!resource) {\n    resource = resources.find((r) => r.name === identifier);\n  }\n\n  return resource;\n};\n", "import type { IResourceItem } from \"../../../contexts/resource/types\";\nimport { pickResource } from \"../pick-resource\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * Picks the data provider name based on the provided name or fallbacks to resource definition, or `default`.\n */\nexport const pickDataProvider = (\n  resourceName?: string,\n  dataProviderName?: string,\n  resources?: IResourceItem[],\n) => {\n  if (dataProviderName) {\n    return dataProviderName;\n  }\n\n  /**\n   * In this helper, we don't do `route` based matching therefore there's no need to check for `legacy` behaviors.\n   */\n  const resource = pickResource(resourceName, resources);\n\n  const meta = pickNotDeprecated(resource?.meta, resource?.options);\n\n  if (meta?.dataProviderName) {\n    return meta.dataProviderName;\n  }\n\n  return \"default\";\n};\n", "export const handleMultiple = async <TData = unknown>(\n  promises: Promise<{ data: TData }>[],\n): Promise<{ data: TData[] }> => {\n  return {\n    data: (await Promise.all(promises)).map((res) => res.data),\n  };\n};\n", "import type { GetListResponse } from \"../../../contexts/data/types\";\n\nexport const getNextPageParam = (lastPage: GetListResponse) => {\n  const { pagination, cursor } = lastPage;\n\n  // cursor pagination\n  if (cursor?.next) {\n    return cursor.next;\n  }\n\n  const current = pagination?.current || 1;\n\n  const pageSize = pagination?.pageSize || 10;\n  const totalPages = Math.ceil((lastPage.total || 0) / pageSize);\n\n  return current < totalPages ? Number(current) + 1 : undefined;\n};\n\nexport const getPreviousPageParam = (lastPage: GetListResponse) => {\n  const { pagination, cursor } = lastPage;\n\n  // cursor pagination\n  if (cursor?.prev) {\n    return cursor.prev;\n  }\n\n  const current = pagination?.current || 1;\n\n  return current === 1 ? undefined : current - 1;\n};\n", "import type {\n  IResourceItem,\n  ResourceProps,\n} from \"../../../contexts/resource/types\";\nimport { routeGenerator } from \"../routeGenerator\";\n\n/**\n * For the legacy definition of resources, we did a basic transformation for provided resources\n * - This is meant to provide an easier way to access properties.\n * - In the new definition, we don't need to do transformations and properties can be accessed via helpers or manually.\n * This is kept for backward compability\n */\nexport const legacyResourceTransform = (resources: ResourceProps[]) => {\n  const _resources: IResourceItem[] = [];\n\n  resources.forEach((resource) => {\n    _resources.push({\n      ...resource,\n      label: resource.meta?.label ?? resource.options?.label,\n      route: routeGenerator(resource, resources),\n      canCreate: !!resource.create,\n      canEdit: !!resource.edit,\n      canShow: !!resource.show,\n      canDelete: resource.canDelete,\n    });\n  });\n\n  return _resources;\n};\n", "import { splitToSegments } from \"./split-to-segments\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { isParameter } from \"./is-parameter\";\n\n/**\n * Picks the route parameters from the given route.\n * (e.g. /users/:id/posts/:postId => ['id', 'postId'])\n */\nexport const pickRouteParams = (route: string) => {\n  const segments = splitToSegments(removeLeadingTrailingSlashes(route));\n\n  return segments.flatMap((s) => {\n    if (isParameter(s)) {\n      return [s.slice(1)];\n    }\n\n    return [];\n  });\n};\n", "/**\n * Prepares the route params by checking the existing params and meta data.\n * Meta data is prioritized over params.\n * Params are prioritized over predetermined id, action and resource.\n * This means, we can use `meta` for user supplied params (both manually or from the query string)\n */\nexport const prepareRouteParams = <\n  TRouteParams extends Record<string, unknown> = Record<string, unknown>,\n>(\n  routeParams: (keyof TRouteParams)[],\n  meta: Record<string, unknown> = {},\n): Partial<TRouteParams> => {\n  return routeParams.reduce(\n    (acc, key) => {\n      const value = meta[key as string];\n      if (typeof value !== \"undefined\") {\n        acc[key] = value as TRouteParams[keyof TRouteParams];\n      }\n      return acc;\n    },\n    {} as Partial<TRouteParams>,\n  );\n};\n", "import type { MetaQuery } from \"../../../contexts/data/types\";\nimport type { ParseResponse } from \"../../../contexts/router/types\";\nimport { pickRouteParams } from \"./pick-route-params\";\nimport { prepareRouteParams } from \"./prepare-route-params\";\n\n/**\n * This function will compose a route with the given params and meta.\n * - A route can have parameters like (eg: /users/:id)\n * - First we pick the route params from the route (eg: [id])\n * - Then we prepare the route params with the given params and meta (eg: { id: 1 })\n * - Then we replace the route params with the prepared route params (eg: /users/1)\n */\nexport const composeRoute = (\n  designatedRoute: string,\n  resourceMeta: MetaQuery = {},\n  parsed: ParseResponse = {},\n  meta: Record<string, unknown> = {},\n): string => {\n  // pickRouteParams (from the route)\n  const routeParams = pickRouteParams(designatedRoute);\n  // prepareRouteParams (from route params, params and meta)\n  const preparedRouteParams = prepareRouteParams(routeParams, {\n    ...resourceMeta,\n    ...(typeof parsed?.id !== \"undefined\" ? { id: parsed.id } : {}),\n    ...(typeof parsed?.action !== \"undefined\" ? { action: parsed.action } : {}),\n    ...(typeof parsed?.resource !== \"undefined\"\n      ? { resource: parsed.resource }\n      : {}),\n    ...parsed?.params,\n    ...meta,\n  });\n  // replace route params with prepared route params\n  return designatedRoute.replace(/:([^\\/]+)/g, (match, key) => {\n    const fromParams = preparedRouteParams[key];\n    if (typeof fromParams !== \"undefined\") {\n      return `${fromParams}`;\n    }\n    return match;\n  });\n};\n", "import { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\n/**\n * @returns authProvider or legacyAuthProvider if provided, otherwise null\n * @internal\n * NOTE: Will be removed in v5\n */\nexport const useActiveAuthProvider = () => {\n  const legacyAuthProvider = useLegacyAuthContext();\n  const authProvider = useAuthBindingsContext();\n\n  if (authProvider.isProvided) {\n    return { isLegacy: false, ...authProvider };\n  }\n\n  if (legacyAuthProvider.isProvided) {\n    // legacyAuthProvider interface is different from authProvider interface\n    // we need to convert it to authProvider interface for simple usage\n    // in the future, we will remove legacyAuthProvider\n    return {\n      isLegacy: true,\n      ...legacyAuthProvider,\n      check: legacyAuthProvider.checkAuth,\n      onError: legacyAuthProvider.checkError,\n      getIdentity: legacyAuthProvider.getUserIdentity,\n    };\n  }\n\n  return null;\n};\n", "import type { Pagination } from \"../../../contexts/data/types\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\ntype HandlePaginationParamsProps = {\n  hasPagination?: boolean;\n  pagination?: Pagination;\n  configPagination?: Pagination;\n};\n\nexport const handlePaginationParams = ({\n  hasPagination,\n  pagination,\n  configPagination,\n}: HandlePaginationParamsProps = {}): Required<Pagination> => {\n  const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n  const mode = pagination?.mode ?? hasPaginationString;\n\n  const current =\n    pickNotDeprecated(pagination?.current, configPagination?.current) ?? 1;\n\n  const pageSize =\n    pickNotDeprecated(pagination?.pageSize, configPagination?.pageSize) ?? 10;\n\n  return {\n    current,\n    pageSize,\n    mode,\n  };\n};\n", "import { useState, useEffect } from \"react\";\n\nexport const useMediaQuery = (query: string) => {\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => setMatches(media.matches);\n    window.addEventListener(\"resize\", listener);\n    return () => window.removeEventListener(\"resize\", listener);\n  }, [matches, query]);\n\n  return matches;\n};\n", "import type { useTranslate } from \"../../../hooks/i18n\";\n\nexport const safeTranslate = (\n  translate: ReturnType<typeof useTranslate>,\n  key: string,\n  defaultMessage?: string,\n  options?: any,\n) => {\n  const translated = options\n    ? translate(key, options, defaultMessage)\n    : translate(key, defaultMessage);\n\n  const fallback = defaultMessage ?? key;\n\n  if (translated === key || typeof translated === \"undefined\") {\n    return fallback;\n  }\n\n  return translated;\n};\n", "import type { useTranslate } from \"../../../hooks/i18n\";\n\nimport type { IResourceItem } from \"../../../contexts/resource/types\";\nimport { safeTranslate } from \"../safe-translate\";\nimport { userFriendlyResourceName } from \"../userFriendlyResourceName\";\n\n/**\n * Generates document title for the given resource and action.\n */\nexport function generateDefaultDocumentTitle(\n  translate: ReturnType<typeof useTranslate>,\n  resource?: IResourceItem,\n  action?: string,\n  id?: string,\n  resourceName?: string,\n) {\n  const actionPrefixMatcher = {\n    create: \"Create new \",\n    clone: `#${id ?? \"\"} Clone `,\n    edit: `#${id ?? \"\"} Edit `,\n    show: `#${id ?? \"\"} Show `,\n    list: \"\",\n  };\n\n  const identifier = resource?.identifier ?? resource?.name;\n\n  const resourceNameFallback =\n    resource?.label ??\n    resource?.meta?.label ??\n    userFriendlyResourceName(\n      identifier,\n      action === \"list\" ? \"plural\" : \"singular\",\n    );\n\n  const resourceNameWithFallback = resourceName ?? resourceNameFallback;\n\n  const defaultTitle = safeTranslate(\n    translate,\n    \"documentTitle.default\",\n    \"Refine\",\n  );\n  const suffix = safeTranslate(translate, \"documentTitle.suffix\", \" | Refine\");\n  let autoGeneratedTitle = defaultTitle;\n\n  if (action && identifier) {\n    autoGeneratedTitle = safeTranslate(\n      translate,\n      `documentTitle.${identifier}.${action}`,\n      `${\n        actionPrefixMatcher[action as keyof typeof actionPrefixMatcher] ?? \"\"\n      }${resourceNameWithFallback}${suffix}`,\n      { id },\n    );\n  }\n\n  return autoGeneratedTitle;\n}\n", "import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport type { IRefineContextOptions } from \"../../contexts/refine/types\";\nimport type { MutationMode } from \"../../contexts/data/types\";\n\ntype UseMutationModeType = (\n  preferredMutationMode?: MutationMode,\n  preferredUndoableTimeout?: number,\n) => {\n  mutationMode: IRefineContextOptions[\"mutationMode\"];\n  undoableTimeout: IRefineContextOptions[\"undoableTimeout\"];\n};\n\n/**\n * Mutation mode determines which mode the mutation runs with.\n * Mutations can run under three different modes: `pessimistic`, `optimistic` and `undoable`.\n * Each mode corresponds to a different type of user experience.\n *\n * @see {@link https://refine.dev/docs/guides-and-concepts/mutation-mode} for more details.\n */\nexport const useMutationMode: UseMutationModeType = (\n  preferredMutationMode?: MutationMode,\n  preferredUndoableTimeout?: number,\n) => {\n  const { mutationMode, undoableTimeout } = useContext(RefineContext);\n\n  return {\n    mutationMode: preferredMutationMode ?? mutationMode,\n    undoableTimeout: preferredUndoableTimeout ?? undoableTimeout,\n  };\n};\n", "import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport { UnsavedWarnContext } from \"@contexts/unsavedWarn\";\nimport type { IRefineContextOptions } from \"../../../contexts/refine/types\";\nimport type { IUnsavedWarnContext } from \"../../../contexts/unsavedWarn/types\";\n\ntype UseWarnAboutChangeType = () => {\n  warnWhenUnsavedChanges: IRefineContextOptions[\"warnWhenUnsavedChanges\"];\n  warnWhen: NonNullable<IUnsavedWarnContext[\"warnWhen\"]>;\n  setWarnWhen: NonNullable<IUnsavedWarnContext[\"setWarnWhen\"]>;\n};\n\n/**\n * When you have unsaved changes and try to leave the current page, **refine** shows a confirmation modal box.\n * To activate this feature, set the `warnWhenUnsavedChanges` to `true`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config#warnwhenunsavedchanges} for more details.\n */\nexport const useWarnAboutChange: UseWarnAboutChangeType = () => {\n  const { warnWhenUnsavedChanges } = useContext(RefineContext);\n\n  const { warnWhen, setWarnWhen } = useContext(UnsavedWarnContext);\n\n  return {\n    warnWhenUnsavedChanges,\n    warnWhen: Boolean(warnWhen),\n    setWarnWhen: setWarnWhen ?? (() => undefined),\n  };\n};\n", "import React, { useState, type PropsWithChildren } from \"react\";\n\nimport type { IUnsavedWarnContext } from \"./types\";\n\nexport const UnsavedWarnContext = React.createContext<IUnsavedWarnContext>({});\n\nexport const UnsavedWarnContextProvider: React.FC<PropsWithChildren> = ({\n  children,\n}) => {\n  const [warnWhen, setWarnWhen] = useState(false);\n\n  return (\n    <UnsavedWarnContext.Provider value={{ warnWhen, setWarnWhen }}>\n      {children}\n    </UnsavedWarnContext.Provider>\n  );\n};\n", "import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport type { IRefineContextOptions } from \"../../contexts/refine/types\";\n\ntype UseSyncWithLocationType = () => {\n  syncWithLocation: IRefineContextOptions[\"syncWithLocation\"];\n};\n\n/**\n * List query parameter values can be edited manually by typing directly in the URL.\n * To activate this feature `syncWithLocation` needs to be set to `true`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#syncwithlocation} for more details.\n */\nexport const useSyncWithLocation: UseSyncWithLocationType = () => {\n  const { syncWithLocation } = useContext(RefineContext);\n\n  return { syncWithLocation };\n};\n", "import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\n\nimport type { TitleProps } from \"../../contexts/refine/types\";\n\n/**\n * `useTitle` returns a component that calls the `<Title>` passed to the `<Refine>`.\n * In this way, it becomes easier for us to access this component in various parts of the application.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/refine/useTitle} for more details.\n */\nexport const useTitle: () => React.FC<TitleProps> | undefined = () => {\n  const { Title } = useContext(RefineContext);\n\n  return Title;\n};\n", "import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\n\nexport const useRefineContext = () => {\n  const {\n    Footer,\n    Header,\n    Layout,\n    OffLayoutArea,\n    Sider,\n    Title,\n    hasDashboard,\n    mutationMode,\n    syncWithLocation,\n    undoableTimeout,\n    warnWhenUnsavedChanges,\n    DashboardPage,\n    LoginPage,\n    catchAll,\n    options,\n    __initialized,\n  } = useContext(RefineContext);\n\n  return {\n    __initialized,\n    Footer,\n    Header,\n    Layout,\n    OffLayoutArea,\n    Sider,\n    Title,\n    hasDashboard,\n    mutationMode,\n    syncWithLocation,\n    undoableTimeout,\n    warnWhenUnsavedChanges,\n    DashboardPage,\n    LoginPage,\n    catchAll,\n    options,\n  };\n};\n", "import { useRefineContext } from \"@hooks/refine\";\n\n/**\n * A method that the internal uses\n * @internal\n */\nexport const useUserFriendlyName = () => {\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n\n  const getFriendlyName = (name = \"\", type: \"singular\" | \"plural\"): string => {\n    const humanizeName = textTransformers.humanize(name);\n    if (type === \"singular\") {\n      return textTransformers.singular(humanizeName);\n    }\n    return textTransformers.plural(humanizeName);\n  };\n\n  return getFriendlyName;\n};\n", "const isNested = (obj: any) => typeof obj === \"object\" && obj !== null;\nconst isArray = (obj: any) => Array.isArray(obj);\n\nexport const flattenObjectKeys = (obj: any, prefix = \"\") => {\n  if (!isNested(obj)) {\n    return {\n      [prefix]: obj,\n    };\n  }\n\n  return Object.keys(obj).reduce(\n    (acc, key) => {\n      const currentPrefix = prefix.length ? `${prefix}.` : \"\";\n\n      if (isNested(obj[key]) && Object.keys(obj[key]).length) {\n        if (isArray(obj[key]) && obj[key].length) {\n          obj[key].forEach((item: unknown[], index: number) => {\n            Object.assign(\n              acc,\n              flattenObjectKeys(item, `${currentPrefix + key}.${index}`),\n            );\n          });\n        } else {\n          Object.assign(acc, flattenObjectKeys(obj[key], currentPrefix + key));\n        }\n        // Even if it's a nested object, it should be treated as a key as well\n        acc[currentPrefix + key] = obj[key];\n      } else {\n        acc[currentPrefix + key] = obj[key];\n      }\n      return acc;\n    },\n    {} as Record<string, unknown>,\n  );\n};\n", "export const propertyPathToArray = (propertyPath: string) => {\n  return propertyPath\n    .split(\".\")\n    .map((item) => (!Number.isNaN(Number(item)) ? Number(item) : item));\n};\n", "export const downloadInBrowser = (\n  filename: string,\n  content: string,\n  type?: string,\n) => {\n  if (typeof window === \"undefined\") {\n    return;\n  }\n\n  const blob = new Blob([content], { type });\n\n  const link = document.createElement(\"a\");\n  link.setAttribute(\"visibility\", \"hidden\");\n  link.download = filename;\n  const blobUrl = URL.createObjectURL(blob);\n  link.href = blobUrl;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  // As per documentation, call URL.revokeObjectURL to remove the blob from memory.\n  setTimeout(() => {\n    URL.revokeObjectURL(blobUrl);\n  });\n};\n", "/**\n * Delays the execution of a callback function asynchronously.\n * This utility function is used to defer the execution of the provided\n * callback, allowing the current call stack to clear before the callback\n * is invoked. It is particularly useful for ensuring non-blocking behavior\n * and providing a clear intent when a 0 ms timeout is used.\n */\nexport const deferExecution = (fn: Function) => {\n  setTimeout(fn, 0);\n};\n", "import debounce from \"lodash-es/debounce.js\";\n\ntype Callbacks<T extends (...args: any) => any> = {\n  resolve?: (value: Awaited<ReturnType<T>>) => void;\n  reject?: (reason?: any) => void;\n};\n\ntype DebouncedFunction<T extends (...args: any) => any> = {\n  (...args: Parameters<T>): Promise<Awaited<ReturnType<T>>>;\n  flush: () => void;\n  cancel: () => void;\n};\n\n/**\n * Debounces sync and async functions with given wait time. The debounced function returns a promise which can be awaited or catched.\n * Only the last call of the debounced function will resolve or reject.\n * Previous calls will be rejected with the given cancelReason.\n *\n * The original debounce function doesn't work well with async functions,\n * It won't return a promise to resolve/reject and therefore it's not possible to await the result.\n * This will always return a promise to handle and await the result.\n * Previous calls will be rejected immediately after a new call made.\n */\nexport const asyncDebounce = <T extends (...args: any[]) => any>(\n  func: T,\n  wait = 1000,\n  cancelReason?: string,\n): DebouncedFunction<T> => {\n  let callbacks: Array<Callbacks<T>> = [];\n\n  const cancelPrevious = () => {\n    callbacks.forEach((cb) => cb.reject?.(cancelReason));\n    callbacks = [];\n  };\n\n  const debouncedFunc = debounce((...args: Parameters<T>) => {\n    const { resolve, reject } = callbacks.pop() || {};\n    Promise.resolve(func(...args))\n      .then(resolve)\n      .catch(reject);\n  }, wait);\n\n  const runner = (...args: Parameters<T>) => {\n    return new Promise<Awaited<ReturnType<T>>>((resolve, reject) => {\n      cancelPrevious();\n\n      callbacks.push({\n        resolve,\n        reject,\n      });\n\n      debouncedFunc(...args);\n    });\n  };\n\n  runner.flush = () => debouncedFunc.flush();\n  runner.cancel = () => {\n    debouncedFunc.cancel();\n    cancelPrevious();\n  };\n\n  return runner;\n};\n", "import type { QueryFunctionContext, QueryKey } from \"@tanstack/react-query\";\n\nexport const prepareQueryContext = (\n  context: QueryFunctionContext<QueryKey, any>,\n): Omit<QueryFunctionContext<QueryKey, any>, \"meta\"> => {\n  const queryContext = {\n    queryKey: context.queryKey,\n    pageParam: context.pageParam,\n  };\n\n  Object.defineProperty(queryContext, \"signal\", {\n    enumerable: true,\n    get: () => {\n      return context.signal;\n    },\n  });\n\n  return queryContext;\n};\n", "export const file2Base64 = (file: any): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    const resultHandler = () => {\n      if (reader.result) {\n        reader.removeEventListener(\"load\", resultHandler, false);\n\n        resolve(reader.result as string);\n      }\n    };\n\n    reader.addEventListener(\"load\", resultHandler, false);\n\n    reader.readAsDataURL(file.originFileObj as Blob);\n    reader.onerror = (error) => {\n      reader.removeEventListener(\"load\", resultHandler, false);\n      return reject(error);\n    };\n  });\n};\n", "import { useRefineContext } from \"..\";\nimport { keys } from \"@definitions/index\";\n\nexport const useKeys = () => {\n  const {\n    options: { useNewQueryKeys },\n  } = useRefineContext();\n\n  return {\n    keys,\n    preferLegacyKeys: !useNewQueryKeys,\n  };\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseQueryOptions,\n  type UseQueryResult,\n  useQuery,\n} from \"@tanstack/react-query\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nimport type { IdentityResponse } from \"../../../contexts/auth/types\";\n\nexport type UseGetIdentityLegacyProps<TData> = {\n  v3LegacyAuthProviderCompatible: true;\n  queryOptions?: UseQueryOptions<TData>;\n};\n\nexport type UseGetIdentityProps<TData = IdentityResponse> = {\n  v3LegacyAuthProviderCompatible?: false;\n  queryOptions?: UseQueryOptions<TData>;\n};\n\nexport type UseGetIdentityCombinedProps<TData = any> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  queryOptions?: UseQueryOptions<TData> | UseQueryOptions<IdentityResponse>;\n};\n\nexport type UseGetIdentityLegacyReturnType<TData> = UseQueryResult<\n  TData,\n  unknown\n>;\n\nexport type UseGetIdentityReturnType<TData = IdentityResponse> = UseQueryResult<\n  TData,\n  unknown\n>;\n\nexport type UsePermissionsCombinedReturnType<TData = any> =\n  | UseQueryResult<TData, unknown>\n  | UseQueryResult<IdentityResponse, unknown>;\n\nexport function useGetIdentity<TData = any>(\n  props: UseGetIdentityLegacyProps<TData>,\n): UseGetIdentityLegacyReturnType<TData>;\n\nexport function useGetIdentity<TData = IdentityResponse>(\n  props?: UseGetIdentityProps<TData>,\n): UseGetIdentityReturnType<TData>;\n\nexport function useGetIdentity<TData = any>(\n  props?: UseGetIdentityCombinedProps<TData>,\n): UsePermissionsCombinedReturnType<TData>;\n\n/**\n * `useGetIdentity` calls the `getUserIdentity` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useGetIdentity} for more details.\n *\n * @typeParam TData - Result data of the query\n *\n */\nexport function useGetIdentity<TData = any>({\n  v3LegacyAuthProviderCompatible = false,\n  queryOptions,\n}: UseGetIdentityProps<TData> | UseGetIdentityLegacyProps<TData> = {}):\n  | UseGetIdentityReturnType<TData>\n  | UseGetIdentityLegacyReturnType<TData> {\n  const { getUserIdentity: legacyGetUserIdentity } = useLegacyAuthContext();\n  const { getIdentity } = useAuthBindingsContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const queryResponse = useQuery<TData>({\n    queryKey: keys().auth().action(\"identity\").get(preferLegacyKeys),\n    // Enabled check for `getIdentity` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n    queryFn:\n      (getIdentity as (params?: unknown) => Promise<TData>) ??\n      (() => Promise.resolve({})),\n    enabled: !v3LegacyAuthProviderCompatible && !!getIdentity,\n    retry: false,\n    ...(v3LegacyAuthProviderCompatible === true ? {} : queryOptions),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible === true ? {} : queryOptions?.meta),\n      ...getXRay(\"useGetIdentity\", preferLegacyKeys),\n    },\n  });\n\n  const legacyQueryResponse = useQuery<TData>({\n    queryKey: [\n      ...keys().auth().action(\"identity\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    // Enabled check for `getUserIdentity` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n    queryFn: legacyGetUserIdentity ?? (() => Promise.resolve({})),\n    enabled: v3LegacyAuthProviderCompatible && !!legacyGetUserIdentity,\n    retry: false,\n    ...(v3LegacyAuthProviderCompatible ? queryOptions : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? queryOptions?.meta : {}),\n      ...getXRay(\"useGetIdentity\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type UseMutationResult,\n  useMutation,\n} from \"@tanstack/react-query\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport {\n  useGo,\n  useKeys,\n  useNavigation,\n  useNotification,\n  useRouterType,\n} from \"@hooks\";\n\nimport type {\n  AuthActionResponse,\n  SuccessNotificationResponse,\n  TLogoutData,\n} from \"../../../contexts/auth/types\";\nimport type { RefineError } from \"../../../contexts/data/types\";\nimport type { OpenNotificationParams } from \"../../../contexts/notification/types\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\n\ntype Variables = {\n  redirectPath?: string | false;\n};\n\nexport type UseLogoutLegacyProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: true;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      TLogoutData,\n      Error | RefineError,\n      (TVariables & Variables) | void,\n      unknown\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n};\n\nexport type UseLogoutProps<TVariables> = {\n  v3LegacyAuthProviderCompatible?: false;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse,\n      Error | RefineError,\n      (TVariables & Variables) | void,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseLogoutCombinedProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse | TLogoutData,\n      Error | RefineError,\n      (TVariables & Variables) | void,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseLogoutLegacyReturnType<TVariables> = UseMutationResult<\n  TLogoutData,\n  Error | RefineError,\n  (TVariables & Variables) | void,\n  unknown\n>;\n\nexport type UseLogoutReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse,\n  Error | RefineError,\n  (TVariables & Variables) | void,\n  unknown\n>;\n\nexport type UseLogoutCombinedReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse | TLogoutData,\n  Error | RefineError,\n  (TVariables & Variables) | void,\n  unknown\n>;\n\nexport function useLogout<TVariables = {}>(\n  props: UseLogoutLegacyProps<TVariables>,\n): UseLogoutLegacyReturnType<TVariables>;\n\nexport function useLogout<TVariables = {}>(\n  props?: UseLogoutProps<TVariables>,\n): UseLogoutReturnType<TVariables>;\n\nexport function useLogout<TVariables = {}>(\n  props?: UseLogoutCombinedProps<TVariables>,\n): UseLogoutCombinedReturnType<TVariables>;\n\n/**\n * `useLogout` calls the `logout` method from the {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useLogout} for more details.\n *\n */\nexport function useLogout<TVariables = {}>({\n  v3LegacyAuthProviderCompatible,\n  mutationOptions,\n}: UseLogoutProps<TVariables> | UseLogoutLegacyProps<TVariables> = {}):\n  | UseLogoutLegacyReturnType<TVariables>\n  | UseLogoutReturnType<TVariables> {\n  const invalidateAuthStore = useInvalidateAuthStore();\n  const routerType = useRouterType();\n  const go = useGo();\n  const { push } = useNavigation();\n  const { open, close } = useNotification();\n  const { logout: legacyLogoutFromContext } = useLegacyAuthContext();\n  const { logout: logoutFromContext } = useAuthBindingsContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    AuthActionResponse,\n    Error | RefineError,\n    (TVariables & Variables) | void,\n    unknown\n  >({\n    mutationKey: keys().auth().action(\"logout\").get(preferLegacyKeys),\n    mutationFn: logoutFromContext,\n    onSuccess: async (data, variables) => {\n      const { success, error, redirectTo, successNotification } = data;\n      const { redirectPath } = variables ?? {};\n\n      const redirect = redirectPath ?? redirectTo;\n\n      if (success) {\n        close?.(\"useLogout-error\");\n\n        if (successNotification) {\n          open?.(buildSuccessNotification(successNotification));\n        }\n      }\n\n      if (error || !success) {\n        open?.(buildNotification(error));\n      }\n\n      if (redirect !== false) {\n        if (routerType === \"legacy\") {\n          push(redirect ?? \"/login\");\n        } else {\n          if (redirect) {\n            go({ to: redirect });\n          }\n        }\n      }\n\n      await invalidateAuthStore();\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions?.meta),\n      ...getXRay(\"useLogout\", preferLegacyKeys),\n    },\n  });\n\n  const v3LegacyAuthProviderCompatibleMutation = useMutation<\n    TLogoutData,\n    Error | RefineError,\n    (TVariables & Variables) | void,\n    unknown\n  >({\n    mutationKey: [\n      ...keys().auth().action(\"logout\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    mutationFn: legacyLogoutFromContext,\n    onSuccess: async (data, variables) => {\n      const redirectPath = variables?.redirectPath ?? data;\n\n      if (redirectPath === false) {\n        return;\n      }\n\n      if (redirectPath) {\n        if (routerType === \"legacy\") {\n          push(redirectPath);\n        } else {\n          go({ to: redirectPath });\n        }\n        return;\n      }\n\n      if (routerType === \"legacy\") {\n        push(\"/login\");\n      } else {\n        go({ to: \"/login\" });\n      }\n\n      await invalidateAuthStore();\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n      ...getXRay(\"useLogout\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible\n    ? v3LegacyAuthProviderCompatibleMutation\n    : mutation;\n}\n\nconst buildNotification = (\n  error?: Error | RefineError,\n): OpenNotificationParams => {\n  return {\n    key: \"useLogout-error\",\n    type: \"error\",\n    message: error?.name || \"Logout Error\",\n    description: error?.message || \"Something went wrong during logout\",\n  };\n};\n\nconst buildSuccessNotification = (\n  successNotification: SuccessNotificationResponse,\n): OpenNotificationParams => {\n  return {\n    message: successNotification.message,\n    description: successNotification.description,\n    key: \"logout-success\",\n    type: \"success\",\n  };\n};\n", "import { useKeys } from \"@hooks/useKeys\";\nimport { useQueryClient } from \"@tanstack/react-query\";\n\nexport const useInvalidateAuthStore = () => {\n  const queryClient = useQueryClient();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const invalidate = async () => {\n    await Promise.all(\n      ([\"check\", \"identity\", \"permissions\"] as const).map((action) =>\n        queryClient.invalidateQueries(\n          keys().auth().action(action).get(preferLegacyKeys),\n        ),\n      ),\n    );\n  };\n\n  return invalidate;\n};\n", "import React from \"react\";\n\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type UseMutationResult,\n  useMutation,\n} from \"@tanstack/react-query\";\nimport qs from \"qs\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport {\n  useGo,\n  useKeys,\n  useNavigation,\n  useNotification,\n  useParsed,\n  useRouterContext,\n  useRouterType,\n} from \"@hooks\";\n\nimport type {\n  AuthActionResponse,\n  SuccessNotificationResponse,\n  TLoginData,\n} from \"../../../contexts/auth/types\";\nimport type { RefineError } from \"../../../contexts/data/types\";\nimport type { OpenNotificationParams } from \"../../../contexts/notification/types\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\n\nexport type UseLoginLegacyProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: true;\n  mutationOptions?: Omit<\n    UseMutationOptions<TLoginData, Error | RefineError, TVariables, unknown>,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n};\n\nexport type UseLoginProps<TVariables> = {\n  v3LegacyAuthProviderCompatible?: false;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseLoginCombinedProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse | TLoginData,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseLoginLegacyReturnType<TVariables> = UseMutationResult<\n  TLoginData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseLoginReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseLoginCombinedReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse | TLoginData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport function useLogin<TVariables = {}>(\n  props: UseLoginLegacyProps<TVariables>,\n): UseLoginLegacyReturnType<TVariables>;\n\nexport function useLogin<TVariables = {}>(\n  props?: UseLoginProps<TVariables>,\n): UseLoginReturnType<TVariables>;\n\nexport function useLogin<TVariables = {}>(\n  props?: UseLoginCombinedProps<TVariables>,\n): UseLoginCombinedReturnType<TVariables>;\n\n/**\n * `useLogin` calls `login` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useLogin} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useLogin<TVariables = {}>({\n  v3LegacyAuthProviderCompatible,\n  mutationOptions,\n}: UseLoginProps<TVariables> | UseLoginLegacyProps<TVariables> = {}):\n  | UseLoginLegacyReturnType<TVariables>\n  | UseLoginReturnType<TVariables> {\n  const invalidateAuthStore = useInvalidateAuthStore();\n  const routerType = useRouterType();\n\n  const go = useGo();\n  const { replace } = useNavigation();\n\n  const parsed = useParsed();\n\n  const { useLocation } = useRouterContext();\n  const { search } = useLocation();\n\n  const { close, open } = useNotification();\n  const { login: legacyLoginFromContext } = useLegacyAuthContext();\n  const { login: loginFromContext } = useAuthBindingsContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const to = React.useMemo(() => {\n    if (routerType === \"legacy\") {\n      const legacySearch = qs.parse(search, {\n        ignoreQueryPrefix: true,\n      });\n      return legacySearch.to;\n    }\n    return parsed.params?.to;\n  }, [routerType, parsed.params, search]);\n\n  const mutation = useMutation<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: keys().auth().action(\"login\").get(preferLegacyKeys),\n    mutationFn: loginFromContext,\n    onSuccess: async ({ success, redirectTo, error, successNotification }) => {\n      if (success) {\n        close?.(\"login-error\");\n\n        if (successNotification) {\n          open?.(buildSuccessNotification(successNotification));\n        }\n      }\n\n      if (error || !success) {\n        open?.(buildNotification(error));\n      }\n\n      if (to && success) {\n        if (routerType === \"legacy\") {\n          replace(to as string);\n        } else {\n          go({ to: to as string, type: \"replace\" });\n        }\n      } else if (redirectTo) {\n        if (routerType === \"legacy\") {\n          replace(redirectTo);\n        } else {\n          go({ to: redirectTo, type: \"replace\" });\n        }\n      } else {\n        if (routerType === \"legacy\") {\n          replace(\"/\");\n        }\n      }\n\n      setTimeout(() => {\n        invalidateAuthStore();\n      }, 32);\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions?.meta),\n      ...getXRay(\"useLogin\", preferLegacyKeys),\n    },\n  });\n\n  const v3LegacyAuthProviderCompatibleMutation = useMutation<\n    TLoginData,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: [\n      ...keys().auth().action(\"login\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    mutationFn: legacyLoginFromContext,\n    onSuccess: async (redirectPathFromAuth) => {\n      if (to) {\n        replace(to as string);\n      }\n\n      if (redirectPathFromAuth !== false && !to) {\n        if (typeof redirectPathFromAuth === \"string\") {\n          if (routerType === \"legacy\") {\n            replace(redirectPathFromAuth);\n          } else {\n            go({ to: redirectPathFromAuth, type: \"replace\" });\n          }\n        } else {\n          if (routerType === \"legacy\") {\n            replace(\"/\");\n          } else {\n            go({ to: \"/\", type: \"replace\" });\n          }\n        }\n      }\n\n      setTimeout(() => {\n        invalidateAuthStore();\n      }, 32);\n\n      close?.(\"login-error\");\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n      ...getXRay(\"useLogin\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible\n    ? v3LegacyAuthProviderCompatibleMutation\n    : mutation;\n}\n\nconst buildNotification = (\n  error?: Error | RefineError,\n): OpenNotificationParams => {\n  return {\n    message: error?.name || \"Login Error\",\n    description: error?.message || \"Invalid credentials\",\n    key: \"login-error\",\n    type: \"error\",\n  };\n};\n\nconst buildSuccessNotification = (\n  successNotification: SuccessNotificationResponse,\n): OpenNotificationParams => {\n  return {\n    message: successNotification.message,\n    description: successNotification.description,\n    key: \"login-success\",\n    type: \"success\",\n  };\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type UseMutationResult,\n  useMutation,\n} from \"@tanstack/react-query\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport {\n  useGo,\n  useKeys,\n  useNavigation,\n  useNotification,\n  useRouterType,\n} from \"@hooks\";\n\nimport type {\n  AuthActionResponse,\n  SuccessNotificationResponse,\n  TLoginData,\n  TRegisterData,\n} from \"../../../contexts/auth/types\";\nimport type { RefineError } from \"../../../contexts/data/types\";\nimport type { OpenNotificationParams } from \"../../../contexts/notification/types\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\n\nexport type UseRegisterLegacyProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: true;\n  mutationOptions?: Omit<\n    UseMutationOptions<TRegisterData, Error | RefineError, TVariables, unknown>,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n};\n\nexport type UseRegisterProps<TVariables> = {\n  v3LegacyAuthProviderCompatible?: false;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseRegisterCombinedProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse | TRegisterData,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseRegisterLegacyReturnType<TVariables> = UseMutationResult<\n  TRegisterData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseRegisterReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseRegisterCombinedReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse | TLoginData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport function useRegister<TVariables = {}>(\n  props: UseRegisterLegacyProps<TVariables>,\n): UseRegisterLegacyReturnType<TVariables>;\n\nexport function useRegister<TVariables = {}>(\n  props?: UseRegisterProps<TVariables>,\n): UseRegisterReturnType<TVariables>;\n\nexport function useRegister<TVariables = {}>(\n  props?: UseRegisterCombinedProps<TVariables>,\n): UseRegisterCombinedReturnType<TVariables>;\n\n/**\n * `useRegister` calls `register` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useRegister} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useRegister<TVariables = {}>({\n  v3LegacyAuthProviderCompatible,\n  mutationOptions,\n}: UseRegisterProps<TVariables> | UseRegisterLegacyProps<TVariables> = {}):\n  | UseRegisterReturnType<TVariables>\n  | UseRegisterLegacyReturnType<TVariables> {\n  const invalidateAuthStore = useInvalidateAuthStore();\n  const routerType = useRouterType();\n  const go = useGo();\n  const { replace } = useNavigation();\n  const { register: legacyRegisterFromContext } = useLegacyAuthContext();\n  const { register: registerFromContext } = useAuthBindingsContext();\n  const { close, open } = useNotification();\n\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: keys().auth().action(\"register\").get(preferLegacyKeys),\n    mutationFn: registerFromContext,\n    onSuccess: async ({ success, redirectTo, error, successNotification }) => {\n      if (success) {\n        close?.(\"register-error\");\n\n        if (successNotification) {\n          open?.(buildSuccessNotification(successNotification));\n        }\n\n        await invalidateAuthStore();\n      }\n\n      if (error || !success) {\n        open?.(buildNotification(error));\n      }\n\n      if (redirectTo) {\n        if (routerType === \"legacy\") {\n          replace(redirectTo);\n        } else {\n          go({ to: redirectTo, type: \"replace\" });\n        }\n      } else {\n        if (routerType === \"legacy\") {\n          replace(\"/\");\n        }\n      }\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions?.meta),\n      ...getXRay(\"useRegister\", preferLegacyKeys),\n    },\n  });\n\n  const v3LegacyAuthProviderCompatibleMutation = useMutation<\n    TRegisterData,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: [\n      ...keys().auth().action(\"register\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    mutationFn: legacyRegisterFromContext,\n    onSuccess: async (redirectPathFromAuth) => {\n      if (redirectPathFromAuth !== false) {\n        if (redirectPathFromAuth) {\n          if (routerType === \"legacy\") {\n            replace(redirectPathFromAuth);\n          } else {\n            go({ to: redirectPathFromAuth, type: \"replace\" });\n          }\n        } else {\n          if (routerType === \"legacy\") {\n            replace(\"/\");\n          } else {\n            go({ to: \"/\", type: \"replace\" });\n          }\n        }\n\n        await invalidateAuthStore();\n\n        close?.(\"register-error\");\n      }\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n      ...getXRay(\"useRegister\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible\n    ? v3LegacyAuthProviderCompatibleMutation\n    : mutation;\n}\n\nconst buildNotification = (\n  error?: Error | RefineError,\n): OpenNotificationParams => {\n  return {\n    message: error?.name || \"Register Error\",\n    description: error?.message || \"Error while registering\",\n    key: \"register-error\",\n    type: \"error\",\n  };\n};\n\nconst buildSuccessNotification = (\n  successNotification: SuccessNotificationResponse,\n): OpenNotificationParams => {\n  return {\n    message: successNotification.message,\n    description: successNotification.description,\n    key: \"register-success\",\n    type: \"success\",\n  };\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type UseMutationResult,\n  useMutation,\n} from \"@tanstack/react-query\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport {\n  useGo,\n  useKeys,\n  useNavigation,\n  useNotification,\n  useRouterType,\n} from \"@hooks\";\n\nimport type {\n  AuthActionResponse,\n  SuccessNotificationResponse,\n  TForgotPasswordData,\n} from \"../../../contexts/auth/types\";\nimport type { RefineError } from \"../../../contexts/data/types\";\nimport type { OpenNotificationParams } from \"../../../contexts/notification/types\";\n\nexport type UseForgotPasswordLegacyProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: true;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      TForgotPasswordData,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n};\n\nexport type UseForgotPasswordProps<TVariables> = {\n  v3LegacyAuthProviderCompatible?: false;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseForgotPasswordCombinedProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse | TForgotPasswordData,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseForgotPasswordLegacyReturnType<TVariables> = UseMutationResult<\n  TForgotPasswordData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseForgotPasswordReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseForgotPasswordCombinedReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse | TForgotPasswordData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport function useForgotPassword<TVariables = {}>(\n  props: UseForgotPasswordLegacyProps<TVariables>,\n): UseForgotPasswordLegacyReturnType<TVariables>;\n\nexport function useForgotPassword<TVariables = {}>(\n  props?: UseForgotPasswordProps<TVariables>,\n): UseForgotPasswordReturnType<TVariables>;\n\nexport function useForgotPassword<TVariables = {}>(\n  props?: UseForgotPasswordCombinedProps<TVariables>,\n): UseForgotPasswordCombinedReturnType<TVariables>;\n\n/**\n * `useForgotPassword` calls `forgotPassword` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useForgotPassword} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useForgotPassword<TVariables = {}>({\n  v3LegacyAuthProviderCompatible,\n  mutationOptions,\n}:\n  | UseForgotPasswordProps<TVariables>\n  | UseForgotPasswordLegacyProps<TVariables> = {}):\n  | UseForgotPasswordReturnType<TVariables>\n  | UseForgotPasswordLegacyReturnType<TVariables> {\n  const routerType = useRouterType();\n  const go = useGo();\n  const { replace } = useNavigation();\n  const {\n    forgotPassword: v3LegacyAuthProviderCompatibleForgotPasswordFromContext,\n  } = useLegacyAuthContext();\n  const { forgotPassword: forgotPasswordFromContext } =\n    useAuthBindingsContext();\n  const { close, open } = useNotification();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: keys().auth().action(\"forgotPassword\").get(preferLegacyKeys),\n    mutationFn: forgotPasswordFromContext,\n    onSuccess: ({ success, redirectTo, error, successNotification }) => {\n      if (success) {\n        close?.(\"forgot-password-error\");\n\n        if (successNotification) {\n          open?.(buildSuccessNotification(successNotification));\n        }\n      }\n\n      if (error || !success) {\n        open?.(buildNotification(error));\n      }\n\n      if (redirectTo) {\n        if (routerType === \"legacy\") {\n          replace(redirectTo);\n        } else {\n          go({ to: redirectTo, type: \"replace\" });\n        }\n      }\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions?.meta),\n      ...getXRay(\"useForgotPassword\", preferLegacyKeys),\n    },\n  });\n\n  const v3LegacyAuthProviderCompatibleMutation = useMutation<\n    TForgotPasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: [\n      ...keys().auth().action(\"forgotPassword\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    mutationFn: v3LegacyAuthProviderCompatibleForgotPasswordFromContext,\n    onSuccess: (redirectPathFromAuth) => {\n      if (redirectPathFromAuth !== false) {\n        if (redirectPathFromAuth) {\n          if (routerType === \"legacy\") {\n            replace(redirectPathFromAuth);\n          } else {\n            go({ to: redirectPathFromAuth, type: \"replace\" });\n          }\n        }\n      }\n      close?.(\"forgot-password-error\");\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n      ...getXRay(\"useForgotPassword\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible\n    ? v3LegacyAuthProviderCompatibleMutation\n    : mutation;\n}\n\nconst buildNotification = (\n  error?: Error | RefineError,\n): OpenNotificationParams => {\n  return {\n    message: error?.name || \"Forgot Password Error\",\n    description: error?.message || \"Error while resetting password\",\n    key: \"forgot-password-error\",\n    type: \"error\",\n  };\n};\n\nconst buildSuccessNotification = (\n  successNotification: SuccessNotificationResponse,\n): OpenNotificationParams => {\n  return {\n    message: successNotification.message,\n    description: successNotification.description,\n    key: \"forgot-password-success\",\n    type: \"success\",\n  };\n};\n", "import React from \"react\";\n\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type UseMutationResult,\n  useMutation,\n} from \"@tanstack/react-query\";\nimport qs from \"qs\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport {\n  useGo,\n  useKeys,\n  useNavigation,\n  useNotification,\n  useParsed,\n  useRouterContext,\n  useRouterType,\n} from \"@hooks\";\n\nimport type { UpdatePasswordFormTypes } from \"../../../components/pages/auth/types\";\nimport type {\n  AuthActionResponse,\n  SuccessNotificationResponse,\n  TUpdatePasswordData,\n} from \"../../../contexts/auth/types\";\nimport type { RefineError } from \"../../../contexts/data/types\";\nimport type { OpenNotificationParams } from \"../../../contexts/notification/types\";\n\nexport type UseUpdatePasswordLegacyProps<\n  TVariables extends UpdatePasswordFormTypes,\n> = {\n  v3LegacyAuthProviderCompatible: true;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      TUpdatePasswordData,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n};\n\nexport type UseUpdatePasswordProps<TVariables extends UpdatePasswordFormTypes> =\n  {\n    v3LegacyAuthProviderCompatible?: false;\n    mutationOptions?: Omit<\n      UseMutationOptions<\n        AuthActionResponse,\n        Error | RefineError,\n        TVariables,\n        unknown\n      >,\n      \"mutationFn\"\n    >;\n  };\n\nexport type UseUpdatePasswordCombinedProps<\n  TVariables extends UpdatePasswordFormTypes,\n> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse | TUpdatePasswordData,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseUpdatePasswordLegacyReturnType<\n  TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n  TUpdatePasswordData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseUpdatePasswordReturnType<\n  TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n  AuthActionResponse,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseUpdatePasswordCombinedReturnType<\n  TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n  AuthActionResponse | TUpdatePasswordData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n  props: UseUpdatePasswordLegacyProps<TVariables>,\n): UseUpdatePasswordLegacyReturnType<TVariables>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n  props?: UseUpdatePasswordProps<TVariables>,\n): UseUpdatePasswordReturnType<TVariables>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n  props?: UseUpdatePasswordCombinedProps<TVariables>,\n): UseUpdatePasswordCombinedReturnType<TVariables>;\n\n/**\n * `useUpdatePassword` calls `updatePassword` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useUpdatePassword} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useUpdatePassword<\n  TVariables extends UpdatePasswordFormTypes = {},\n>({\n  v3LegacyAuthProviderCompatible,\n  mutationOptions,\n}:\n  | UseUpdatePasswordProps<TVariables>\n  | UseUpdatePasswordLegacyProps<TVariables> = {}):\n  | UseUpdatePasswordReturnType<TVariables>\n  | UseUpdatePasswordLegacyReturnType<TVariables> {\n  const routerType = useRouterType();\n\n  const go = useGo();\n  const { replace } = useNavigation();\n  const { updatePassword: legacyUpdatePasswordFromContext } =\n    useLegacyAuthContext();\n  const { updatePassword: updatePasswordFromContext } =\n    useAuthBindingsContext();\n  const { close, open } = useNotification();\n\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const parsed = useParsed();\n  const { useLocation } = useRouterContext();\n  const { search } = useLocation();\n\n  const params = React.useMemo(() => {\n    if (routerType === \"legacy\") {\n      const queryStrings = qs.parse(search, {\n        ignoreQueryPrefix: true,\n      });\n      return queryStrings ?? {};\n    }\n    return parsed.params ?? {};\n  }, [search, parsed, routerType]);\n\n  const mutation = useMutation<AuthActionResponse, Error, TVariables, unknown>({\n    mutationKey: keys().auth().action(\"updatePassword\").get(preferLegacyKeys),\n    mutationFn: async (variables) => {\n      return updatePasswordFromContext?.({\n        ...params,\n        ...variables,\n      }) as Promise<AuthActionResponse>;\n    },\n    onSuccess: ({ success, redirectTo, error, successNotification }) => {\n      if (success) {\n        close?.(\"update-password-error\");\n\n        if (successNotification) {\n          open?.(buildSuccessNotification(successNotification));\n        }\n      }\n\n      if (error || !success) {\n        open?.(buildNotification(error));\n      }\n\n      if (redirectTo) {\n        if (routerType === \"legacy\") {\n          replace(redirectTo);\n        } else {\n          go({ to: redirectTo, type: \"replace\" });\n        }\n      }\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions?.meta),\n      ...getXRay(\"useUpdatePassword\", preferLegacyKeys),\n    },\n  });\n\n  const v3LegacyAuthProviderCompatibleMutation = useMutation<\n    TUpdatePasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: [\n      ...keys().auth().action(\"updatePassword\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    mutationFn: async (variables) => {\n      return legacyUpdatePasswordFromContext?.({\n        ...params,\n        ...variables,\n      });\n    },\n    onSuccess: (redirectPathFromAuth) => {\n      if (redirectPathFromAuth !== false) {\n        if (redirectPathFromAuth) {\n          if (routerType === \"legacy\") {\n            replace(redirectPathFromAuth);\n          } else {\n            go({ to: redirectPathFromAuth, type: \"replace\" });\n          }\n        }\n      }\n      close?.(\"update-password-error\");\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n      ...getXRay(\"useUpdatePassword\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible\n    ? v3LegacyAuthProviderCompatibleMutation\n    : mutation;\n}\n\nconst buildNotification = (\n  error?: Error | RefineError,\n): OpenNotificationParams => {\n  return {\n    message: error?.name || \"Update Password Error\",\n    description: error?.message || \"Error while updating password\",\n    key: \"update-password-error\",\n    type: \"error\",\n  };\n};\n\nconst buildSuccessNotification = (\n  successNotification: SuccessNotificationResponse,\n): OpenNotificationParams => {\n  return {\n    message: successNotification.message,\n    description: successNotification.description,\n    key: \"update-password-success\",\n    type: \"success\",\n  };\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport { type UseQueryResult, useQuery } from \"@tanstack/react-query\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nimport type { CheckResponse } from \"../../../contexts/auth/types\";\n\nexport type UseIsAuthenticatedLegacyProps = {\n  v3LegacyAuthProviderCompatible: true;\n  params?: any;\n};\n\nexport type UseIsAuthenticatedProps = {\n  v3LegacyAuthProviderCompatible?: false;\n  params?: any;\n};\n\nexport type UseIsAuthenticatedCombinedProps = {\n  v3LegacyAuthProviderCompatible: boolean;\n  params?: any;\n};\n\nexport type UseIsAuthenticatedLegacyReturnType = UseQueryResult<any, any>;\n\nexport type UseIsAuthenticatedReturnType = UseQueryResult<CheckResponse, any>;\n\nexport type UseIsAuthenticatedCombinedReturnType = UseQueryResult<\n  CheckResponse | any,\n  any\n>;\n\nexport function useIsAuthenticated(\n  props: UseIsAuthenticatedLegacyProps,\n): UseIsAuthenticatedLegacyReturnType;\n\nexport function useIsAuthenticated(\n  props?: UseIsAuthenticatedProps,\n): UseIsAuthenticatedReturnType;\n\nexport function useIsAuthenticated(\n  props?: UseIsAuthenticatedCombinedProps,\n): UseIsAuthenticatedCombinedReturnType;\n\n/**\n *  `useIsAuthenticated` calls the `checkAuth` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useAuthenticated} for more details.\n */\nexport function useIsAuthenticated({\n  v3LegacyAuthProviderCompatible = false,\n  params,\n}: UseIsAuthenticatedProps | UseIsAuthenticatedLegacyProps = {}):\n  | UseIsAuthenticatedReturnType\n  | UseIsAuthenticatedLegacyReturnType {\n  const { checkAuth } = useLegacyAuthContext();\n  const { check } = useAuthBindingsContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const queryResponse = useQuery({\n    queryKey: keys()\n      .auth()\n      .action(\"check\")\n      .params(params)\n      .get(preferLegacyKeys),\n    queryFn: async () => (await check?.(params)) ?? {},\n    retry: false,\n    enabled: !v3LegacyAuthProviderCompatible,\n    meta: {\n      ...getXRay(\"useIsAuthenticated\", preferLegacyKeys),\n    },\n  });\n\n  const legacyQueryResponse = useQuery({\n    queryKey: [\n      ...keys().auth().action(\"check\").params(params).get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    queryFn: async () => (await checkAuth?.(params)) ?? {},\n    retry: false,\n    enabled: v3LegacyAuthProviderCompatible,\n    meta: {\n      ...getXRay(\"useIsAuthenticated\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n\n/**\n * @deprecated `useAuthenticated` is deprecated with refine@4, use `useIsAuthenticated` instead, however, we still support `useAuthenticated` for backward compatibility.\n */\nexport const useAuthenticated = useIsAuthenticated;\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport { type UseMutationResult, useMutation } from \"@tanstack/react-query\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { useGo, useLogout, useNavigation, useRouterType } from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nimport type { OnErrorResponse } from \"../../../contexts/auth/types\";\n\nexport type UseOnErrorLegacyProps = {\n  v3LegacyAuthProviderCompatible: true;\n};\n\nexport type UseOnErrorProps = {\n  v3LegacyAuthProviderCompatible?: false;\n};\n\nexport type UseOnErrorCombinedProps = {\n  v3LegacyAuthProviderCompatible: boolean;\n};\n\nexport type UseOnErrorLegacyReturnType = UseMutationResult<\n  void,\n  string | undefined,\n  any,\n  unknown\n>;\n\nexport type UseOnErrorReturnType = UseMutationResult<\n  OnErrorResponse,\n  unknown,\n  unknown,\n  unknown\n>;\nexport type UseOnErrorCombinedReturnType = UseMutationResult<\n  OnErrorResponse | void,\n  unknown,\n  unknown,\n  unknown\n>;\n\nexport function useOnError(\n  props: UseOnErrorLegacyProps,\n): UseOnErrorLegacyReturnType;\n\nexport function useOnError(props?: UseOnErrorProps): UseOnErrorReturnType;\n\nexport function useOnError(\n  props?: UseOnErrorCombinedProps,\n): UseOnErrorCombinedReturnType;\n\n/**\n * `useOnError` calls the `checkError` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useCheckError} for more details.\n *\n */\nexport function useOnError({\n  v3LegacyAuthProviderCompatible = false,\n}: UseOnErrorProps | UseOnErrorLegacyProps = {}):\n  | UseOnErrorReturnType\n  | UseOnErrorLegacyReturnType {\n  const routerType = useRouterType();\n  const go = useGo();\n  const { replace } = useNavigation();\n\n  const { checkError: legacyCheckErrorFromContext } = useLegacyAuthContext();\n  const { onError: onErrorFromContext } = useAuthBindingsContext();\n\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const { mutate: legacyLogout } = useLogout({\n    v3LegacyAuthProviderCompatible: Boolean(v3LegacyAuthProviderCompatible),\n  });\n  const { mutate: logout } = useLogout({\n    v3LegacyAuthProviderCompatible: Boolean(v3LegacyAuthProviderCompatible),\n  });\n\n  const mutation = useMutation<OnErrorResponse, unknown, unknown, unknown>({\n    mutationKey: keys().auth().action(\"onError\").get(preferLegacyKeys),\n    ...(onErrorFromContext\n      ? {\n          mutationFn: onErrorFromContext,\n          onSuccess: ({ logout: shouldLogout, redirectTo }) => {\n            if (shouldLogout) {\n              logout({ redirectPath: redirectTo });\n              return;\n            }\n\n            if (redirectTo) {\n              if (routerType === \"legacy\") {\n                replace(redirectTo);\n              } else {\n                go({ to: redirectTo, type: \"replace\" });\n              }\n              return;\n            }\n          },\n        }\n      : {\n          mutationFn: () => ({}) as Promise<OnErrorResponse>,\n        }),\n    meta: {\n      ...getXRay(\"useOnError\", preferLegacyKeys),\n    },\n  });\n\n  const v3LegacyAuthProviderCompatibleMutation = useMutation({\n    mutationKey: [\n      ...keys().auth().action(\"onError\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    mutationFn: legacyCheckErrorFromContext,\n    onError: (redirectPath?: string) => {\n      legacyLogout({ redirectPath });\n    },\n    meta: {\n      ...getXRay(\"useOnError\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible\n    ? v3LegacyAuthProviderCompatibleMutation\n    : mutation;\n}\n\n/**\n * @deprecated `useCheckError` is deprecated with refine@4, use `useOnError` instead, however, we still support `useCheckError` for backward compatibility.\n */\nexport const useCheckError = useOnError;\n", "import { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\n/**\n * A hook that the UI uses\n * @internal\n */\nexport const useIsExistAuthentication = (): boolean => {\n  const { isProvided: legacyIsProvided } = useLegacyAuthContext();\n  const { isProvided } = useAuthBindingsContext();\n\n  return Boolean(isProvided || legacyIsProvided);\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type QueryObserverResult,\n  type UseQueryOptions,\n  useQuery,\n} from \"@tanstack/react-query\";\n\nimport {\n  handlePaginationParams,\n  pickDataProvider,\n  pickNotDeprecated,\n  prepareQueryContext,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useKeys,\n  useMeta,\n  useOnError,\n  useResource,\n  useResourceSubscription,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseRecord,\n  CrudFilter,\n  CrudSort,\n  GetListResponse,\n  HttpError,\n  MetaQuery,\n  Pagination,\n  Prettify,\n} from \"../../contexts/data/types\";\nimport type { LiveModeProps } from \"../../contexts/live/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nexport interface UseListConfig {\n  pagination?: Pagination;\n  hasPagination?: boolean;\n  sort?: CrudSort[];\n  filters?: CrudFilter[];\n}\n\nexport type BaseListProps = {\n  /**\n   * Configuration for pagination, sorting and filtering\n   * @type [`UseListConfig`](/docs/api-reference/core/hooks/data/useList/#config-parameters)\n   * @deprecated `config` property is deprecated. Use `pagination`, `hasPagination`, `sorters` and `filters` instead.\n   */\n  config?: UseListConfig;\n  /**\n   * Pagination properties\n   */\n  pagination?: Pagination;\n  /**\n   * Whether to use server-side pagination or not\n   * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n   */\n  hasPagination?: boolean;\n  /**\n   * Sorter parameters\n   */\n  sorters?: CrudSort[];\n  /**\n   * Filter parameters\n   */\n  filters?: CrudFilter[];\n  /**\n   * Meta data query for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   * Meta data query for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use\n   */\n  dataProviderName?: string;\n};\n\nexport type UseListProps<TQueryFnData, TError, TData> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource?: string;\n\n  /**\n   * Tanstack Query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n   */\n  queryOptions?: UseQueryOptions<\n    GetListResponse<TQueryFnData>,\n    TError,\n    GetListResponse<TData>\n  >;\n} & BaseListProps &\n  SuccessErrorNotification<\n    GetListResponse<TData>,\n    TError,\n    Prettify<BaseListProps>\n  > &\n  LiveModeProps &\n  UseLoadingOvertimeOptionsProps;\n\n/**\n * `useList` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving items from a `resource` with pagination, sort, and filter configurations.\n *\n * It uses the `getList` method as the query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useList = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  resource: resourceFromProp,\n  config,\n  filters,\n  hasPagination,\n  pagination,\n  sorters,\n  queryOptions,\n  successNotification,\n  errorNotification,\n  meta,\n  metaData,\n  liveMode,\n  onLiveEvent,\n  liveParams,\n  dataProviderName,\n  overtimeOptions,\n}: UseListProps<TQueryFnData, TError, TData> = {}): QueryObserverResult<\n  GetListResponse<TData>,\n  TError\n> &\n  UseLoadingOvertimeReturnType => {\n  const { resources, resource, identifier } = useResource(resourceFromProp);\n\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const handleNotification = useHandleNotification();\n  const getMeta = useMeta();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const pickedDataProvider = pickDataProvider(\n    identifier,\n    dataProviderName,\n    resources,\n  );\n  const preferredMeta = pickNotDeprecated(meta, metaData);\n  const prefferedFilters = pickNotDeprecated(filters, config?.filters);\n  const prefferedSorters = pickNotDeprecated(sorters, config?.sort);\n  const prefferedHasPagination = pickNotDeprecated(\n    hasPagination,\n    config?.hasPagination,\n  );\n  const prefferedPagination = handlePaginationParams({\n    pagination,\n    configPagination: config?.pagination,\n    hasPagination: prefferedHasPagination,\n  });\n  const isServerPagination = prefferedPagination.mode === \"server\";\n\n  const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n  const notificationValues = {\n    meta: combinedMeta,\n    metaData: combinedMeta,\n    filters: prefferedFilters,\n    hasPagination: isServerPagination,\n    pagination: prefferedPagination,\n    sorters: prefferedSorters,\n    config: {\n      ...config,\n      sort: prefferedSorters,\n    },\n  };\n\n  const isEnabled =\n    queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n  const { getList } = dataProvider(pickedDataProvider);\n\n  useResourceSubscription({\n    resource: identifier,\n    types: [\"*\"],\n    params: {\n      meta: combinedMeta,\n      metaData: combinedMeta,\n      pagination: prefferedPagination,\n      hasPagination: isServerPagination,\n      sort: prefferedSorters,\n      sorters: prefferedSorters,\n      filters: prefferedFilters,\n      subscriptionType: \"useList\",\n      ...liveParams,\n    },\n    channel: `resources/${resource?.name}`,\n    enabled: isEnabled,\n    liveMode,\n    onLiveEvent,\n    dataProviderName: pickedDataProvider,\n    meta: {\n      ...meta,\n      dataProviderName,\n    },\n  });\n\n  const queryResponse = useQuery<\n    GetListResponse<TQueryFnData>,\n    TError,\n    GetListResponse<TData>\n  >({\n    queryKey: keys()\n      .data(pickedDataProvider)\n      .resource(identifier ?? \"\")\n      .action(\"list\")\n      .params({\n        ...(preferredMeta || {}),\n        filters: prefferedFilters,\n        hasPagination: isServerPagination,\n        ...(isServerPagination && {\n          pagination: prefferedPagination,\n        }),\n        ...(sorters && {\n          sorters,\n        }),\n        ...(config?.sort && {\n          sort: config?.sort,\n        }),\n      })\n      .get(preferLegacyKeys),\n    queryFn: (context) => {\n      const meta = {\n        ...combinedMeta,\n        queryContext: prepareQueryContext(context),\n      };\n      return getList<TQueryFnData>({\n        resource: resource?.name ?? \"\",\n        pagination: prefferedPagination,\n        hasPagination: isServerPagination,\n        filters: prefferedFilters,\n        sort: prefferedSorters,\n        sorters: prefferedSorters,\n        meta,\n        metaData: meta,\n      });\n    },\n    ...queryOptions,\n    enabled:\n      typeof queryOptions?.enabled !== \"undefined\"\n        ? queryOptions?.enabled\n        : !!resource?.name,\n    select: (rawData) => {\n      let data = rawData;\n\n      const { current, mode, pageSize } = prefferedPagination;\n\n      if (mode === \"client\") {\n        data = {\n          ...data,\n          data: data.data.slice((current - 1) * pageSize, current * pageSize),\n          total: data.total,\n        };\n      }\n\n      if (queryOptions?.select) {\n        return queryOptions?.select?.(data);\n      }\n\n      return data as unknown as GetListResponse<TData>;\n    },\n    onSuccess: (data) => {\n      queryOptions?.onSuccess?.(data);\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(data, notificationValues, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig);\n    },\n    onError: (err: TError) => {\n      checkError(err);\n      queryOptions?.onError?.(err);\n\n      const notificationConfig =\n        typeof errorNotification === \"function\"\n          ? errorNotification(err, notificationValues, identifier)\n          : errorNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${identifier}-useList-notification`,\n        message: translate(\n          \"notifications.error\",\n          { statusCode: err.statusCode },\n          `Error (status code: ${err.statusCode})`,\n        ),\n        description: err.message,\n        type: \"error\",\n      });\n    },\n    meta: {\n      ...queryOptions?.meta,\n      ...getXRay(\"useList\", preferLegacyKeys, resource?.name),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    ...overtimeOptions,\n    isLoading: queryResponse.isFetching,\n  });\n\n  return { ...queryResponse, overtime: { elapsedTime } };\n};\n", "import { useEffect, useState } from \"react\";\nimport { useRefineContext } from \"..\";\n\nexport type UseLoadingOvertimeRefineContext = Omit<\n  UseLoadingOvertimeCoreProps,\n  \"isLoading\" | \"interval\"\n> &\n  Required<Pick<UseLoadingOvertimeCoreProps, \"interval\">>;\n\nexport type UseLoadingOvertimeOptionsProps = {\n  overtimeOptions?: UseLoadingOvertimeCoreOptions;\n};\n\nexport type UseLoadingOvertimeReturnType = {\n  overtime: {\n    elapsedTime?: number;\n  };\n};\n\ntype UseLoadingOvertimeCoreOptions = Omit<\n  UseLoadingOvertimeCoreProps,\n  \"isLoading\"\n>;\n\ntype UseLoadingOvertimeCoreReturnType = {\n  elapsedTime?: number;\n};\n\nexport type UseLoadingOvertimeCoreProps = {\n  /**\n   * If true, the elapsed time will be calculated. If set to false; the elapsed time will be `undefined`.\n   *\n   * @default: true\n   */\n  enabled?: boolean;\n\n  /**\n   * The loading state. If true, the elapsed time will be calculated.\n   */\n  isLoading: boolean;\n\n  /**\n   * The interval in milliseconds. If the loading time exceeds this time, the `onInterval` callback will be called.\n   * If not specified, the `interval` value from the `overtime` option of the `RefineProvider` will be used.\n   *\n   * @default: 1000 (1 second)\n   */\n  interval?: number;\n\n  /**\n   * The callback function that will be called when the loading time exceeds the specified time.\n   * If not specified, the `onInterval` value from the `overtime` option of the `RefineProvider` will be used.\n   *\n   * @param elapsedInterval The elapsed time in milliseconds.\n   */\n  onInterval?: (elapsedInterval: number) => void;\n};\n\n/**\n * if you need to do something when the loading time exceeds the specified time, refine provides the `useLoadingOvertime` hook.\n * It returns the elapsed time in milliseconds.\n *\n * @example\n * const { elapsedTime } = useLoadingOvertime({\n *    isLoading,\n *    interval: 1000,\n *    onInterval(elapsedInterval) {\n *        console.log(\"loading overtime\", elapsedInterval);\n *    },\n * });\n */\nexport const useLoadingOvertime = ({\n  enabled: enabledProp,\n  isLoading,\n  interval: intervalProp,\n  onInterval: onIntervalProp,\n}: UseLoadingOvertimeCoreProps): UseLoadingOvertimeCoreReturnType => {\n  const [elapsedTime, setElapsedTime] = useState<number | undefined>(undefined);\n  // get overtime options from refine context\n  const { options } = useRefineContext();\n  const { overtime } = options;\n\n  // pick props or refine context options\n  const interval = intervalProp ?? overtime.interval;\n  const onInterval = onIntervalProp ?? overtime?.onInterval;\n  const enabled =\n    typeof enabledProp !== \"undefined\"\n      ? enabledProp\n      : typeof overtime.enabled !== \"undefined\"\n        ? overtime.enabled\n        : true;\n\n  useEffect(() => {\n    let intervalFn: ReturnType<typeof setInterval>;\n\n    if (enabled && isLoading) {\n      intervalFn = setInterval(() => {\n        // increase elapsed time\n        setElapsedTime((prevElapsedTime) => {\n          if (prevElapsedTime === undefined) {\n            return interval;\n          }\n\n          return prevElapsedTime + interval;\n        });\n      }, interval);\n    }\n\n    return () => {\n      if (typeof intervalFn !== \"undefined\") {\n        clearInterval(intervalFn);\n      }\n      // reset elapsed time\n      setElapsedTime(undefined);\n    };\n  }, [isLoading, interval, enabled]);\n\n  useEffect(() => {\n    // call onInterval callback\n    if (onInterval && elapsedTime) {\n      onInterval(elapsedTime);\n    }\n  }, [elapsedTime]);\n\n  return {\n    elapsedTime,\n  };\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type QueryObserverResult,\n  type UseQueryOptions,\n  useQuery,\n} from \"@tanstack/react-query\";\n\nimport {\n  pickDataProvider,\n  pickNotDeprecated,\n  prepareQueryContext,\n  useActiveAuthProvider,\n} from \"@definitions\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useKeys,\n  useMeta,\n  useOnError,\n  useResource,\n  useResourceSubscription,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseKey,\n  BaseRecord,\n  GetOneResponse,\n  HttpError,\n  MetaQuery,\n  Prettify,\n} from \"../../contexts/data/types\";\nimport type { LiveModeProps } from \"../../contexts/live/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nexport type UseOneProps<TQueryFnData, TError, TData> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource?: string;\n  /**\n   * id of the item in the resource\n   * @type [`BaseKey`](/docs/api-reference/core/interfaceReferences/#basekey)\n   */\n  id?: BaseKey;\n  /**\n   * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n   */\n  queryOptions?: UseQueryOptions<\n    GetOneResponse<TQueryFnData>,\n    TError,\n    GetOneResponse<TData>\n  >;\n  /**\n   * Metadata query for `dataProvider`,\n   */\n  meta?: MetaQuery;\n  /**\n   * Meta data query for `dataProvider`,\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default `\"default\"``\n   */\n  dataProviderName?: string;\n} & SuccessErrorNotification<\n  GetOneResponse<TData>,\n  TError,\n  Prettify<{ id?: BaseKey } & MetaQuery>\n> &\n  LiveModeProps &\n  UseLoadingOvertimeOptionsProps;\n\n/**\n * `useOne` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving single items from a `resource`.\n *\n * It uses `getOne` method as query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useOne} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useOne = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  resource: resourceFromProp,\n  id,\n  queryOptions,\n  successNotification,\n  errorNotification,\n  meta,\n  metaData,\n  liveMode,\n  onLiveEvent,\n  liveParams,\n  dataProviderName,\n  overtimeOptions,\n}: UseOneProps<TQueryFnData, TError, TData>): QueryObserverResult<\n  GetOneResponse<TData>,\n  TError\n> &\n  UseLoadingOvertimeReturnType => {\n  const { resources, resource, identifier } = useResource(resourceFromProp);\n\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const handleNotification = useHandleNotification();\n  const getMeta = useMeta();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const preferredMeta = pickNotDeprecated(meta, metaData);\n  const pickedDataProvider = pickDataProvider(\n    identifier,\n    dataProviderName,\n    resources,\n  );\n\n  const { getOne } = dataProvider(pickedDataProvider);\n\n  const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n  useResourceSubscription({\n    resource: identifier,\n    types: [\"*\"],\n    channel: `resources/${resource?.name}`,\n    params: {\n      ids: id ? [id] : [],\n      id: id,\n      meta: combinedMeta,\n      metaData: combinedMeta,\n      subscriptionType: \"useOne\",\n      ...liveParams,\n    },\n    enabled:\n      typeof queryOptions?.enabled !== \"undefined\"\n        ? queryOptions?.enabled\n        : typeof resource?.name !== \"undefined\" && typeof id !== \"undefined\",\n    liveMode,\n    onLiveEvent,\n    dataProviderName: pickedDataProvider,\n    meta: {\n      ...meta,\n      dataProviderName,\n    },\n  });\n\n  const queryResponse = useQuery<\n    GetOneResponse<TQueryFnData>,\n    TError,\n    GetOneResponse<TData>\n  >({\n    queryKey: keys()\n      .data(pickedDataProvider)\n      .resource(identifier ?? \"\")\n      .action(\"one\")\n      .id(id ?? \"\")\n      .params({\n        ...(preferredMeta || {}),\n      })\n      .get(preferLegacyKeys),\n    queryFn: (context) =>\n      getOne<TQueryFnData>({\n        resource: resource?.name ?? \"\",\n        id: id!,\n        meta: {\n          ...combinedMeta,\n          queryContext: prepareQueryContext(context),\n        },\n        metaData: {\n          ...combinedMeta,\n          queryContext: prepareQueryContext(context),\n        },\n      }),\n    ...queryOptions,\n    enabled:\n      typeof queryOptions?.enabled !== \"undefined\"\n        ? queryOptions?.enabled\n        : typeof id !== \"undefined\",\n    onSuccess: (data) => {\n      queryOptions?.onSuccess?.(data);\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(\n              data,\n              {\n                id,\n                ...combinedMeta,\n              },\n              identifier,\n            )\n          : successNotification;\n\n      handleNotification(notificationConfig);\n    },\n    onError: (err: TError) => {\n      checkError(err);\n      queryOptions?.onError?.(err);\n\n      const notificationConfig =\n        typeof errorNotification === \"function\"\n          ? errorNotification(\n              err,\n              {\n                id,\n                ...combinedMeta,\n              },\n              identifier,\n            )\n          : errorNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${id}-${identifier}-getOne-notification`,\n        message: translate(\n          \"notifications.error\",\n          { statusCode: err.statusCode },\n          `Error (status code: ${err.statusCode})`,\n        ),\n        description: err.message,\n        type: \"error\",\n      });\n    },\n    meta: {\n      ...queryOptions?.meta,\n      ...getXRay(\"useOne\", preferLegacyKeys, resource?.name),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    ...overtimeOptions,\n    isLoading: queryResponse.isFetching,\n  });\n\n  return { ...queryResponse, overtime: { elapsedTime } };\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type QueryObserverResult,\n  type UseQueryOptions,\n  useQuery,\n} from \"@tanstack/react-query\";\n\nimport {\n  handleMultiple,\n  pickDataProvider,\n  pickNotDeprecated,\n  prepareQueryContext,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useKeys,\n  useMeta,\n  useOnError,\n  useResource,\n  useResourceSubscription,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseKey,\n  BaseRecord,\n  GetManyResponse,\n  HttpError,\n  MetaQuery,\n} from \"../../contexts/data/types\";\nimport type { LiveModeProps } from \"../../contexts/live/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\nimport warnOnce from \"warn-once\";\n\nexport type UseManyProps<TQueryFnData, TError, TData> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource: string;\n  /**\n   * ids of the item in the resource\n   * @type [`BaseKey[]`](/docs/api-reference/core/interfaceReferences/#basekey)\n   */\n  ids: BaseKey[];\n  /**\n   * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n   */\n  queryOptions?: UseQueryOptions<\n    GetManyResponse<TQueryFnData>,\n    TError,\n    GetManyResponse<TData>\n  >;\n  /**\n   * Metadata query for `dataProvider`,\n   */\n  meta?: MetaQuery;\n  /**\n   * Metadata query for `dataProvider`,\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default \"default\"\n   */\n  dataProviderName?: string;\n} & SuccessErrorNotification<GetManyResponse<TData>, TError, BaseKey[]> &\n  LiveModeProps &\n  UseLoadingOvertimeOptionsProps;\n\n/**\n * `useMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving multiple items from a `resource`.\n *\n * It uses `getMany` method as query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useMany} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useMany = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  resource: resourceFromProp,\n  ids,\n  queryOptions,\n  successNotification,\n  errorNotification,\n  meta,\n  metaData,\n  liveMode,\n  onLiveEvent,\n  liveParams,\n  dataProviderName,\n  overtimeOptions,\n}: UseManyProps<TQueryFnData, TError, TData>): QueryObserverResult<\n  GetManyResponse<TData>,\n  TError\n> &\n  UseLoadingOvertimeReturnType => {\n  const { resources, resource, identifier } = useResource(resourceFromProp);\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const handleNotification = useHandleNotification();\n  const getMeta = useMeta();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const preferredMeta = pickNotDeprecated(meta, metaData);\n  const pickedDataProvider = pickDataProvider(\n    identifier,\n    dataProviderName,\n    resources,\n  );\n  const isEnabled =\n    queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n  const { getMany, getOne } = dataProvider(pickedDataProvider);\n\n  const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n  const hasIds = Array.isArray(ids);\n  const hasResource = Boolean(resource?.name);\n  const manuallyEnabled = queryOptions?.enabled === true;\n\n  warnOnce(!hasIds && !manuallyEnabled, idsWarningMessage(ids, resource?.name));\n  warnOnce(!hasResource && !manuallyEnabled, resourceWarningMessage());\n\n  useResourceSubscription({\n    resource: identifier,\n    types: [\"*\"],\n    params: {\n      ids: ids ?? [],\n      meta: combinedMeta,\n      metaData: combinedMeta,\n      subscriptionType: \"useMany\",\n      ...liveParams,\n    },\n    channel: `resources/${resource?.name ?? \"\"}`,\n    enabled: isEnabled,\n    liveMode,\n    onLiveEvent,\n    dataProviderName: pickedDataProvider,\n    meta: {\n      ...meta,\n      dataProviderName,\n    },\n  });\n\n  const queryResponse = useQuery<\n    GetManyResponse<TQueryFnData>,\n    TError,\n    GetManyResponse<TData>\n  >({\n    queryKey: keys()\n      .data(pickedDataProvider)\n      .resource(identifier)\n      .action(\"many\")\n      .ids(...(ids ?? []))\n      .params({\n        ...(preferredMeta || {}),\n      })\n      .get(preferLegacyKeys),\n    queryFn: (context) => {\n      const meta = {\n        ...combinedMeta,\n        queryContext: prepareQueryContext(context),\n      };\n\n      if (getMany) {\n        return getMany({\n          resource: resource?.name,\n          ids,\n          meta,\n          metaData: meta,\n        });\n      }\n      return handleMultiple(\n        ids.map((id) =>\n          getOne<TQueryFnData>({\n            resource: resource?.name,\n            id,\n            meta,\n            metaData: meta,\n          }),\n        ),\n      );\n    },\n    enabled: hasIds && hasResource,\n    ...queryOptions,\n    onSuccess: (data) => {\n      queryOptions?.onSuccess?.(data);\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(data, ids, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig);\n    },\n    onError: (err: TError) => {\n      checkError(err);\n      queryOptions?.onError?.(err);\n\n      const notificationConfig =\n        typeof errorNotification === \"function\"\n          ? errorNotification(err, ids, identifier)\n          : errorNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${ids[0]}-${identifier}-getMany-notification`,\n        message: translate(\n          \"notifications.error\",\n          { statusCode: err.statusCode },\n          `Error (status code: ${err.statusCode})`,\n        ),\n        description: err.message,\n        type: \"error\",\n      });\n    },\n    meta: {\n      ...queryOptions?.meta,\n      ...getXRay(\"useMany\", preferLegacyKeys, resource?.name),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    ...overtimeOptions,\n    isLoading: queryResponse.isFetching,\n  });\n\n  return { ...queryResponse, overtime: { elapsedTime } };\n};\n\nconst idsWarningMessage = (\n  ids: BaseKey[],\n  resource: string,\n) => `[useMany]: Missing \"ids\" prop. Expected an array of ids, but got \"${typeof ids}\". Resource: \"${resource}\"\n\nSee https://refine.dev/docs/data/hooks/use-many/#ids-`;\n\nconst resourceWarningMessage = () => `[useMany]: Missing \"resource\" prop. Expected a string, but got undefined.\n\nSee https://refine.dev/docs/data/hooks/use-many/#resource-`;\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type MutateOptions,\n  useMutation,\n  useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport {\n  pickDataProvider,\n  pickNotDeprecated,\n  queryKeysReplacement,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n  useCancelNotification,\n  useDataProvider,\n  useHandleNotification,\n  useInvalidate,\n  useKeys,\n  useLog,\n  useMeta,\n  useMutationMode,\n  useOnError,\n  usePublish,\n  useRefineContext,\n  useResource,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseKey,\n  BaseRecord,\n  GetListResponse,\n  GetManyResponse,\n  GetOneResponse,\n  HttpError,\n  IQueryKeys,\n  MetaQuery,\n  MutationMode,\n  PrevContext as UpdateContext,\n  PreviousQuery,\n  UpdateResponse,\n} from \"../../contexts/data/types\";\nimport type { UseMutationResult } from \"../../definitions/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport { ActionTypes } from \"../../contexts/undoableQueue/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nexport type OptimisticUpdateMapType<TData, TVariables> = {\n  list?:\n    | ((\n        previous: GetListResponse<TData> | null | undefined,\n        values: TVariables,\n        id: BaseKey,\n      ) => GetListResponse<TData> | null)\n    | boolean;\n  many?:\n    | ((\n        previous: GetManyResponse<TData> | null | undefined,\n        values: TVariables,\n        id: BaseKey,\n      ) => GetManyResponse<TData> | null)\n    | boolean;\n  detail?:\n    | ((\n        previous: GetOneResponse<TData> | null | undefined,\n        values: TVariables,\n        id: BaseKey,\n      ) => GetOneResponse<TData> | null)\n    | boolean;\n};\n\nexport type UpdateParams<TData, TError, TVariables> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource?: string;\n  /**\n   * id for mutation function\n   */\n  id?: BaseKey;\n  /**\n   * [Determines when mutations are executed](/docs/advanced-tutorials/mutation-mode/)\n   */\n  mutationMode?: MutationMode;\n  /**\n   * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n   */\n  undoableTimeout?: number;\n  /**\n   * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n   */\n  onCancel?: (cancelMutation: () => void) => void;\n  /**\n   * Values for mutation function\n   */\n  values?: TVariables;\n  /**\n   * Metadata query for dataProvider\n   */\n  meta?: MetaQuery;\n  /**\n   * Metadata query for dataProvider\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default \"default\"\n   */\n  dataProviderName?: string;\n  /**\n   *  You can use it to manage the invalidations that will occur at the end of the mutation.\n   */\n  invalidates?: Array<keyof IQueryKeys>;\n  /**\n   * You can use it to customize the optimistic update logic.\n   * @default {\n   *   list: true,\n   *   many: true,\n   *   detail: true,\n   * }\n   */\n  optimisticUpdateMap?: OptimisticUpdateMapType<TData, TVariables>;\n} & SuccessErrorNotification<\n  UpdateResponse<TData>,\n  TError,\n  { id: BaseKey; values: TVariables }\n>;\n\nexport type UseUpdateReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  UpdateResponse<TData>,\n  TError,\n  UpdateParams<TData, TError, TVariables>,\n  UpdateContext<TData>\n> &\n  UseLoadingOvertimeReturnType;\n\nexport type UseUpdateProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      UpdateResponse<TData>,\n      TError,\n      UpdateParams<TData, TError, TVariables>,\n      UpdateContext<TData>\n    >,\n    \"mutationFn\" | \"onMutate\"\n  >;\n} & UseLoadingOvertimeOptionsProps &\n  UpdateParams<TData, TError, TVariables>;\n\n/**\n * `useUpdate` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for update mutations.\n *\n * It uses `update` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useUpdate} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useUpdate = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  id: idFromProps,\n  resource: resourceFromProps,\n  values: valuesFromProps,\n  dataProviderName: dataProviderNameFromProps,\n  successNotification: successNotificationFromProps,\n  errorNotification: errorNotificationFromProps,\n  meta: metaFromProps,\n  metaData: metaDataFromProps,\n  mutationMode: mutationModeFromProps,\n  undoableTimeout: undoableTimeoutFromProps,\n  onCancel: onCancelFromProps,\n  optimisticUpdateMap: optimisticUpdateMapFromProps,\n  invalidates: invalidatesFromProps,\n  mutationOptions,\n  overtimeOptions,\n}: UseUpdateProps<TData, TError, TVariables> = {}): UseUpdateReturnType<\n  TData,\n  TError,\n  TVariables\n> => {\n  const { resources, select } = useResource();\n  const queryClient = useQueryClient();\n  const dataProvider = useDataProvider();\n\n  const {\n    mutationMode: mutationModeContext,\n    undoableTimeout: undoableTimeoutContext,\n  } = useMutationMode();\n  const translate = useTranslate();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const publish = usePublish();\n  const { log } = useLog();\n  const { notificationDispatch } = useCancelNotification();\n  const handleNotification = useHandleNotification();\n  const invalidateStore = useInvalidate();\n  const getMeta = useMeta();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutationResult = useMutation<\n    UpdateResponse<TData>,\n    TError,\n    UpdateParams<TData, TError, TVariables>,\n    UpdateContext<TData>\n  >({\n    mutationFn: ({\n      id = idFromProps,\n      values = valuesFromProps,\n      resource: resourceName = resourceFromProps,\n      mutationMode = mutationModeFromProps,\n      undoableTimeout = undoableTimeoutFromProps,\n      onCancel = onCancelFromProps,\n      meta = metaFromProps,\n      metaData = metaDataFromProps,\n      dataProviderName = dataProviderNameFromProps,\n    }) => {\n      if (typeof id === \"undefined\") throw missingIdError;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { resource, identifier } = select(resourceName);\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      const undoableTimeoutPropOrContext =\n        undoableTimeout ?? undoableTimeoutContext;\n\n      if (!(mutationModePropOrContext === \"undoable\")) {\n        return dataProvider(\n          pickDataProvider(identifier, dataProviderName, resources),\n        ).update<TData, TVariables>({\n          resource: resource.name,\n          id,\n          variables: values,\n          meta: combinedMeta,\n          metaData: combinedMeta,\n        });\n      }\n      const updatePromise = new Promise<UpdateResponse<TData>>(\n        (resolve, reject) => {\n          const doMutation = () => {\n            dataProvider(\n              pickDataProvider(identifier, dataProviderName, resources),\n            )\n              .update<TData, TVariables>({\n                resource: resource.name,\n                id,\n                variables: values,\n                meta: combinedMeta,\n                metaData: combinedMeta,\n              })\n              .then((result) => resolve(result))\n              .catch((err) => reject(err));\n          };\n\n          const cancelMutation = () => {\n            reject({ message: \"mutationCancelled\" });\n          };\n\n          if (onCancel) {\n            onCancel(cancelMutation);\n          }\n\n          notificationDispatch({\n            type: ActionTypes.ADD,\n            payload: {\n              id: id,\n              resource: identifier,\n              cancelMutation: cancelMutation,\n              doMutation: doMutation,\n              seconds: undoableTimeoutPropOrContext,\n              isSilent: !!onCancel,\n            },\n          });\n        },\n      );\n      return updatePromise;\n    },\n    onMutate: async ({\n      resource: resourceName = resourceFromProps,\n      id = idFromProps,\n      mutationMode = mutationModeFromProps,\n      values = valuesFromProps,\n      dataProviderName = dataProviderNameFromProps,\n      meta = metaFromProps,\n      metaData = metaDataFromProps,\n      optimisticUpdateMap = optimisticUpdateMapFromProps ?? {\n        list: true,\n        many: true,\n        detail: true,\n      },\n    }) => {\n      if (typeof id === \"undefined\") throw missingIdError;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { identifier } = select(resourceName);\n\n      const {\n        gqlMutation: _,\n        gqlQuery: __,\n        ...preferredMeta\n      } = pickNotDeprecated(meta, metaData) ?? {};\n\n      const queryKey = queryKeysReplacement(preferLegacyKeys)(\n        identifier,\n        pickDataProvider(identifier, dataProviderName, resources),\n        preferredMeta,\n      );\n\n      const resourceKeys = keys()\n        .data(pickDataProvider(identifier, dataProviderName, resources))\n        .resource(identifier);\n\n      const previousQueries: PreviousQuery<TData>[] =\n        queryClient.getQueriesData(resourceKeys.get(preferLegacyKeys));\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      await queryClient.cancelQueries(\n        resourceKeys.get(preferLegacyKeys),\n        undefined,\n        {\n          silent: true,\n        },\n      );\n\n      if (mutationModePropOrContext !== \"pessimistic\") {\n        if (optimisticUpdateMap.list) {\n          // Set the previous queries to the new ones:\n          queryClient.setQueriesData(\n            resourceKeys\n              .action(\"list\")\n              .params(preferredMeta ?? {})\n              .get(preferLegacyKeys),\n            (previous?: GetListResponse<TData> | null) => {\n              if (typeof optimisticUpdateMap.list === \"function\") {\n                return optimisticUpdateMap.list(previous, values, id);\n              }\n\n              if (!previous) {\n                return null;\n              }\n\n              const data = previous.data.map((record: TData) => {\n                if (record.id?.toString() === id?.toString()) {\n                  return {\n                    id,\n                    ...record,\n                    ...values,\n                  } as unknown as TData;\n                }\n                return record;\n              });\n\n              return {\n                ...previous,\n                data,\n              };\n            },\n          );\n        }\n\n        if (optimisticUpdateMap.many) {\n          queryClient.setQueriesData(\n            resourceKeys.action(\"many\").get(preferLegacyKeys),\n            (previous?: GetManyResponse<TData> | null) => {\n              if (typeof optimisticUpdateMap.many === \"function\") {\n                return optimisticUpdateMap.many(previous, values, id);\n              }\n\n              if (!previous) {\n                return null;\n              }\n\n              const data = previous.data.map((record: TData) => {\n                if (record.id?.toString() === id?.toString()) {\n                  record = {\n                    id,\n                    ...record,\n                    ...values,\n                  } as unknown as TData;\n                }\n                return record;\n              });\n              return {\n                ...previous,\n                data,\n              };\n            },\n          );\n        }\n\n        if (optimisticUpdateMap.detail) {\n          queryClient.setQueriesData(\n            resourceKeys\n              .action(\"one\")\n              .id(id)\n              .params(preferredMeta ?? {})\n              .get(preferLegacyKeys),\n            (previous?: GetOneResponse<TData> | null) => {\n              if (typeof optimisticUpdateMap.detail === \"function\") {\n                return optimisticUpdateMap.detail(previous, values, id);\n              }\n\n              if (!previous) {\n                return null;\n              }\n\n              return {\n                ...previous,\n                data: {\n                  ...previous.data,\n                  ...values,\n                },\n              };\n            },\n          );\n        }\n      }\n\n      return {\n        previousQueries,\n        queryKey,\n      };\n    },\n    onSettled: (data, error, variables, context) => {\n      const {\n        id = idFromProps,\n        resource: resourceName = resourceFromProps,\n        dataProviderName = dataProviderNameFromProps,\n        invalidates = invalidatesFromProps ?? [\"list\", \"many\", \"detail\"],\n      } = variables;\n      if (typeof id === \"undefined\") throw missingIdError;\n      if (!resourceName) throw missingResourceError;\n\n      const { identifier } = select(resourceName);\n\n      invalidateStore({\n        resource: identifier,\n        dataProviderName: pickDataProvider(\n          identifier,\n          dataProviderName,\n          resources,\n        ),\n        invalidates,\n        id,\n      });\n\n      notificationDispatch({\n        type: ActionTypes.REMOVE,\n        payload: { id, resource: identifier },\n      });\n\n      mutationOptions?.onSettled?.(data, error, variables, context);\n    },\n    onSuccess: (data, variables, context) => {\n      const {\n        id = idFromProps,\n        resource: resourceName = resourceFromProps,\n        successNotification = successNotificationFromProps,\n        dataProviderName: dataProviderNameFromProp = dataProviderNameFromProps,\n        values = valuesFromProps,\n        meta = metaFromProps,\n        metaData = metaDataFromProps,\n      } = variables;\n      if (typeof id === \"undefined\") throw missingIdError;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { resource, identifier } = select(resourceName);\n      const resourceSingular = textTransformers.singular(identifier);\n\n      const dataProviderName = pickDataProvider(\n        identifier,\n        dataProviderNameFromProp,\n        resources,\n      );\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(data, { id, values }, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${id}-${identifier}-notification`,\n        description: translate(\"notifications.success\", \"Successful\"),\n        message: translate(\n          \"notifications.editSuccess\",\n          {\n            resource: translate(\n              `${identifier}.${identifier}`,\n              resourceSingular,\n            ),\n          },\n          `Successfully updated ${resourceSingular}`,\n        ),\n        type: \"success\",\n      });\n\n      publish?.({\n        channel: `resources/${resource.name}`,\n        type: \"updated\",\n        payload: {\n          ids: data.data?.id ? [data.data.id] : undefined,\n        },\n        date: new Date(),\n        meta: {\n          ...combinedMeta,\n          dataProviderName,\n        },\n      });\n\n      let previousData: any;\n      if (context) {\n        const queryData = queryClient.getQueryData<UpdateResponse<TData>>(\n          context.queryKey.detail(id),\n        );\n\n        previousData = Object.keys(values || {}).reduce<any>((acc, item) => {\n          acc[item] = queryData?.data?.[item];\n          return acc;\n        }, {});\n      }\n\n      const {\n        fields: _fields,\n        operation: _operation,\n        variables: _variables,\n        ...rest\n      } = combinedMeta || {};\n      log?.mutate({\n        action: \"update\",\n        resource: resource.name,\n        data: values,\n        previousData,\n        meta: {\n          id,\n          dataProviderName,\n          ...rest,\n        },\n      });\n\n      mutationOptions?.onSuccess?.(data, variables, context);\n    },\n    onError: (err: TError, variables, context) => {\n      const {\n        id = idFromProps,\n        resource: resourceName = resourceFromProps,\n        errorNotification = errorNotificationFromProps,\n        values = valuesFromProps,\n      } = variables;\n      if (typeof id === \"undefined\") throw missingIdError;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { identifier } = select(resourceName);\n\n      // set back the queries to the context:\n      if (context) {\n        for (const query of context.previousQueries) {\n          queryClient.setQueryData(query[0], query[1]);\n        }\n      }\n\n      if (err.message !== \"mutationCancelled\") {\n        checkError?.(err);\n\n        const resourceSingular = textTransformers.singular(identifier);\n\n        const notificationConfig =\n          typeof errorNotification === \"function\"\n            ? errorNotification(err, { id, values }, identifier)\n            : errorNotification;\n\n        handleNotification(notificationConfig, {\n          key: `${id}-${identifier}-notification`,\n          message: translate(\n            \"notifications.editError\",\n            {\n              resource: translate(\n                `${identifier}.${identifier}`,\n                resourceSingular,\n              ),\n              statusCode: err.statusCode,\n            },\n            `Error when updating ${resourceSingular} (status code: ${err.statusCode})`,\n          ),\n          description: err.message,\n          type: \"error\",\n        });\n      }\n\n      mutationOptions?.onError?.(err, variables, context);\n    },\n    mutationKey: keys().data().mutation(\"update\").get(preferLegacyKeys),\n    ...mutationOptions,\n    meta: {\n      ...mutationOptions?.meta,\n      ...getXRay(\"useUpdate\", preferLegacyKeys),\n    },\n  });\n  const { mutate, mutateAsync, ...mutation } = mutationResult;\n\n  const { elapsedTime } = useLoadingOvertime({\n    ...overtimeOptions,\n    isLoading: mutation.isLoading,\n  });\n\n  // this function is used to make the `variables` parameter optional\n  const handleMutation = (\n    variables?: UpdateParams<TData, TError, TVariables>,\n    options?: MutateOptions<\n      UpdateResponse<TData>,\n      TError,\n      UpdateParams<TData, TError, TVariables>,\n      UpdateContext<TData>\n    >,\n  ) => {\n    return mutate(variables || {}, options);\n  };\n\n  // this function is used to make the `variables` parameter optional\n  const handleMutateAsync = (\n    variables?: UpdateParams<TData, TError, TVariables>,\n    options?: MutateOptions<\n      UpdateResponse<TData>,\n      TError,\n      UpdateParams<TData, TError, TVariables>,\n      UpdateContext<TData>\n    >,\n  ) => {\n    return mutateAsync(variables || {}, options);\n  };\n\n  return {\n    ...mutation,\n    mutate: handleMutation,\n    mutateAsync: handleMutateAsync,\n    overtime: { elapsedTime },\n  };\n};\n\nconst missingResourceError = new Error(\n  \"[useUpdate]: `resource` is not defined or not matched but is required\",\n);\n\nconst missingIdError = new Error(\n  \"[useUpdate]: `id` is not defined but is required in edit and clone actions\",\n);\n\nconst missingValuesError = new Error(\n  \"[useUpdate]: `values` is not provided but is required\",\n);\n", "import type { BaseKey } from \"../data/types\";\n\nexport enum ActionTypes {\n  ADD = \"ADD\",\n  REMOVE = \"REMOVE\",\n  DECREASE_NOTIFICATION_SECOND = \"DECREASE_NOTIFICATION_SECOND\",\n}\n\nexport interface IUndoableQueue {\n  id: BaseKey;\n  resource: string;\n  cancelMutation: () => void;\n  doMutation: () => void;\n  seconds: number;\n  isRunning: boolean;\n  isSilent: boolean;\n}\n\nexport interface IUndoableQueueContext {\n  notifications: IUndoableQueue[];\n  notificationDispatch: React.Dispatch<any>;\n}\n", "import {\n  pickDataProvider,\n  pickNotDeprecated,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type MutateOptions,\n  useMutation,\n} from \"@tanstack/react-query\";\n\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useInvalidate,\n  useKeys,\n  useLog,\n  useMeta,\n  useOnError,\n  usePublish,\n  useRefineContext,\n  useResource,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseRecord,\n  CreateResponse,\n  HttpError,\n  IQueryKeys,\n  MetaQuery,\n} from \"../../contexts/data/types\";\nimport type { UseMutationResult } from \"../../definitions/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nexport type UseCreateParams<TData, TError, TVariables> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource?: string;\n  /**\n   * Values for mutation function\n   */\n  values?: TVariables;\n  /**\n   * Meta data for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   * Meta data for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   */\n  dataProviderName?: string;\n  /**\n   * You can use it to manage the invalidations that will occur at the end of the mutation.\n   */\n  invalidates?: Array<keyof IQueryKeys>;\n} & SuccessErrorNotification<CreateResponse<TData>, TError, TVariables>;\n\nexport type UseCreateReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  CreateResponse<TData>,\n  TError,\n  UseCreateParams<TData, TError, TVariables>,\n  unknown\n>;\n\nexport type UseCreateProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      CreateResponse<TData>,\n      TError,\n      UseCreateParams<TData, TError, TVariables>,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n} & UseLoadingOvertimeOptionsProps &\n  UseCreateParams<TData, TError, TVariables>;\n\n/**\n * `useCreate` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for create mutations.\n *\n * It uses `create` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCreate} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\n\nexport const useCreate = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  resource: resourceFromProps,\n  values: valuesFromProps,\n  dataProviderName: dataProviderNameFromProps,\n  successNotification: successNotificationFromProps,\n  errorNotification: errorNotificationFromProps,\n  invalidates: invalidatesFromProps,\n  meta: metaFromProps,\n  metaData: metaDataFromProps,\n  mutationOptions,\n  overtimeOptions,\n}: UseCreateProps<TData, TError, TVariables> = {}): UseCreateReturnType<\n  TData,\n  TError,\n  TVariables\n> &\n  UseLoadingOvertimeReturnType => {\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const dataProvider = useDataProvider();\n  const invalidateStore = useInvalidate();\n  const { resources, select } = useResource();\n  const translate = useTranslate();\n  const publish = usePublish();\n  const { log } = useLog();\n  const handleNotification = useHandleNotification();\n  const getMeta = useMeta();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutationResult = useMutation<\n    CreateResponse<TData>,\n    TError,\n    UseCreateParams<TData, TError, TVariables>,\n    unknown\n  >({\n    mutationFn: ({\n      resource: resourceName = resourceFromProps,\n      values = valuesFromProps,\n      meta = metaFromProps,\n      metaData = metaDataFromProps,\n      dataProviderName = dataProviderNameFromProps,\n    }: UseCreateParams<TData, TError, TVariables>) => {\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { resource, identifier } = select(resourceName);\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      return dataProvider(\n        pickDataProvider(identifier, dataProviderName, resources),\n      ).create<TData, TVariables>({\n        resource: resource.name,\n        variables: values,\n        meta: combinedMeta,\n        metaData: combinedMeta,\n      });\n    },\n    onSuccess: (data, variables, context) => {\n      const {\n        resource: resourceName = resourceFromProps,\n        successNotification:\n          successNotificationFromProp = successNotificationFromProps,\n        dataProviderName: dataProviderNameFromProp = dataProviderNameFromProps,\n        invalidates = invalidatesFromProps ?? [\"list\", \"many\"],\n        values = valuesFromProps,\n        meta = metaFromProps,\n        metaData = metaDataFromProps,\n      } = variables;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { resource, identifier } = select(resourceName);\n      const resourceSingular = textTransformers.singular(identifier);\n\n      const dataProviderName = pickDataProvider(\n        identifier,\n        dataProviderNameFromProp,\n        resources,\n      );\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const notificationConfig =\n        typeof successNotificationFromProp === \"function\"\n          ? successNotificationFromProp(data, values, identifier)\n          : successNotificationFromProp;\n\n      handleNotification(notificationConfig, {\n        key: `create-${identifier}-notification`,\n        message: translate(\n          \"notifications.createSuccess\",\n          {\n            resource: translate(\n              `${identifier}.${identifier}`,\n              resourceSingular,\n            ),\n          },\n          `Successfully created ${resourceSingular}`,\n        ),\n        description: translate(\"notifications.success\", \"Success\"),\n        type: \"success\",\n      });\n\n      invalidateStore({\n        resource: identifier,\n        dataProviderName,\n        invalidates,\n      });\n\n      publish?.({\n        channel: `resources/${resource.name}`,\n        type: \"created\",\n        payload: {\n          ids: data?.data?.id ? [data.data.id] : undefined,\n        },\n        date: new Date(),\n        meta: {\n          ...combinedMeta,\n          dataProviderName,\n        },\n      });\n\n      const {\n        fields: _fields,\n        operation: _operation,\n        variables: _variables,\n        ...rest\n      } = combinedMeta || {};\n      log?.mutate({\n        action: \"create\",\n        resource: resource.name,\n        data: values,\n        meta: {\n          dataProviderName,\n          id: data?.data?.id ?? undefined,\n          ...rest,\n        },\n      });\n\n      mutationOptions?.onSuccess?.(data, variables, context);\n    },\n    onError: (err: TError, variables, context) => {\n      const {\n        resource: resourceName = resourceFromProps,\n        errorNotification:\n          errorNotificationFromProp = errorNotificationFromProps,\n        values = valuesFromProps,\n      } = variables;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      checkError(err);\n\n      const { identifier } = select(resourceName);\n\n      const resourceSingular = textTransformers.singular(identifier);\n\n      const notificationConfig =\n        typeof errorNotificationFromProp === \"function\"\n          ? errorNotificationFromProp(err, values, identifier)\n          : errorNotificationFromProp;\n\n      handleNotification(notificationConfig, {\n        key: `create-${identifier}-notification`,\n        description: err.message,\n        message: translate(\n          \"notifications.createError\",\n          {\n            resource: translate(\n              `${identifier}.${identifier}`,\n              resourceSingular,\n            ),\n            statusCode: err.statusCode,\n          },\n          `There was an error creating ${resourceSingular} (status code: ${err.statusCode})`,\n        ),\n        type: \"error\",\n      });\n\n      mutationOptions?.onError?.(err, variables, context);\n    },\n    mutationKey: keys().data().mutation(\"create\").get(preferLegacyKeys),\n    ...mutationOptions,\n    meta: {\n      ...mutationOptions?.meta,\n      ...getXRay(\"useCreate\", preferLegacyKeys),\n    },\n  });\n  const { mutate, mutateAsync, ...mutation } = mutationResult;\n\n  const { elapsedTime } = useLoadingOvertime({\n    ...overtimeOptions,\n    isLoading: mutation.isLoading,\n  });\n\n  // this function is used to make the `variables` parameter optional\n  const handleMutation = (\n    variables?: UseCreateParams<TData, TError, TVariables>,\n    options?: MutateOptions<\n      CreateResponse<TData>,\n      TError,\n      UseCreateParams<TData, TError, TVariables>,\n      unknown\n    >,\n  ) => {\n    return mutate(variables || {}, options);\n  };\n\n  // this function is used to make the `variables` parameter optional\n  const handleMutateAsync = (\n    variables?: UseCreateParams<TData, TError, TVariables>,\n    options?: MutateOptions<\n      CreateResponse<TData>,\n      TError,\n      UseCreateParams<TData, TError, TVariables>,\n      unknown\n    >,\n  ) => {\n    return mutateAsync(variables || {}, options);\n  };\n\n  return {\n    ...mutation,\n    mutate: handleMutation,\n    mutateAsync: handleMutateAsync,\n    overtime: { elapsedTime },\n  };\n};\n\nconst missingResourceError = new Error(\n  \"[useCreate]: `resource` is not defined or not matched but is required\",\n);\n\nconst missingValuesError = new Error(\n  \"[useCreate]: `values` is not provided but is required\",\n);\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type UseMutationResult,\n  useMutation,\n  useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport {\n  pickDataProvider,\n  pickNotDeprecated,\n  queryKeysReplacement,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n  useCancelNotification,\n  useDataProvider,\n  useHandleNotification,\n  useInvalidate,\n  useKeys,\n  useLog,\n  useMeta,\n  useMutationMode,\n  useOnError,\n  usePublish,\n  useRefineContext,\n  useResource,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseKey,\n  BaseRecord,\n  DeleteOneResponse,\n  GetListResponse,\n  HttpError,\n  IQueryKeys,\n  MetaQuery,\n  MutationMode,\n  PrevContext as DeleteContext,\n  PreviousQuery,\n} from \"../../contexts/data/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport { ActionTypes } from \"../../contexts/undoableQueue/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nexport type DeleteParams<TData, TError, TVariables> = {\n  /**\n   * id for mutation function\n   */\n  id: BaseKey;\n  /**\n   * Resource name for API data interactions\n   */\n  resource: string;\n  /**\n   * [Determines when mutations are executed](/docs/advanced-tutorials/mutation-mode/)\n   */\n  mutationMode?: MutationMode;\n  /**\n   * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n   */\n  undoableTimeout?: number;\n  /**\n   * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n   */\n  onCancel?: (cancelMutation: () => void) => void;\n  /**\n   * Metadata query for dataProvider\n   */\n  meta?: MetaQuery;\n  /**\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default \"default\"\n   */\n  dataProviderName?: string;\n  /**\n   *  You can use it to manage the invalidations that will occur at the end of the mutation.\n   */\n  invalidates?: Array<keyof IQueryKeys>;\n  /**\n   * Values for mutation function\n   */\n  values?: TVariables;\n} & SuccessErrorNotification<DeleteOneResponse<TData>, TError, BaseKey>;\n\nexport type UseDeleteReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  DeleteOneResponse<TData>,\n  TError,\n  DeleteParams<TData, TError, TVariables>,\n  DeleteContext<TData>\n> &\n  UseLoadingOvertimeReturnType;\n\nexport type UseDeleteProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      DeleteOneResponse<TData>,\n      TError,\n      DeleteParams<TData, TError, TVariables>,\n      DeleteContext<TData>\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n  >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useDelete` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for delete mutations.\n *\n * It uses `deleteOne` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useDelete} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n */\nexport const useDelete = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  mutationOptions,\n  overtimeOptions,\n}: UseDeleteProps<TData, TError, TVariables> = {}): UseDeleteReturnType<\n  TData,\n  TError,\n  TVariables\n> => {\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const dataProvider = useDataProvider();\n\n  const { resources, select } = useResource();\n  const queryClient = useQueryClient();\n\n  const {\n    mutationMode: mutationModeContext,\n    undoableTimeout: undoableTimeoutContext,\n  } = useMutationMode();\n\n  const { notificationDispatch } = useCancelNotification();\n  const translate = useTranslate();\n  const publish = usePublish();\n  const { log } = useLog();\n  const handleNotification = useHandleNotification();\n  const invalidateStore = useInvalidate();\n  const getMeta = useMeta();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    DeleteOneResponse<TData>,\n    TError,\n    DeleteParams<TData, TError, TVariables>,\n    DeleteContext<TData>\n  >({\n    mutationFn: ({\n      id,\n      mutationMode,\n      undoableTimeout,\n      resource: resourceName,\n      onCancel,\n      meta,\n      metaData,\n      dataProviderName,\n      values,\n    }) => {\n      const { resource, identifier } = select(resourceName);\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      const undoableTimeoutPropOrContext =\n        undoableTimeout ?? undoableTimeoutContext;\n\n      if (!(mutationModePropOrContext === \"undoable\")) {\n        return dataProvider(\n          pickDataProvider(identifier, dataProviderName, resources),\n        ).deleteOne<TData, TVariables>({\n          resource: resource.name,\n          id,\n          meta: combinedMeta,\n          metaData: combinedMeta,\n          variables: values,\n        });\n      }\n\n      const deletePromise = new Promise<DeleteOneResponse<TData>>(\n        (resolve, reject) => {\n          const doMutation = () => {\n            dataProvider(\n              pickDataProvider(identifier, dataProviderName, resources),\n            )\n              .deleteOne<TData, TVariables>({\n                resource: resource.name,\n                id,\n                meta: combinedMeta,\n                metaData: combinedMeta,\n                variables: values,\n              })\n              .then((result) => resolve(result))\n              .catch((err) => reject(err));\n          };\n\n          const cancelMutation = () => {\n            reject({ message: \"mutationCancelled\" });\n          };\n\n          if (onCancel) {\n            onCancel(cancelMutation);\n          }\n\n          notificationDispatch({\n            type: ActionTypes.ADD,\n            payload: {\n              id,\n              resource: identifier,\n              cancelMutation: cancelMutation,\n              doMutation: doMutation,\n              seconds: undoableTimeoutPropOrContext,\n              isSilent: !!onCancel,\n            },\n          });\n        },\n      );\n      return deletePromise;\n    },\n    onMutate: async ({\n      id,\n      resource: resourceName,\n      mutationMode,\n      dataProviderName,\n      meta,\n      metaData,\n    }) => {\n      const { identifier } = select(resourceName);\n\n      const {\n        gqlMutation: _,\n        gqlQuery: __,\n        ...preferredMeta\n      } = pickNotDeprecated(meta, metaData) ?? {};\n\n      const queryKey = queryKeysReplacement(preferLegacyKeys)(\n        identifier,\n        pickDataProvider(identifier, dataProviderName, resources),\n        preferredMeta,\n      );\n\n      const resourceKeys = keys()\n        .data(pickDataProvider(identifier, dataProviderName, resources))\n        .resource(identifier);\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      await queryClient.cancelQueries(\n        resourceKeys.get(preferLegacyKeys),\n        undefined,\n        {\n          silent: true,\n        },\n      );\n\n      const previousQueries: PreviousQuery<TData>[] =\n        queryClient.getQueriesData(resourceKeys.get(preferLegacyKeys));\n\n      if (mutationModePropOrContext !== \"pessimistic\") {\n        // Set the previous queries to the new ones:\n        queryClient.setQueriesData(\n          resourceKeys\n            .action(\"list\")\n            .params(preferredMeta ?? {})\n            .get(preferLegacyKeys),\n          (previous?: GetListResponse<TData> | null) => {\n            if (!previous) {\n              return null;\n            }\n            const data = previous.data.filter(\n              (record: TData) => record.id?.toString() !== id.toString(),\n            );\n\n            return {\n              data,\n              total: previous.total - 1,\n            };\n          },\n        );\n\n        queryClient.setQueriesData(\n          resourceKeys.action(\"many\").get(preferLegacyKeys),\n          (previous?: GetListResponse<TData> | null) => {\n            if (!previous) {\n              return null;\n            }\n            const data = previous.data.filter((record: TData) => {\n              return record.id?.toString() !== id?.toString();\n            });\n\n            return {\n              ...previous,\n              data,\n            };\n          },\n        );\n      }\n\n      return {\n        previousQueries,\n        queryKey,\n      };\n    },\n    onSettled: (\n      _data,\n      _error,\n      {\n        id,\n        resource: resourceName,\n        dataProviderName,\n        invalidates = [\"list\", \"many\"],\n      },\n    ) => {\n      const { identifier } = select(resourceName);\n\n      // invalidate the cache for the list and many queries:\n      invalidateStore({\n        resource: identifier,\n        dataProviderName: pickDataProvider(\n          identifier,\n          dataProviderName,\n          resources,\n        ),\n        invalidates,\n      });\n\n      notificationDispatch({\n        type: ActionTypes.REMOVE,\n        payload: { id, resource: identifier },\n      });\n    },\n    onSuccess: (\n      _data,\n      {\n        id,\n        resource: resourceName,\n        successNotification,\n        dataProviderName: dataProviderNameFromProp,\n        meta,\n        metaData,\n      },\n      context,\n    ) => {\n      const { resource, identifier } = select(resourceName);\n      const resourceSingular = textTransformers.singular(identifier);\n\n      const dataProviderName = pickDataProvider(\n        identifier,\n        dataProviderNameFromProp,\n        resources,\n      );\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      // Remove the queries from the cache:\n      queryClient.removeQueries(context?.queryKey.detail(id));\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(_data, id, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${id}-${identifier}-notification`,\n        description: translate(\"notifications.success\", \"Success\"),\n        message: translate(\n          \"notifications.deleteSuccess\",\n          {\n            resource: translate(\n              `${identifier}.${identifier}`,\n              resourceSingular,\n            ),\n          },\n          `Successfully deleted a ${resourceSingular}`,\n        ),\n        type: \"success\",\n      });\n\n      publish?.({\n        channel: `resources/${resource.name}`,\n        type: \"deleted\",\n        payload: {\n          ids: [id],\n        },\n        date: new Date(),\n        meta: {\n          ...combinedMeta,\n          dataProviderName,\n        },\n      });\n\n      const {\n        fields: _fields,\n        operation: _operation,\n        variables: _variables,\n        ...rest\n      } = combinedMeta || {};\n      log?.mutate({\n        action: \"delete\",\n        resource: resource.name,\n        meta: {\n          id,\n          dataProviderName,\n          ...rest,\n        },\n      });\n\n      // Remove the queries from the cache:\n      queryClient.removeQueries(context?.queryKey.detail(id));\n    },\n    onError: (\n      err: TError,\n      { id, resource: resourceName, errorNotification },\n      context,\n    ) => {\n      const { identifier } = select(resourceName);\n\n      // set back the queries to the context:\n      if (context) {\n        for (const query of context.previousQueries) {\n          queryClient.setQueryData(query[0], query[1]);\n        }\n      }\n\n      if (err.message !== \"mutationCancelled\") {\n        checkError(err);\n\n        const resourceSingular = textTransformers.singular(identifier);\n\n        const notificationConfig =\n          typeof errorNotification === \"function\"\n            ? errorNotification(err, id, identifier)\n            : errorNotification;\n\n        handleNotification(notificationConfig, {\n          key: `${id}-${identifier}-notification`,\n          message: translate(\n            \"notifications.deleteError\",\n            {\n              resource: resourceSingular,\n              statusCode: err.statusCode,\n            },\n            `Error (status code: ${err.statusCode})`,\n          ),\n          description: err.message,\n          type: \"error\",\n        });\n      }\n    },\n    mutationKey: keys().data().mutation(\"delete\").get(preferLegacyKeys),\n    ...mutationOptions,\n    meta: {\n      ...mutationOptions?.meta,\n      ...getXRay(\"useDelete\", preferLegacyKeys),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    ...overtimeOptions,\n    isLoading: mutation.isLoading,\n  });\n\n  return { ...mutation, overtime: { elapsedTime } };\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type MutateOptions,\n  useMutation,\n} from \"@tanstack/react-query\";\n\nimport {\n  handleMultiple,\n  pickDataProvider,\n  pickNotDeprecated,\n} from \"@definitions\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useInvalidate,\n  useKeys,\n  useLog,\n  useMeta,\n  usePublish,\n  useRefineContext,\n  useResource,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseRecord,\n  CreateManyResponse,\n  HttpError,\n  IQueryKeys,\n  MetaQuery,\n} from \"../../contexts/data/types\";\nimport type { UseMutationResult } from \"../../definitions/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nexport type UseCreateManyParams<TData, TError, TVariables> = {\n  resource?: string;\n  values?: TVariables[];\n  meta?: MetaQuery;\n  metaData?: MetaQuery;\n  dataProviderName?: string;\n  invalidates?: Array<keyof IQueryKeys>;\n} & SuccessErrorNotification<CreateManyResponse<TData>, TError, TVariables[]>;\n\nexport type UseCreateManyReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  CreateManyResponse<TData>,\n  TError,\n  UseCreateManyParams<TData, TError, TVariables>,\n  unknown\n>;\n\nexport type UseCreateManyProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      CreateManyResponse<TData>,\n      TError,\n      UseCreateManyParams<TData, TError, TVariables>\n    >,\n    \"mutationFn\"\n  >;\n} & UseLoadingOvertimeOptionsProps &\n  UseCreateManyParams<TData, TError, TVariables>;\n\n/**\n * `useCreateMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple create mutations.\n *\n * It uses `createMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCreateMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useCreateMany = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  resource: resourceFromProps,\n  values: valuesFromProps,\n  dataProviderName: dataProviderNameFromProps,\n  successNotification: successNotificationFromProps,\n  errorNotification: errorNotificationFromProps,\n  meta: metaFromProps,\n  metaData: metaDataFromProps,\n  invalidates: invalidatesFromProps,\n  mutationOptions,\n  overtimeOptions,\n}: UseCreateManyProps<TData, TError, TVariables> = {}): UseCreateManyReturnType<\n  TData,\n  TError,\n  TVariables\n> &\n  UseLoadingOvertimeReturnType => {\n  const dataProvider = useDataProvider();\n  const { resources, select } = useResource();\n  const translate = useTranslate();\n  const publish = usePublish();\n  const handleNotification = useHandleNotification();\n  const invalidateStore = useInvalidate();\n  const { log } = useLog();\n  const getMeta = useMeta();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutationResult = useMutation<\n    CreateManyResponse<TData>,\n    TError,\n    UseCreateManyParams<TData, TError, TVariables>\n  >({\n    mutationFn: ({\n      resource: resourceName = resourceFromProps,\n      values = valuesFromProps,\n      meta = metaFromProps,\n      metaData = metaDataFromProps,\n      dataProviderName = dataProviderNameFromProps,\n    }: UseCreateManyParams<TData, TError, TVariables>) => {\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { resource, identifier } = select(resourceName);\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const selectedDataProvider = dataProvider(\n        pickDataProvider(identifier, dataProviderName, resources),\n      );\n\n      if (selectedDataProvider.createMany) {\n        return selectedDataProvider.createMany<TData, TVariables>({\n          resource: resource.name,\n          variables: values,\n          meta: combinedMeta,\n          metaData: combinedMeta,\n        });\n      }\n      return handleMultiple(\n        values.map((val) =>\n          selectedDataProvider.create<TData, TVariables>({\n            resource: resource.name,\n            variables: val,\n            meta: combinedMeta,\n            metaData: combinedMeta,\n          }),\n        ),\n      );\n    },\n    onSuccess: (response, variables, context) => {\n      const {\n        resource: resourceName = resourceFromProps,\n        successNotification = successNotificationFromProps,\n        dataProviderName: dataProviderNameFromProp = dataProviderNameFromProps,\n        invalidates = invalidatesFromProps ?? [\"list\", \"many\"],\n        values = valuesFromProps,\n        meta = metaFromProps,\n        metaData = metaDataFromProps,\n      } = variables;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { resource, identifier } = select(resourceName);\n      const resourcePlural = textTransformers.plural(identifier);\n\n      const dataProviderName = pickDataProvider(\n        identifier,\n        dataProviderNameFromProp,\n        resources,\n      );\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(response, values, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig, {\n        key: `createMany-${identifier}-notification`,\n        message: translate(\n          \"notifications.createSuccess\",\n          {\n            resource: translate(`${identifier}.${identifier}`, identifier),\n          },\n          `Successfully created ${resourcePlural}`,\n        ),\n        description: translate(\"notifications.success\", \"Success\"),\n        type: \"success\",\n      });\n\n      invalidateStore({\n        resource: identifier,\n        dataProviderName,\n        invalidates,\n      });\n\n      const ids = response?.data\n        .filter((item) => item?.id !== undefined)\n        .map((item) => item.id!);\n      publish?.({\n        channel: `resources/${resource.name}`,\n        type: \"created\",\n        payload: {\n          ids,\n        },\n        date: new Date(),\n        meta: {\n          ...combinedMeta,\n          dataProviderName,\n        },\n      });\n\n      const {\n        fields: _fields,\n        operation: _operation,\n        variables: _variables,\n        ...rest\n      } = combinedMeta || {};\n      log?.mutate({\n        action: \"createMany\",\n        resource: resource.name,\n        data: values,\n        meta: {\n          dataProviderName,\n          ids,\n          ...rest,\n        },\n      });\n\n      mutationOptions?.onSuccess?.(response, variables, context);\n    },\n    onError: (err: TError, variables, context) => {\n      const {\n        resource: resourceName = resourceFromProps,\n        errorNotification = errorNotificationFromProps,\n        values = valuesFromProps,\n      } = variables;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { identifier } = select(resourceName);\n\n      const notificationConfig =\n        typeof errorNotification === \"function\"\n          ? errorNotification(err, values, identifier)\n          : errorNotification;\n\n      handleNotification(notificationConfig, {\n        key: `createMany-${identifier}-notification`,\n        description: err.message,\n        message: translate(\n          \"notifications.createError\",\n          {\n            resource: translate(`${identifier}.${identifier}`, identifier),\n            statusCode: err.statusCode,\n          },\n          `There was an error creating ${identifier} (status code: ${err.statusCode}`,\n        ),\n        type: \"error\",\n      });\n\n      mutationOptions?.onError?.(err, variables, context);\n    },\n    mutationKey: keys().data().mutation(\"createMany\").get(preferLegacyKeys),\n    ...mutationOptions,\n    meta: {\n      ...mutationOptions?.meta,\n      ...getXRay(\"useCreateMany\", preferLegacyKeys),\n    },\n  });\n  const { mutate, mutateAsync, ...mutation } = mutationResult;\n\n  const { elapsedTime } = useLoadingOvertime({\n    ...overtimeOptions,\n    isLoading: mutation.isLoading,\n  });\n\n  // this function is used to make the `variables` parameter optional\n  const handleMutation = (\n    variables?: UseCreateManyParams<TData, TError, TVariables>,\n    options?: MutateOptions<\n      CreateManyResponse<TData>,\n      TError,\n      UseCreateManyParams<TData, TError, TVariables>,\n      unknown\n    >,\n  ) => {\n    return mutate(variables || {}, options);\n  };\n\n  // this function is used to make the `variables` parameter optional\n  const handleMutateAsync = (\n    variables?: UseCreateManyParams<TData, TError, TVariables>,\n    options?: MutateOptions<\n      CreateManyResponse<TData>,\n      TError,\n      UseCreateManyParams<TData, TError, TVariables>,\n      unknown\n    >,\n  ) => {\n    return mutateAsync(variables || {}, options);\n  };\n\n  return {\n    ...mutation,\n    mutate: handleMutation,\n    mutateAsync: handleMutateAsync,\n    overtime: { elapsedTime },\n  };\n};\n\nconst missingResourceError = new Error(\n  \"[useCreateMany]: `resource` is not defined or not matched but is required\",\n);\n\nconst missingValuesError = new Error(\n  \"[useCreateMany]: `values` is not provided but is required\",\n);\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type MutateOptions,\n  useMutation,\n  useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport {\n  handleMultiple,\n  pickDataProvider,\n  pickNotDeprecated,\n  queryKeysReplacement,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n  useCancelNotification,\n  useDataProvider,\n  useHandleNotification,\n  useInvalidate,\n  useKeys,\n  useLog,\n  useMeta,\n  useMutationMode,\n  useOnError,\n  usePublish,\n  useRefineContext,\n  useResource,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseKey,\n  BaseRecord,\n  GetListResponse,\n  GetManyResponse,\n  GetOneResponse,\n  HttpError,\n  IQueryKeys,\n  MetaQuery,\n  MutationMode,\n  PrevContext as UpdateContext,\n  QueryResponse,\n  UpdateManyResponse,\n} from \"../../contexts/data/types\";\nimport type { UseMutationResult } from \"../../definitions/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport { ActionTypes } from \"../../contexts/undoableQueue/types\";\n\nexport type OptimisticUpdateManyMapType<TData, TVariables> = {\n  list?:\n    | ((\n        previous: GetListResponse<TData> | null | undefined,\n        values: TVariables,\n        ids: BaseKey[],\n      ) => GetListResponse<TData> | null)\n    | boolean;\n  many?:\n    | ((\n        previous: GetManyResponse<TData> | null | undefined,\n        values: TVariables,\n        ids: BaseKey[],\n      ) => GetManyResponse<TData> | null)\n    | boolean;\n  detail?:\n    | ((\n        previous: GetOneResponse<TData> | null | undefined,\n        values: TVariables,\n        id: BaseKey,\n      ) => GetOneResponse<TData> | null)\n    | boolean;\n};\n\nexport type UpdateManyParams<TData, TError, TVariables> = {\n  /**\n   * ids for mutation function\n   */\n  ids?: BaseKey[];\n  /**\n   * Resource name for API data interactions\n   */\n  resource?: string;\n  /**\n   * [Determines when mutations are executed](/docs/advanced-tutorials/mutation-mode/)\n   */\n  mutationMode?: MutationMode;\n  /**\n   * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n   */\n  undoableTimeout?: number;\n  /**\n   * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n   */\n  onCancel?: (cancelMutation: () => void) => void;\n  /**\n   * Values for mutation function\n   */\n  values?: TVariables;\n  /**\n   * meta data for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   * meta data for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default \"default\"\n   */\n  dataProviderName?: string;\n  /**\n   *  You can use it to manage the invalidations that will occur at the end of the mutation.\n   */\n  invalidates?: Array<keyof IQueryKeys>;\n  /**\n   * You can use it to manage the invalidations that will occur at the end of the mutation.\n   * @default {\n   *   list: true,\n   *   many: true,\n   *   detail: true,\n   * }\n   */\n  optimisticUpdateMap?: OptimisticUpdateManyMapType<TData, TVariables>;\n} & SuccessErrorNotification<\n  UpdateManyResponse<TData>,\n  TError,\n  { ids: BaseKey[]; values: TVariables }\n>;\n\nexport type UseUpdateManyReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  UpdateManyResponse<TData>,\n  TError,\n  UpdateManyParams<TData, TError, TVariables>,\n  UpdateContext<TData>\n> &\n  UseLoadingOvertimeReturnType;\n\nexport type UseUpdateManyProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      UpdateManyResponse<TData>,\n      TError,\n      UpdateManyParams<TData, TError, TVariables>,\n      UpdateContext<TData>\n    >,\n    \"mutationFn\" | \"onMutate\"\n  >;\n} & UseLoadingOvertimeOptionsProps &\n  UpdateManyParams<TData, TError, TVariables>;\n\n/**\n * `useUpdateMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple update mutations.\n *\n * It uses `updateMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useUpdateMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useUpdateMany = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  ids: idsFromProps,\n  resource: resourceFromProps,\n  values: valuesFromProps,\n  dataProviderName: dataProviderNameFromProps,\n  successNotification: successNotificationFromProps,\n  errorNotification: errorNotificationFromProps,\n  meta: metaFromProps,\n  metaData: metaDataFromProps,\n  mutationMode: mutationModeFromProps,\n  undoableTimeout: undoableTimeoutFromProps,\n  onCancel: onCancelFromProps,\n  optimisticUpdateMap: optimisticUpdateMapFromProps,\n  invalidates: invalidatesFromProps,\n  mutationOptions,\n  overtimeOptions,\n}: UseUpdateManyProps<TData, TError, TVariables> = {}): UseUpdateManyReturnType<\n  TData,\n  TError,\n  TVariables\n> => {\n  const { resources, select } = useResource();\n  const queryClient = useQueryClient();\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const {\n    mutationMode: mutationModeContext,\n    undoableTimeout: undoableTimeoutContext,\n  } = useMutationMode();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const { notificationDispatch } = useCancelNotification();\n  const publish = usePublish();\n  const handleNotification = useHandleNotification();\n  const invalidateStore = useInvalidate();\n  const { log } = useLog();\n  const getMeta = useMeta();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutationResult = useMutation<\n    UpdateManyResponse<TData>,\n    TError,\n    UpdateManyParams<TData, TError, TVariables>,\n    UpdateContext<TData>\n  >({\n    mutationFn: ({\n      ids = idsFromProps,\n      values = valuesFromProps,\n      resource: resourceName = resourceFromProps,\n      onCancel = onCancelFromProps,\n      mutationMode = mutationModeFromProps,\n      undoableTimeout = undoableTimeoutFromProps,\n      meta = metaFromProps,\n      metaData = metaDataFromProps,\n      dataProviderName = dataProviderNameFromProps,\n    }: UpdateManyParams<TData, TError, TVariables>) => {\n      if (!ids) throw missingIdError;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { resource, identifier } = select(resourceName);\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      const undoableTimeoutPropOrContext =\n        undoableTimeout ?? undoableTimeoutContext;\n\n      const selectedDataProvider = dataProvider(\n        pickDataProvider(identifier, dataProviderName, resources),\n      );\n\n      const mutationFn = () => {\n        if (selectedDataProvider.updateMany) {\n          return selectedDataProvider.updateMany<TData, TVariables>({\n            resource: resource.name,\n            ids,\n            variables: values,\n            meta: combinedMeta,\n            metaData: combinedMeta,\n          });\n        }\n        return handleMultiple(\n          ids.map((id) =>\n            selectedDataProvider.update<TData, TVariables>({\n              resource: resource.name,\n              id,\n              variables: values,\n              meta: combinedMeta,\n              metaData: combinedMeta,\n            }),\n          ),\n        );\n      };\n\n      if (!(mutationModePropOrContext === \"undoable\")) {\n        return mutationFn();\n      }\n\n      const updatePromise = new Promise<UpdateManyResponse<TData>>(\n        (resolve, reject) => {\n          const doMutation = () => {\n            mutationFn()\n              .then((result) => resolve(result))\n              .catch((err) => reject(err));\n          };\n\n          const cancelMutation = () => {\n            reject({ message: \"mutationCancelled\" });\n          };\n\n          if (onCancel) {\n            onCancel(cancelMutation);\n          }\n\n          notificationDispatch({\n            type: ActionTypes.ADD,\n            payload: {\n              id: ids,\n              resource: identifier,\n              cancelMutation: cancelMutation,\n              doMutation: doMutation,\n              seconds: undoableTimeoutPropOrContext,\n              isSilent: !!onCancel,\n            },\n          });\n        },\n      );\n      return updatePromise;\n    },\n    onMutate: async ({\n      resource: resourceName = resourceFromProps,\n      ids = idsFromProps,\n      values = valuesFromProps,\n      mutationMode = mutationModeFromProps,\n      dataProviderName = dataProviderNameFromProps,\n      meta = metaFromProps,\n      metaData = metaDataFromProps,\n      optimisticUpdateMap = optimisticUpdateMapFromProps ?? {\n        list: true,\n        many: true,\n        detail: true,\n      },\n    }) => {\n      if (!ids) throw missingIdError;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { identifier } = select(resourceName);\n      const {\n        gqlMutation: _,\n        gqlQuery: __,\n        ...preferredMeta\n      } = pickNotDeprecated(meta, metaData) ?? {};\n\n      const queryKey = queryKeysReplacement(preferLegacyKeys)(\n        identifier,\n        pickDataProvider(identifier, dataProviderName, resources),\n        preferredMeta,\n      );\n\n      const resourceKeys = keys()\n        .data(pickDataProvider(identifier, dataProviderName, resources))\n        .resource(identifier);\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      await queryClient.cancelQueries(\n        resourceKeys.get(preferLegacyKeys),\n        undefined,\n        {\n          silent: true,\n        },\n      );\n\n      const previousQueries = queryClient.getQueriesData<QueryResponse<TData>>(\n        resourceKeys.get(preferLegacyKeys),\n      );\n\n      if (mutationModePropOrContext !== \"pessimistic\") {\n        if (optimisticUpdateMap.list) {\n          // Set the previous queries to the new ones:\n          queryClient.setQueriesData(\n            resourceKeys\n              .action(\"list\")\n              .params(preferredMeta ?? {})\n              .get(preferLegacyKeys),\n            (previous?: GetListResponse<TData> | null) => {\n              if (typeof optimisticUpdateMap.list === \"function\") {\n                return optimisticUpdateMap.list(previous, values, ids);\n              }\n\n              if (!previous) {\n                return null;\n              }\n\n              const data = previous.data.map((record: TData) => {\n                if (\n                  record.id !== undefined &&\n                  ids\n                    .filter((id) => id !== undefined)\n                    .map(String)\n                    .includes(record.id.toString())\n                ) {\n                  return {\n                    ...record,\n                    ...values,\n                  };\n                }\n\n                return record;\n              });\n\n              return {\n                ...previous,\n                data,\n              };\n            },\n          );\n        }\n\n        if (optimisticUpdateMap.many) {\n          queryClient.setQueriesData(\n            resourceKeys.action(\"many\").get(preferLegacyKeys),\n            (previous?: GetManyResponse<TData> | null) => {\n              if (typeof optimisticUpdateMap.many === \"function\") {\n                return optimisticUpdateMap.many(previous, values, ids);\n              }\n\n              if (!previous) {\n                return null;\n              }\n\n              const data = previous.data.map((record: TData) => {\n                if (\n                  record.id !== undefined &&\n                  ids\n                    .filter((id) => id !== undefined)\n                    .map(String)\n                    .includes(record.id.toString())\n                ) {\n                  return {\n                    ...record,\n                    ...values,\n                  };\n                }\n                return record;\n              });\n              return {\n                ...previous,\n                data,\n              };\n            },\n          );\n        }\n\n        if (optimisticUpdateMap.detail) {\n          for (const id of ids) {\n            queryClient.setQueriesData(\n              resourceKeys\n                .action(\"one\")\n                .id(id)\n                .params(preferredMeta ?? {})\n                .get(preferLegacyKeys),\n              (previous?: GetOneResponse<TData> | null) => {\n                if (typeof optimisticUpdateMap.detail === \"function\") {\n                  return optimisticUpdateMap.detail(previous, values, id);\n                }\n\n                if (!previous) {\n                  return null;\n                }\n\n                const data = {\n                  ...previous.data,\n                  ...values,\n                };\n                return {\n                  ...previous,\n                  data,\n                };\n              },\n            );\n          }\n        }\n      }\n\n      return {\n        previousQueries,\n        queryKey,\n      };\n    },\n    onSettled: (data, error, variables, context) => {\n      const {\n        ids = idsFromProps,\n        resource: resourceName = resourceFromProps,\n        dataProviderName = dataProviderNameFromProps,\n        invalidates = invalidatesFromProps,\n      } = variables;\n      if (!ids) throw missingIdError;\n      if (!resourceName) throw missingResourceError;\n\n      const { identifier } = select(resourceName);\n\n      // invalidate the cache for the list and many queries:\n      invalidateStore({\n        resource: identifier,\n        invalidates: invalidates ?? [\"list\", \"many\"],\n        dataProviderName: pickDataProvider(\n          identifier,\n          dataProviderName,\n          resources,\n        ),\n      });\n\n      ids.forEach((id) =>\n        invalidateStore({\n          resource: identifier,\n          invalidates: invalidates ?? [\"detail\"],\n          dataProviderName: pickDataProvider(\n            identifier,\n            dataProviderName,\n            resources,\n          ),\n          id,\n        }),\n      );\n\n      notificationDispatch({\n        type: ActionTypes.REMOVE,\n        payload: { id: ids, resource: identifier },\n      });\n\n      mutationOptions?.onSettled?.(data, error, variables, context);\n    },\n    onSuccess: (data, variables, context) => {\n      const {\n        ids = idsFromProps,\n        resource: resourceName = resourceFromProps,\n        values = valuesFromProps,\n        meta = metaFromProps,\n        metaData = metaDataFromProps,\n        dataProviderName: dataProviderNameFromProp = dataProviderNameFromProps,\n        successNotification = successNotificationFromProps,\n      } = variables;\n      if (!ids) throw missingIdError;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { resource, identifier } = select(resourceName);\n      const resourceSingular = textTransformers.singular(identifier);\n\n      const dataProviderName = pickDataProvider(\n        identifier,\n        dataProviderNameFromProp,\n        resources,\n      );\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(data, { ids, values }, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${ids}-${identifier}-notification`,\n        description: translate(\"notifications.success\", \"Successful\"),\n        message: translate(\n          \"notifications.editSuccess\",\n          {\n            resource: translate(`${identifier}.${identifier}`, identifier),\n          },\n          `Successfully updated ${resourceSingular}`,\n        ),\n        type: \"success\",\n      });\n\n      publish?.({\n        channel: `resources/${resource.name}`,\n        type: \"updated\",\n        payload: {\n          ids: ids.map(String),\n        },\n        date: new Date(),\n        meta: {\n          ...combinedMeta,\n          dataProviderName,\n        },\n      });\n\n      const previousData: any[] = [];\n      if (context) {\n        ids.forEach((id) => {\n          const queryData = queryClient.getQueryData<UpdateManyResponse<TData>>(\n            context.queryKey.detail(id),\n          );\n\n          previousData.push(\n            Object.keys(values || {}).reduce<any>((acc, item: any) => {\n              acc[item] = queryData?.data?.[item];\n              return acc;\n            }, {}),\n          );\n        });\n      }\n\n      const {\n        fields: _fields,\n        operation: _operation,\n        variables: _variables,\n        ...rest\n      } = combinedMeta || {};\n      log?.mutate({\n        action: \"updateMany\",\n        resource: resource.name,\n        data: values,\n        previousData,\n        meta: {\n          ids,\n          dataProviderName,\n          ...rest,\n        },\n      });\n\n      mutationOptions?.onSuccess?.(data, variables, context);\n    },\n    onError: (err: TError, variables, context) => {\n      const {\n        ids = idsFromProps,\n        resource: resourceName = resourceFromProps,\n        errorNotification = errorNotificationFromProps,\n        values = valuesFromProps,\n      } = variables;\n      if (!ids) throw missingIdError;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { identifier } = select(resourceName);\n\n      // set back the queries to the context:\n      if (context) {\n        for (const query of context.previousQueries) {\n          queryClient.setQueryData(query[0], query[1]);\n        }\n      }\n\n      if (err.message !== \"mutationCancelled\") {\n        checkError?.(err);\n\n        const resourceSingular = textTransformers.singular(identifier);\n\n        const notificationConfig =\n          typeof errorNotification === \"function\"\n            ? errorNotification(err, { ids, values }, identifier)\n            : errorNotification;\n\n        handleNotification(notificationConfig, {\n          key: `${ids}-${identifier}-updateMany-error-notification`,\n          message: translate(\n            \"notifications.editError\",\n            {\n              resource: resourceSingular,\n              statusCode: err.statusCode,\n            },\n            `Error when updating ${resourceSingular} (status code: ${err.statusCode})`,\n          ),\n          description: err.message,\n          type: \"error\",\n        });\n      }\n\n      mutationOptions?.onError?.(err, variables, context);\n    },\n    mutationKey: keys().data().mutation(\"updateMany\").get(preferLegacyKeys),\n    ...mutationOptions,\n    meta: {\n      ...mutationOptions?.meta,\n      ...getXRay(\"useUpdateMany\", preferLegacyKeys),\n    },\n  });\n  const { mutate, mutateAsync, ...mutation } = mutationResult;\n\n  const { elapsedTime } = useLoadingOvertime({\n    ...overtimeOptions,\n    isLoading: mutation.isLoading,\n  });\n\n  // this function is used to make the `variables` parameter optional\n  const handleMutation = (\n    variables?: UpdateManyParams<TData, TError, TVariables>,\n    options?: MutateOptions<\n      UpdateManyResponse<TData>,\n      TError,\n      UpdateManyParams<TData, TError, TVariables>,\n      UpdateContext<TData>\n    >,\n  ) => {\n    return mutate(variables || {}, options);\n  };\n\n  // this function is used to make the `variables` parameter optional\n  const handleMutateAsync = (\n    variables?: UpdateManyParams<TData, TError, TVariables>,\n    options?: MutateOptions<\n      UpdateManyResponse<TData>,\n      TError,\n      UpdateManyParams<TData, TError, TVariables>,\n      UpdateContext<TData>\n    >,\n  ) => {\n    return mutateAsync(variables || {}, options);\n  };\n\n  return {\n    ...mutation,\n    mutate: handleMutation,\n    mutateAsync: handleMutateAsync,\n    overtime: { elapsedTime },\n  };\n};\n\nconst missingResourceError = new Error(\n  \"[useUpdateMany]: `resource` is not defined or not matched but is required\",\n);\n\nconst missingIdError = new Error(\n  \"[useUpdateMany]: `id` is not defined but is required in edit and clone actions\",\n);\n\nconst missingValuesError = new Error(\n  \"[useUpdateMany]: `values` is not provided but is required\",\n);\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type UseMutationResult,\n  useMutation,\n  useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport {\n  handleMultiple,\n  pickDataProvider,\n  pickNotDeprecated,\n  queryKeysReplacement,\n  useActiveAuthProvider,\n} from \"@definitions\";\nimport {\n  useCancelNotification,\n  useDataProvider,\n  useHandleNotification,\n  useInvalidate,\n  useKeys,\n  useLog,\n  useMeta,\n  useMutationMode,\n  useOnError,\n  usePublish,\n  useRefineContext,\n  useResource,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseKey,\n  BaseRecord,\n  DeleteManyResponse,\n  GetListResponse,\n  HttpError,\n  IQueryKeys,\n  MetaQuery,\n  MutationMode,\n  PrevContext as DeleteContext,\n  PreviousQuery,\n} from \"../../contexts/data/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport { ActionTypes } from \"../../contexts/undoableQueue/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nexport type DeleteManyParams<TData, TError, TVariables> = {\n  /**\n   * ids for mutation function\n   */\n  ids: BaseKey[];\n  /**\n   * Resource name for API data interactions\n   */\n  resource: string;\n  /**\n   * [Determines when mutations are executed](/docs/advanced-tutorials/mutation-mode/)\n   */\n  mutationMode?: MutationMode;\n  /**\n   * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n   */\n  undoableTimeout?: number;\n  /**\n   * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n   */\n  onCancel?: (cancelMutation: () => void) => void;\n  /**\n   * Metadata query for dataProvider\n   */\n  meta?: MetaQuery;\n  /**\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default \"default\"\n   */\n  dataProviderName?: string;\n  /**\n   *  You can use it to manage the invalidations that will occur at the end of the mutation.\n   */\n  invalidates?: Array<keyof IQueryKeys>;\n  /**\n   * Values for mutation function\n   */\n  values?: TVariables;\n} & SuccessErrorNotification<DeleteManyResponse<TData>, TError, BaseKey[]>;\n\nexport type UseDeleteManyReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  DeleteManyResponse<TData>,\n  TError,\n  DeleteManyParams<TData, TError, TVariables>,\n  unknown\n> &\n  UseLoadingOvertimeReturnType;\n\nexport type UseDeleteManyProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      DeleteManyResponse<TData>,\n      TError,\n      DeleteManyParams<TData, TError, TVariables>,\n      DeleteContext<TData>\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n  >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useDeleteMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple delete mutations.\n *\n * It uses `deleteMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useDeleteMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n */\nexport const useDeleteMany = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  mutationOptions,\n  overtimeOptions,\n}: UseDeleteManyProps<TData, TError, TVariables> = {}): UseDeleteManyReturnType<\n  TData,\n  TError,\n  TVariables\n> => {\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const {\n    mutationMode: mutationModeContext,\n    undoableTimeout: undoableTimeoutContext,\n  } = useMutationMode();\n  const dataProvider = useDataProvider();\n  const { notificationDispatch } = useCancelNotification();\n  const translate = useTranslate();\n  const publish = usePublish();\n  const handleNotification = useHandleNotification();\n  const invalidateStore = useInvalidate();\n  const { log } = useLog();\n  const { resources, select } = useResource();\n  const queryClient = useQueryClient();\n  const getMeta = useMeta();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    DeleteManyResponse<TData>,\n    TError,\n    DeleteManyParams<TData, TError, TVariables>,\n    DeleteContext<TData>\n  >({\n    mutationFn: ({\n      resource: resourceName,\n      ids,\n      mutationMode,\n      undoableTimeout,\n      onCancel,\n      meta,\n      metaData,\n      dataProviderName,\n      values,\n    }: DeleteManyParams<TData, TError, TVariables>) => {\n      const { resource, identifier } = select(resourceName);\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      const undoableTimeoutPropOrContext =\n        undoableTimeout ?? undoableTimeoutContext;\n\n      const selectedDataProvider = dataProvider(\n        pickDataProvider(identifier, dataProviderName, resources),\n      );\n\n      const mutationFn = () => {\n        if (selectedDataProvider.deleteMany) {\n          return selectedDataProvider.deleteMany<TData, TVariables>({\n            resource: resource.name,\n            ids,\n            meta: combinedMeta,\n            metaData: combinedMeta,\n            variables: values,\n          });\n        }\n        return handleMultiple(\n          ids.map((id) =>\n            selectedDataProvider.deleteOne<TData, TVariables>({\n              resource: resource.name,\n              id,\n              meta: combinedMeta,\n              metaData: combinedMeta,\n              variables: values,\n            }),\n          ),\n        );\n      };\n\n      if (!(mutationModePropOrContext === \"undoable\")) {\n        return mutationFn();\n      }\n\n      const updatePromise = new Promise<DeleteManyResponse<TData>>(\n        (resolve, reject) => {\n          const doMutation = () => {\n            mutationFn()\n              .then((result) => resolve(result))\n              .catch((err) => reject(err));\n          };\n\n          const cancelMutation = () => {\n            reject({ message: \"mutationCancelled\" });\n          };\n\n          if (onCancel) {\n            onCancel(cancelMutation);\n          }\n\n          notificationDispatch({\n            type: ActionTypes.ADD,\n            payload: {\n              id: ids,\n              resource: identifier,\n              cancelMutation: cancelMutation,\n              doMutation: doMutation,\n              seconds: undoableTimeoutPropOrContext,\n              isSilent: !!onCancel,\n            },\n          });\n        },\n      );\n      return updatePromise;\n    },\n    onMutate: async ({\n      ids,\n      resource: resourceName,\n      mutationMode,\n      dataProviderName,\n      meta,\n      metaData,\n    }) => {\n      const { identifier } = select(resourceName);\n\n      const {\n        gqlMutation: _,\n        gqlQuery: __,\n        ...preferredMeta\n      } = pickNotDeprecated(meta, metaData) ?? {};\n\n      const queryKey = queryKeysReplacement(preferLegacyKeys)(\n        identifier,\n        pickDataProvider(identifier, dataProviderName, resources),\n        preferredMeta,\n      );\n\n      const resourceKeys = keys()\n        .data(pickDataProvider(identifier, dataProviderName, resources))\n        .resource(identifier);\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      await queryClient.cancelQueries(\n        resourceKeys.get(preferLegacyKeys),\n        undefined,\n        {\n          silent: true,\n        },\n      );\n\n      const previousQueries: PreviousQuery<TData>[] =\n        queryClient.getQueriesData(resourceKeys.get(preferLegacyKeys));\n\n      if (mutationModePropOrContext !== \"pessimistic\") {\n        // Set the previous queries to the new ones:\n        queryClient.setQueriesData(\n          resourceKeys\n            .action(\"list\")\n            .params(preferredMeta ?? {})\n            .get(preferLegacyKeys),\n          (previous?: GetListResponse<TData> | null) => {\n            if (!previous) {\n              return null;\n            }\n\n            const data = previous.data.filter(\n              (item) =>\n                item.id && !ids.map(String).includes(item.id.toString()),\n            );\n\n            return {\n              data,\n              total: previous.total - 1,\n            };\n          },\n        );\n\n        queryClient.setQueriesData(\n          resourceKeys.action(\"many\").get(preferLegacyKeys),\n          (previous?: GetListResponse<TData> | null) => {\n            if (!previous) {\n              return null;\n            }\n\n            const data = previous.data.filter((record: TData) => {\n              if (record.id) {\n                return !ids.map(String).includes(record.id.toString());\n              }\n              return false;\n            });\n\n            return {\n              ...previous,\n              data,\n            };\n          },\n        );\n\n        for (const id of ids) {\n          queryClient.setQueriesData(\n            resourceKeys\n              .action(\"one\")\n              .id(id)\n              .params(preferredMeta)\n              .get(preferLegacyKeys),\n            (previous?: any | null) => {\n              if (!previous || previous.data.id === id) {\n                return null;\n              }\n              return {\n                ...previous,\n              };\n            },\n          );\n        }\n      }\n\n      return {\n        previousQueries,\n        queryKey,\n      };\n    },\n    // Always refetch after error or success:\n    onSettled: (\n      _data,\n      _error,\n      {\n        resource: resourceName,\n        ids,\n        dataProviderName,\n        invalidates = [\"list\", \"many\"],\n      },\n    ) => {\n      const { identifier } = select(resourceName);\n\n      // invalidate the cache for the list and many queries:\n      invalidateStore({\n        resource: identifier,\n        dataProviderName: pickDataProvider(\n          identifier,\n          dataProviderName,\n          resources,\n        ),\n        invalidates,\n      });\n\n      notificationDispatch({\n        type: ActionTypes.REMOVE,\n        payload: { id: ids, resource: identifier },\n      });\n    },\n    onSuccess: (\n      _data,\n      {\n        ids,\n        resource: resourceName,\n        meta,\n        metaData,\n        dataProviderName: dataProviderNameFromProp,\n        successNotification,\n      },\n      context,\n    ) => {\n      const { resource, identifier } = select(resourceName);\n\n      const dataProviderName = pickDataProvider(\n        identifier,\n        dataProviderNameFromProp,\n        resources,\n      );\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      // Remove the queries from the cache:\n      ids.forEach((id) =>\n        queryClient.removeQueries(context?.queryKey.detail(id)),\n      );\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(_data, ids, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${ids}-${identifier}-notification`,\n        description: translate(\"notifications.success\", \"Success\"),\n        message: translate(\n          \"notifications.deleteSuccess\",\n          {\n            resource: translate(`${identifier}.${identifier}`, identifier),\n          },\n          `Successfully deleted ${identifier}`,\n        ),\n        type: \"success\",\n      });\n\n      publish?.({\n        channel: `resources/${resource.name}`,\n        type: \"deleted\",\n        payload: { ids },\n        date: new Date(),\n        meta: {\n          ...combinedMeta,\n          dataProviderName,\n        },\n      });\n\n      const {\n        fields: _fields,\n        operation: _operation,\n        variables: _variables,\n        ...rest\n      } = combinedMeta || {};\n      log?.mutate({\n        action: \"deleteMany\",\n        resource: resource.name,\n        meta: {\n          ids,\n          dataProviderName,\n          ...rest,\n        },\n      });\n\n      // Remove the queries from the cache:\n      ids.forEach((id) =>\n        queryClient.removeQueries(context?.queryKey.detail(id)),\n      );\n    },\n    onError: (\n      err,\n      { ids, resource: resourceName, errorNotification },\n      context,\n    ) => {\n      const { identifier } = select(resourceName);\n\n      // set back the queries to the context:\n      if (context) {\n        for (const query of context.previousQueries) {\n          queryClient.setQueryData(query[0], query[1]);\n        }\n      }\n\n      if (err.message !== \"mutationCancelled\") {\n        checkError(err);\n        const resourceSingular = textTransformers.singular(identifier);\n\n        const notificationConfig =\n          typeof errorNotification === \"function\"\n            ? errorNotification(err, ids, identifier)\n            : errorNotification;\n\n        handleNotification(notificationConfig, {\n          key: `${ids}-${identifier}-notification`,\n          message: translate(\n            \"notifications.deleteError\",\n            {\n              resource: resourceSingular,\n              statusCode: err.statusCode,\n            },\n            `Error (status code: ${err.statusCode})`,\n          ),\n          description: err.message,\n          type: \"error\",\n        });\n      }\n    },\n    mutationKey: keys().data().mutation(\"deleteMany\").get(preferLegacyKeys),\n    ...mutationOptions,\n    meta: {\n      ...mutationOptions?.meta,\n      ...getXRay(\"useDeleteMany\", preferLegacyKeys),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    ...overtimeOptions,\n    isLoading: mutation.isLoading,\n  });\n\n  return { ...mutation, overtime: { elapsedTime } };\n};\n", "import { pickNotDeprecated } from \"@definitions/index\";\nimport { useDataProvider, useResource } from \"@hooks\";\n\nexport const useApiUrl = (dataProviderName?: string): string => {\n  const dataProvider = useDataProvider();\n  const { resource } = useResource();\n\n  const { getApiUrl } = dataProvider(\n    dataProviderName ??\n      pickNotDeprecated(resource?.meta, resource?.options)?.dataProviderName,\n  );\n\n  return getApiUrl();\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type QueryObserverResult,\n  type UseQueryOptions,\n  useQuery,\n} from \"@tanstack/react-query\";\n\nimport {\n  pickNotDeprecated,\n  useActiveAuthProvider,\n  prepareQueryContext,\n} from \"@definitions/helpers\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useKeys,\n  useMeta,\n  useOnError,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseRecord,\n  CrudFilter,\n  CrudSort,\n  CustomResponse,\n  HttpError,\n  MetaQuery,\n  Prettify,\n} from \"../../contexts/data/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\ninterface UseCustomConfig<TQuery, TPayload> {\n  /**\n   * @deprecated `sort` is deprecated, use `sorters` instead.\n   */\n  sort?: CrudSort[];\n  sorters?: CrudSort[];\n  filters?: CrudFilter[];\n  query?: TQuery;\n  payload?: TPayload;\n  headers?: {};\n}\n\nexport type UseCustomProps<TQueryFnData, TError, TQuery, TPayload, TData> = {\n  /**\n   * request's URL\n   */\n  url: string;\n  /**\n   * request's method (`GET`, `POST`, etc.)\n   */\n  method: \"get\" | \"delete\" | \"head\" | \"options\" | \"post\" | \"put\" | \"patch\";\n  /**\n   * The config of your request. You can send headers, payload, query, filters and sorters using this field\n   */\n  config?: UseCustomConfig<TQuery, TPayload>;\n  /**\n   * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\"\n   */\n  queryOptions?: UseQueryOptions<\n    CustomResponse<TQueryFnData>,\n    TError,\n    CustomResponse<TData>\n  >;\n  /**\n   * meta data for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   * meta data for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   */\n  dataProviderName?: string;\n} & SuccessErrorNotification<\n  CustomResponse<TData>,\n  TError,\n  Prettify<UseCustomConfig<TQuery, TPayload> & MetaQuery>\n> &\n  UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCustom` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for custom requests.\n *\n * It uses the `custom` method from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCustom} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TQuery - Values for query params\n * @typeParam TPayload - Values for params\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useCustom = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TQuery = unknown,\n  TPayload = unknown,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  url,\n  method,\n  config,\n  queryOptions,\n  successNotification,\n  errorNotification,\n  meta,\n  metaData,\n  dataProviderName,\n  overtimeOptions,\n}: UseCustomProps<\n  TQueryFnData,\n  TError,\n  TQuery,\n  TPayload,\n  TData\n>): QueryObserverResult<CustomResponse<TData>, TError> &\n  UseLoadingOvertimeReturnType => {\n  const dataProvider = useDataProvider();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const translate = useTranslate();\n  const handleNotification = useHandleNotification();\n  const getMeta = useMeta();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const preferredMeta = pickNotDeprecated(meta, metaData);\n\n  const { custom } = dataProvider(dataProviderName);\n\n  const combinedMeta = getMeta({ meta: preferredMeta });\n\n  if (custom) {\n    const queryResponse = useQuery<\n      CustomResponse<TQueryFnData>,\n      TError,\n      CustomResponse<TData>\n    >({\n      queryKey: keys()\n        .data(dataProviderName)\n        .mutation(\"custom\")\n        .params({\n          method,\n          url,\n          ...config,\n          ...(preferredMeta || {}),\n        })\n        .get(preferLegacyKeys),\n      queryFn: (context) =>\n        custom<TQueryFnData>({\n          url,\n          method,\n          ...config,\n          meta: {\n            ...combinedMeta,\n            queryContext: prepareQueryContext(context),\n          },\n          metaData: {\n            ...combinedMeta,\n            queryContext: prepareQueryContext(context),\n          },\n        }),\n      ...queryOptions,\n      onSuccess: (data) => {\n        queryOptions?.onSuccess?.(data);\n\n        const notificationConfig =\n          typeof successNotification === \"function\"\n            ? successNotification(data, {\n                ...config,\n                ...combinedMeta,\n              })\n            : successNotification;\n\n        handleNotification(notificationConfig);\n      },\n      onError: (err: TError) => {\n        checkError(err);\n        queryOptions?.onError?.(err);\n\n        const notificationConfig =\n          typeof errorNotification === \"function\"\n            ? errorNotification(err, {\n                ...config,\n                ...combinedMeta,\n              })\n            : errorNotification;\n\n        handleNotification(notificationConfig, {\n          key: `${method}-notification`,\n          message: translate(\n            \"notifications.error\",\n            { statusCode: err.statusCode },\n            `Error (status code: ${err.statusCode})`,\n          ),\n          description: err.message,\n          type: \"error\",\n        });\n      },\n      meta: {\n        ...queryOptions?.meta,\n        ...getXRay(\"useCustom\", preferLegacyKeys),\n      },\n    });\n    const { elapsedTime } = useLoadingOvertime({\n      ...overtimeOptions,\n      isLoading: queryResponse.isFetching,\n    });\n\n    return { ...queryResponse, overtime: { elapsedTime } };\n  }\n  throw Error(\"Not implemented custom on data provider.\");\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type UseMutationResult,\n  useMutation,\n} from \"@tanstack/react-query\";\n\nimport { pickNotDeprecated, useActiveAuthProvider } from \"@definitions/helpers\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useKeys,\n  useMeta,\n  useOnError,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseRecord,\n  CreateResponse,\n  HttpError,\n  MetaQuery,\n  Prettify,\n} from \"../../contexts/data/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\ninterface UseCustomMutationConfig {\n  headers?: {};\n}\n\ntype useCustomMutationParams<TData, TError, TVariables> = {\n  url: string;\n  method: \"post\" | \"put\" | \"patch\" | \"delete\";\n  values: TVariables;\n  /**\n   * Meta data for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   * Meta data for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  dataProviderName?: string;\n  config?: UseCustomMutationConfig;\n} & SuccessErrorNotification<\n  CreateResponse<TData>,\n  TError,\n  Prettify<UseCustomMutationConfig & MetaQuery>\n>;\n\nexport type UseCustomMutationReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  CreateResponse<TData>,\n  TError,\n  useCustomMutationParams<TData, TError, TVariables>,\n  unknown\n>;\n\nexport type UseCustomMutationProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      CreateResponse<TData>,\n      TError,\n      useCustomMutationParams<TData, TError, TVariables>,\n      unknown\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCustomMutation` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for create mutations.\n *\n * It uses the `custom` method from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCustomMutation} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\n\nexport const useCustomMutation = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  mutationOptions,\n  overtimeOptions,\n}: UseCustomMutationProps<\n  TData,\n  TError,\n  TVariables\n> = {}): UseCustomMutationReturnType<TData, TError, TVariables> &\n  UseLoadingOvertimeReturnType => {\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const handleNotification = useHandleNotification();\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const getMeta = useMeta();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    CreateResponse<TData>,\n    TError,\n    useCustomMutationParams<TData, TError, TVariables>,\n    unknown\n  >(\n    ({\n      url,\n      method,\n      values,\n      meta,\n      metaData,\n      dataProviderName,\n      config,\n    }: useCustomMutationParams<TData, TError, TVariables>) => {\n      const combinedMeta = getMeta({\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const { custom } = dataProvider(dataProviderName);\n\n      if (custom) {\n        return custom<TData>({\n          url,\n          method,\n          payload: values,\n          meta: combinedMeta,\n          metaData: combinedMeta,\n          headers: { ...config?.headers },\n        });\n      }\n\n      throw Error(\"Not implemented custom on data provider.\");\n    },\n    {\n      onSuccess: (\n        data,\n        {\n          successNotification: successNotificationFromProp,\n          config,\n          meta,\n          metaData,\n        },\n      ) => {\n        const notificationConfig =\n          typeof successNotificationFromProp === \"function\"\n            ? successNotificationFromProp(data, {\n                ...config,\n                ...(pickNotDeprecated(meta, metaData) || {}),\n              })\n            : successNotificationFromProp;\n\n        handleNotification(notificationConfig);\n      },\n      onError: (\n        err: TError,\n        {\n          errorNotification: errorNotificationFromProp,\n          method,\n          config,\n          meta,\n          metaData,\n        },\n      ) => {\n        checkError(err);\n\n        const notificationConfig =\n          typeof errorNotificationFromProp === \"function\"\n            ? errorNotificationFromProp(err, {\n                ...config,\n                ...(pickNotDeprecated(meta, metaData) || {}),\n              })\n            : errorNotificationFromProp;\n\n        handleNotification(notificationConfig, {\n          key: `${method}-notification`,\n          message: translate(\n            \"notifications.error\",\n            { statusCode: err.statusCode },\n            `Error (status code: ${err.statusCode})`,\n          ),\n          description: err.message,\n          type: \"error\",\n        });\n      },\n      mutationKey: keys()\n        .data()\n        .mutation(\"customMutation\")\n        .get(preferLegacyKeys),\n      ...mutationOptions,\n      meta: {\n        ...mutationOptions?.meta,\n        ...getXRay(\"useCustomMutation\", preferLegacyKeys),\n      },\n    },\n  );\n\n  const { elapsedTime } = useLoadingOvertime({\n    ...overtimeOptions,\n    isLoading: mutation.isLoading,\n  });\n\n  return { ...mutation, overtime: { elapsedTime } };\n};\n", "import { useCallback, useContext } from \"react\";\n\nimport { DataContext } from \"@contexts/data\";\nimport { type DataProvider, IDataContext } from \"../../contexts/data/types\";\nexport const useDataProvider = (): ((\n  /**\n   * The name of the `data provider` you want to access\n   */\n  dataProviderName?: string,\n) => DataProvider) => {\n  const context = useContext(DataContext);\n\n  const handleDataProvider = useCallback(\n    (dataProviderName?: string) => {\n      if (dataProviderName) {\n        const dataProvider = context?.[dataProviderName];\n        if (!dataProvider) {\n          throw new Error(`\"${dataProviderName}\" Data provider not found`);\n        }\n\n        if (dataProvider && !context?.default) {\n          throw new Error(\n            \"If you have multiple data providers, you must provide default data provider property\",\n          );\n        }\n\n        return context[dataProviderName];\n      }\n\n      if (context.default) {\n        return context.default;\n      }\n\n      throw new Error(\n        `There is no \"default\" data provider. Please pass dataProviderName.`,\n      );\n    },\n    [context],\n  );\n\n  return handleDataProvider;\n};\n", "import React, { type PropsWithChildren } from \"react\";\n\nimport type { DataProvider, DataProviders, IDataContext } from \"./types\";\n\nexport const defaultDataProvider: DataProviders = {\n  default: {} as DataProvider,\n};\n\nexport const DataContext =\n  React.createContext<IDataContext>(defaultDataProvider);\n\ntype Props = PropsWithChildren<{\n  dataProvider?: DataProvider | DataProviders;\n}>;\n\nexport const DataContextProvider: React.FC<Props> = ({\n  children,\n  dataProvider,\n}) => {\n  let providerValue = defaultDataProvider;\n\n  if (dataProvider) {\n    if (\n      !(\"default\" in dataProvider) &&\n      (\"getList\" in dataProvider || \"getOne\" in dataProvider)\n    ) {\n      providerValue = {\n        default: dataProvider,\n      };\n    } else {\n      providerValue = dataProvider;\n    }\n  }\n\n  return (\n    <DataContext.Provider value={providerValue}>\n      {children}\n    </DataContext.Provider>\n  );\n};\n", "import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type InfiniteData,\n  type InfiniteQueryObserverResult,\n  type UseInfiniteQueryOptions,\n  useInfiniteQuery,\n} from \"@tanstack/react-query\";\n\nimport {\n  getNextPageParam,\n  getPreviousPageParam,\n  handlePaginationParams,\n  pickDataProvider,\n  pickNotDeprecated,\n  prepareQueryContext,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useKeys,\n  useMeta,\n  useOnError,\n  useResource,\n  useResourceSubscription,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseRecord,\n  CrudFilter,\n  CrudSort,\n  GetListResponse,\n  HttpError,\n  MetaQuery,\n  Pagination,\n  Prettify,\n} from \"../../contexts/data/types\";\nimport type { LiveModeProps } from \"../../contexts/live/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nexport interface UseInfiniteListConfig {\n  pagination?: Pagination;\n  hasPagination?: boolean;\n  sort?: CrudSort[];\n  filters?: CrudFilter[];\n}\n\ntype BaseInfiniteListProps = {\n  /**\n   *  Metadata query for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   *  Metadata query for `dataProvider`\n   *  @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * Configuration for pagination, sorting and filtering\n   * @type [`useInfiniteListConfig`](/docs/api-reference/core/hooks/data/useInfiniteList/#config-parameters)\n   * @deprecated `config` property is deprecated. Use `pagination`, `hasPagination`, `sorters` and `filters` instead.\n   */\n  config?: UseInfiniteListConfig;\n  /**\n   * Pagination properties\n   */\n  pagination?: Pagination;\n  /**\n   * Whether to use server-side pagination or not\n   * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n   */\n  hasPagination?: boolean;\n  /**\n   * Sorter parameters\n   */\n  sorters?: CrudSort[];\n  /**\n   * Filter parameters\n   */\n  filters?: CrudFilter[];\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use\n   */\n  dataProviderName?: string;\n};\n\nexport type UseInfiniteListProps<TQueryFnData, TError, TData> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource: string;\n  /**\n   * Tanstack Query's [useInfiniteQuery](https://tanstack.com/query/v4/docs/react/reference/useInfiniteQuery) options\n   */\n  queryOptions?: UseInfiniteQueryOptions<\n    GetListResponse<TQueryFnData>,\n    TError,\n    GetListResponse<TData>\n  >;\n} & BaseInfiniteListProps &\n  SuccessErrorNotification<\n    InfiniteData<GetListResponse<TData>>,\n    TError,\n    Prettify<BaseInfiniteListProps>\n  > &\n  LiveModeProps &\n  UseLoadingOvertimeOptionsProps;\n\n/**\n * `useInfiniteList` is a modified version of `react-query`'s {@link https://tanstack.com/query/latest/docs/react/guides/infinite-queries `useInfiniteQuery`} used for retrieving items from a `resource` with pagination, sort, and filter configurations.\n *\n * It uses the `getList` method as the query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useInfiniteList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useInfiniteList = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  resource: resourceFromProp,\n  config,\n  filters,\n  hasPagination,\n  pagination,\n  sorters,\n  queryOptions,\n  successNotification,\n  errorNotification,\n  meta,\n  metaData,\n  liveMode,\n  onLiveEvent,\n  liveParams,\n  dataProviderName,\n  overtimeOptions,\n}: UseInfiniteListProps<\n  TQueryFnData,\n  TError,\n  TData\n>): InfiniteQueryObserverResult<GetListResponse<TData>, TError> &\n  UseLoadingOvertimeReturnType => {\n  const { resources, resource, identifier } = useResource(resourceFromProp);\n\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const handleNotification = useHandleNotification();\n  const getMeta = useMeta();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const pickedDataProvider = pickDataProvider(\n    identifier,\n    dataProviderName,\n    resources,\n  );\n  const preferredMeta = pickNotDeprecated(meta, metaData);\n  const prefferedFilters = pickNotDeprecated(filters, config?.filters);\n  const prefferedSorters = pickNotDeprecated(sorters, config?.sort);\n  const prefferedHasPagination = pickNotDeprecated(\n    hasPagination,\n    config?.hasPagination,\n  );\n  const prefferedPagination = handlePaginationParams({\n    pagination,\n    configPagination: config?.pagination,\n    hasPagination: prefferedHasPagination,\n  });\n  const isServerPagination = prefferedPagination.mode === \"server\";\n  const notificationValues = {\n    meta: preferredMeta,\n    metaData: preferredMeta,\n    filters: prefferedFilters,\n    hasPagination: isServerPagination,\n    pagination: prefferedPagination,\n    sorters: prefferedSorters,\n    config: {\n      ...config,\n      sort: prefferedSorters,\n    },\n  };\n\n  const isEnabled =\n    queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n  const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n  const { getList } = dataProvider(pickedDataProvider);\n\n  useResourceSubscription({\n    resource: identifier,\n    types: [\"*\"],\n    params: {\n      meta: combinedMeta,\n      metaData: combinedMeta,\n      pagination: prefferedPagination,\n      hasPagination: isServerPagination,\n      sort: prefferedSorters,\n      sorters: prefferedSorters,\n      filters: prefferedFilters,\n      subscriptionType: \"useList\",\n      ...liveParams,\n    },\n    channel: `resources/${resource.name}`,\n    enabled: isEnabled,\n    liveMode,\n    onLiveEvent,\n    dataProviderName: pickedDataProvider,\n    meta: {\n      ...combinedMeta,\n      dataProviderName,\n    },\n  });\n\n  const queryResponse = useInfiniteQuery<\n    GetListResponse<TQueryFnData>,\n    TError,\n    GetListResponse<TData>\n  >({\n    queryKey: keys()\n      .data(pickedDataProvider)\n      .resource(identifier)\n      .action(\"infinite\")\n      .params({\n        ...(preferredMeta || {}),\n        filters: prefferedFilters,\n        hasPagination: isServerPagination,\n        ...(isServerPagination && {\n          pagination: prefferedPagination,\n        }),\n        ...(sorters && {\n          sorters,\n        }),\n        ...(config?.sort && {\n          sort: config?.sort,\n        }),\n      })\n      .get(preferLegacyKeys),\n    queryFn: (context) => {\n      const paginationProperties = {\n        ...prefferedPagination,\n        current: context.pageParam,\n      };\n\n      const meta = {\n        ...combinedMeta,\n        queryContext: prepareQueryContext(context),\n      };\n\n      return getList<TQueryFnData>({\n        resource: resource.name,\n        pagination: paginationProperties,\n        hasPagination: isServerPagination,\n        filters: prefferedFilters,\n        sort: prefferedSorters,\n        sorters: prefferedSorters,\n        meta,\n        metaData: meta,\n      }).then(({ data, total, ...rest }) => {\n        return {\n          data,\n          total,\n          pagination: paginationProperties,\n          ...rest,\n        };\n      });\n    },\n    getNextPageParam: (lastPage) => getNextPageParam(lastPage),\n    getPreviousPageParam: (lastPage) => getPreviousPageParam(lastPage),\n    ...queryOptions,\n    onSuccess: (data) => {\n      queryOptions?.onSuccess?.(data);\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(data, notificationValues, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig);\n    },\n    onError: (err: TError) => {\n      checkError(err);\n      queryOptions?.onError?.(err);\n\n      const notificationConfig =\n        typeof errorNotification === \"function\"\n          ? errorNotification(err, notificationValues, identifier)\n          : errorNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${identifier}-useInfiniteList-notification`,\n        message: translate(\n          \"notifications.error\",\n          { statusCode: err.statusCode },\n          `Error (status code: ${err.statusCode})`,\n        ),\n        description: err.message,\n        type: \"error\",\n      });\n    },\n    meta: {\n      ...queryOptions?.meta,\n      ...getXRay(\"useInfiniteList\", preferLegacyKeys, resource?.name),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    ...overtimeOptions,\n    isLoading: queryResponse.isFetching,\n  });\n\n  return { ...queryResponse, overtime: { elapsedTime } };\n};\n", "import { useContext, useEffect } from \"react\";\n\nimport { LiveContext } from \"@contexts/live\";\nimport { RefineContext } from \"@contexts/refine\";\nimport { useInvalidate } from \"@hooks/invalidate\";\nimport { useResource } from \"@hooks/resource\";\n\nimport type {\n  BaseKey,\n  CrudFilter,\n  CrudSort,\n  MetaQuery,\n  Pagination,\n} from \"../../../contexts/data/types\";\nimport type { LiveEvent, LiveModeProps } from \"../../../contexts/live/types\";\nimport type { IRefineContext } from \"../../../contexts/refine/types\";\n\nexport type UseResourceSubscriptionProps = {\n  channel: string;\n  params?: {\n    ids?: BaseKey[];\n    id?: BaseKey;\n    /**\n     * @deprecated `params.meta` is depcerated. Use `meta` directly from the root level instead.\n     */\n    meta?: MetaQuery;\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    pagination?: Pagination;\n    /**\n     * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * @deprecated `sort` is deprecated. Use `sorters` instead.\n     */\n    sort?: CrudSort[];\n    sorters?: CrudSort[];\n    filters?: CrudFilter[];\n    subscriptionType: \"useList\" | \"useOne\" | \"useMany\";\n    [key: string]: any;\n  };\n  types: LiveEvent[\"type\"][];\n  resource?: string;\n  enabled?: boolean;\n  /**\n   * @deprecated use `meta.dataProviderName` instead.\n   */\n  dataProviderName?: string;\n  meta?: MetaQuery & { dataProviderName?: string };\n} & LiveModeProps;\n\nexport type PublishType = (event: LiveEvent) => void;\n\nexport const useResourceSubscription = ({\n  resource: resourceFromProp,\n  params,\n  channel,\n  types,\n  enabled = true,\n  liveMode: liveModeFromProp,\n  onLiveEvent,\n  dataProviderName: dataProviderNameFromProps,\n  meta,\n}: UseResourceSubscriptionProps): void => {\n  const { resource, identifier } = useResource(resourceFromProp);\n\n  const { liveProvider } = useContext(LiveContext);\n  const {\n    liveMode: liveModeFromContext,\n    onLiveEvent: onLiveEventContextCallback,\n  } = useContext<IRefineContext>(RefineContext);\n\n  const liveMode = liveModeFromProp ?? liveModeFromContext;\n\n  const invalidate = useInvalidate();\n\n  const dataProviderName =\n    dataProviderNameFromProps ??\n    meta?.dataProviderName ??\n    resource?.meta?.dataProviderName;\n\n  useEffect(() => {\n    let subscription: any;\n\n    const callback = (event: LiveEvent) => {\n      if (liveMode === \"auto\") {\n        invalidate({\n          resource: identifier,\n          dataProviderName,\n          invalidates: [\"resourceAll\"],\n          invalidationFilters: {\n            type: \"active\",\n            refetchType: \"active\",\n          },\n          invalidationOptions: { cancelRefetch: false },\n        });\n      }\n\n      onLiveEvent?.(event);\n      onLiveEventContextCallback?.(event);\n    };\n\n    if (liveMode && liveMode !== \"off\" && enabled) {\n      subscription = liveProvider?.subscribe({\n        channel,\n        params: {\n          resource: resource?.name,\n          ...params,\n        },\n        types,\n        callback,\n        dataProviderName,\n        meta: {\n          ...meta,\n          dataProviderName,\n        },\n      });\n    }\n\n    return () => {\n      if (subscription) {\n        liveProvider?.unsubscribe(subscription);\n      }\n    };\n  }, [enabled]);\n};\n", "import React, { type PropsWithChildren } from \"react\";\n\nimport type { ILiveContext } from \"./types\";\n\nexport const LiveContext = React.createContext<ILiveContext>({});\n\nexport const LiveContextProvider: React.FC<PropsWithChildren<ILiveContext>> = ({\n  liveProvider,\n  children,\n}) => {\n  return (\n    <LiveContext.Provider value={{ liveProvider }}>\n      {children}\n    </LiveContext.Provider>\n  );\n};\n", "import { useCallback } from \"react\";\n\nimport {\n  type InvalidateOptions,\n  type InvalidateQueryFilters,\n  useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { pickDataProvider } from \"@definitions\";\nimport { useKeys, useResource } from \"@hooks\";\n\nimport type { BaseKey, IQueryKeys } from \"../../contexts/data/types\";\n\nexport type UseInvalidateProp = {\n  resource?: string;\n  id?: BaseKey;\n  dataProviderName?: string;\n  invalidates: Array<keyof IQueryKeys> | false;\n  invalidationFilters?: InvalidateQueryFilters;\n  invalidationOptions?: InvalidateOptions;\n};\n\nexport const useInvalidate = (): ((\n  props: UseInvalidateProp,\n) => Promise<void>) => {\n  const { resources } = useResource();\n  const queryClient = useQueryClient();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const invalidate = useCallback(\n    async ({\n      resource,\n      dataProviderName,\n      invalidates,\n      id,\n      invalidationFilters = { type: \"all\", refetchType: \"active\" },\n      invalidationOptions = { cancelRefetch: false },\n    }: UseInvalidateProp) => {\n      if (invalidates === false) {\n        return;\n      }\n      const dp = pickDataProvider(resource, dataProviderName, resources);\n\n      const queryKey = keys()\n        .data(dp)\n        .resource(resource ?? \"\");\n\n      await Promise.all(\n        invalidates.map((key) => {\n          switch (key) {\n            case \"all\":\n              return queryClient.invalidateQueries(\n                keys().data(dp).get(preferLegacyKeys),\n                invalidationFilters,\n                invalidationOptions,\n              );\n            case \"list\":\n              return queryClient.invalidateQueries(\n                queryKey.action(\"list\").get(preferLegacyKeys),\n                invalidationFilters,\n                invalidationOptions,\n              );\n            case \"many\":\n              return queryClient.invalidateQueries(\n                queryKey.action(\"many\").get(preferLegacyKeys),\n                invalidationFilters,\n                invalidationOptions,\n              );\n            case \"resourceAll\":\n              return queryClient.invalidateQueries(\n                queryKey.get(preferLegacyKeys),\n                invalidationFilters,\n                invalidationOptions,\n              );\n            case \"detail\":\n              return queryClient.invalidateQueries(\n                queryKey\n                  .action(\"one\")\n                  .id(id || \"\")\n                  .get(preferLegacyKeys),\n                invalidationFilters,\n                invalidationOptions,\n              );\n            default:\n              return;\n          }\n        }),\n      );\n\n      return;\n    },\n    [],\n  );\n\n  return invalidate;\n};\n", "import { useContext } from \"react\";\n\nimport { ResourceContext } from \"@contexts/resource\";\nimport { useResourceWithRoute, useRouterContext } from \"@hooks\";\n\nimport type { BaseKey } from \"../../../contexts/data/types\";\nimport type { IResourceItem } from \"../../../contexts/resource/types\";\nimport type { ResourceRouterParams } from \"../../../contexts/router/legacy/types\";\nimport { useRouterType } from \"../../../contexts/router/picker\";\nimport type { Action } from \"../../../contexts/router/types\";\nimport { pickResource } from \"../../../definitions/helpers/pick-resource\";\nimport { useParsed } from \"../../router/use-parsed\";\n\nexport type UseResourceLegacyProps = {\n  /**\n   * Determines which resource to use for redirection\n   * @deprecated resourceName deprecated. Use resourceNameOrRouteName instead # https://github.com/refinedev/refine/issues/1618\n   */\n  resourceName?: string;\n  /**\n   * Determines which resource to use for redirection\n   * @default Resource name that it reads from route\n   */\n  resourceNameOrRouteName?: string;\n  /**\n   * Adds id to the end of the URL\n   * @deprecated resourceName deprecated. Use resourceNameOrRouteName instead # https://github.com/refinedev/refine/issues/1618\n   */\n  recordItemId?: BaseKey;\n};\n\n/**\n * Matches the resource by identifier.\n * If not provided, the resource from the route will be returned.\n * If your resource does not explicitly define an identifier, the resource name will be used.\n */\nexport type UseResourceParam = string | undefined;\n\ntype SelectReturnType<T extends boolean> = T extends true\n  ? { resource: IResourceItem; identifier: string }\n  : { resource: IResourceItem; identifier: string } | undefined;\n\nexport type UseResourceReturnType = {\n  resources: IResourceItem[];\n  resource?: IResourceItem;\n  /**\n   * @deprecated Use `resource.name` instead when you need to get the resource name.\n   */\n  resourceName?: string;\n  /**\n   * @deprecated This value may not always reflect the correct \"id\" value. Use `useResourceParams` to obtain the calculated \"id\"` or `useParsed` to obtain the id from the route instead.\n   */\n  id?: BaseKey;\n  /**\n   * @deprecated This value may not always reflect the correct \"action\" value. Use `useResourceParams` to obtain the calculated \"action\" or `useParsed` to obtain the action from the route instead.\n   */\n  action?: Action;\n  select: <T extends boolean = true>(\n    resourceName: string,\n    force?: T,\n  ) => SelectReturnType<T>;\n  identifier?: string;\n};\n\ntype UseResourceReturnTypeWithResource = UseResourceReturnType & {\n  resource: IResourceItem;\n  identifier: string;\n};\n\n/**\n * @deprecated Use `useResource` with `identifier` property instead. (`identifier` does not check by route name in new router)\n */\nexport function useResource(\n  props: UseResourceLegacyProps,\n): UseResourceReturnType;\nexport function useResource(): UseResourceReturnType;\nexport function useResource<TIdentifier = UseResourceParam>(\n  identifier: TIdentifier,\n): TIdentifier extends NonNullable<UseResourceParam>\n  ? UseResourceReturnTypeWithResource\n  : UseResourceReturnType;\n/**\n * `useResource` is used to get `resources` that are defined as property of the `<Refine>` component.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/resource/useResource} for more details.\n */\nexport function useResource(\n  args?: UseResourceLegacyProps | UseResourceParam,\n): UseResourceReturnType {\n  const { resources } = useContext(ResourceContext);\n\n  const routerType = useRouterType();\n\n  const params = useParsed();\n\n  const oldProps = {\n    resourceName: args && typeof args !== \"string\" ? args.resourceName : args,\n    resourceNameOrRouteName:\n      args && typeof args !== \"string\" ? args.resourceNameOrRouteName : args,\n    recordItemId:\n      args && typeof args !== \"string\" ? args.recordItemId : undefined,\n  };\n\n  const select = <T extends boolean = true>(\n    resourceName: string,\n    force = true,\n  ): SelectReturnType<T> => {\n    const isLegacy = routerType === \"legacy\";\n    const pickedResource = pickResource(resourceName, resources, isLegacy);\n\n    if (pickedResource) {\n      return {\n        resource: pickedResource,\n        identifier: pickedResource.identifier ?? pickedResource.name,\n      } as SelectReturnType<T>;\n    }\n\n    if (force) {\n      const resource: IResourceItem = {\n        name: resourceName,\n        identifier: resourceName,\n      };\n\n      const identifier = resource.identifier ?? resource.name;\n\n      return {\n        resource,\n        identifier,\n      } as SelectReturnType<T>;\n    }\n\n    return undefined as SelectReturnType<T>;\n  };\n\n  /**\n   * Legacy Router - Start\n   *\n   * using `useParams` and `route` to match resource and get params.\n   */\n  const resourceWithRoute = useResourceWithRoute();\n\n  const { useParams } = useRouterContext();\n\n  const legacyParams = useParams<Partial<ResourceRouterParams>>();\n\n  if (routerType === \"legacy\") {\n    const resourceKeyToCheck = oldProps.resourceNameOrRouteName\n      ? oldProps.resourceNameOrRouteName\n      : legacyParams.resource;\n\n    const legacyResource = resourceKeyToCheck\n      ? resourceWithRoute(resourceKeyToCheck)\n      : undefined;\n    const legacyId = oldProps?.recordItemId ?? legacyParams.id;\n    const legacyAction = legacyParams.action;\n    const legacyResourceName = oldProps?.resourceName ?? legacyResource?.name;\n    const legacyIdentifier = legacyResource?.identifier ?? legacyResource?.name;\n\n    return {\n      resources,\n      resource: legacyResource,\n      resourceName: legacyResourceName,\n      id: legacyId,\n      action: legacyAction,\n      select,\n      identifier: legacyIdentifier,\n    };\n  }\n  /** Legacy Router - End */\n\n  /** New Router */\n  let resource: IResourceItem | undefined = undefined;\n  // we try to pick the resource from props first\n  const identifier =\n    typeof args === \"string\" ? args : oldProps?.resourceNameOrRouteName;\n  if (identifier) {\n    const pickedFromProps = pickResource(identifier, resources);\n    if (pickedFromProps) {\n      resource = pickedFromProps;\n    } else {\n      resource = {\n        name: identifier as string,\n      };\n    }\n  } else if (params?.resource) {\n    resource = params.resource;\n  }\n\n  return {\n    resources,\n    resource,\n    resourceName: resource?.name,\n    id: params.id,\n    action: params.action,\n    select,\n    identifier: resource?.identifier ?? resource?.name,\n  };\n}\n", "import React from \"react\";\n\nimport { legacyResourceTransform } from \"@definitions/helpers\";\nimport { useDeepMemo } from \"@hooks/deepMemo\";\n\nimport type { IResourceContext, IResourceItem, ResourceProps } from \"./types\";\n\nexport const ResourceContext = React.createContext<IResourceContext>({\n  resources: [],\n});\n\nexport const ResourceContextProvider: React.FC<\n  React.PropsWithChildren<{ resources: ResourceProps[] }>\n> = ({ resources: providedResources, children }) => {\n  const resources: IResourceItem[] = useDeepMemo(() => {\n    return legacyResourceTransform(providedResources ?? []);\n  }, [providedResources]);\n\n  return (\n    <ResourceContext.Provider value={{ resources }}>\n      {children}\n    </ResourceContext.Provider>\n  );\n};\n", "import React, { useMemo } from \"react\";\nimport { useMemoized } from \"@hooks/memoized\";\n\n/**\n * Hook that memoizes the given dependency array and checks the consecutive calls with deep equality and returns the same value as the first call if dependencies are not changed.\n * @internal\n */\nexport const useDeepMemo = <T,>(\n  fn: () => T,\n  dependencies: React.DependencyList,\n): T => {\n  const memoizedDependencies = useMemoized(dependencies);\n\n  const value = useMemo(fn, memoizedDependencies);\n\n  return value;\n};\n", "import { useRef } from \"react\";\nimport isEqual from \"lodash-es/isEqual.js\";\n\n/**\n * Hook that memoizes the given value with deep equality.\n * @internal\n */\nexport const useMemoized = <T = unknown>(value: T): T => {\n  const ref = useRef(value);\n\n  if (!isEqual(ref.current, value)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n};\n", "import React from \"react\";\n\n/**\n * This context is used to determine which router to use.\n *\n * This is a temporary solution until we remove the legacy router.\n */\n\nexport const RouterPickerContext = React.createContext<\"legacy\" | \"new\">(\"new\");\n\nexport const RouterPickerProvider = RouterPickerContext.Provider;\n\n/**\n * This is a temporary hook to determine which router to use.\n * It will be removed once the legacy router is removed.\n * @internal This is an internal hook.\n */\nexport const useRouterType = () => {\n  const value = React.useContext(RouterPickerContext);\n  return value;\n};\n", "import React from \"react\";\nimport { useParse } from \"../use-parse\";\n\nexport const useParsed = <\n  TParams extends Record<string, any> = Record<string, any>,\n>() => {\n  const parse = useParse();\n\n  const parsed = React.useMemo(() => parse<TParams>(), [parse]);\n\n  return parsed;\n};\n", "import React, { createContext, type PropsWithChildren } from \"react\";\nimport type { RouterProvider } from \"./types\";\n\nconst defaultRouterProvider = {};\n\nexport const RouterContext = createContext<RouterProvider>(\n  defaultRouterProvider,\n);\n\nexport const RouterContextProvider: React.FC<\n  PropsWithChildren<{ router?: RouterProvider }>\n> = ({ children, router }) => {\n  return (\n    <RouterContext.Provider value={router ?? defaultRouterProvider}>\n      {children}\n    </RouterContext.Provider>\n  );\n};\n", "import { RouterContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\nimport type {\n  ParseFunction,\n  ParseResponse,\n} from \"../../../contexts/router/types\";\n\ntype UseParseType = () => <\n  TParams extends Record<string, any> = Record<string, any>,\n>() => ParseResponse<TParams>;\n\nexport const useParse: UseParseType = () => {\n  const routerContext = useContext(RouterContext);\n\n  const useParse = React.useMemo(\n    () =>\n      routerContext?.parse ??\n      (() =>\n        (() => {\n          return {};\n        }) as ParseFunction),\n    [routerContext?.parse],\n  );\n\n  const parse = useParse();\n\n  return parse as ReturnType<UseParseType>;\n};\n", "import { useCallback, useContext } from \"react\";\n\nimport { ResourceContext } from \"@contexts/resource\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\n\nimport type { IResourceItem } from \"../../../contexts/resource/types\";\n\nexport type UseResourceWithRouteReturnType = (route: string) => IResourceItem;\n\n/**\n * @deprecated Use `useResource` hook instead.\n * @internal This hook is for internal use only. And is kept for backward compatibility.\n */\nexport const useResourceWithRoute = (): UseResourceWithRouteReturnType => {\n  const { resources } = useContext(ResourceContext);\n\n  const resourceWithRoute = useCallback(\n    (route: string) => {\n      const picked = pickResource(route, resources, true);\n      if (picked) {\n        return picked;\n      }\n      return { name: route, route: route } as IResourceItem;\n    },\n    [resources],\n  );\n\n  return resourceWithRoute;\n};\n", "import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\n\nimport type { LiveModeProps } from \"../../../contexts/live/types\";\nimport type { IRefineContext } from \"../../../contexts/refine/types\";\n\nexport const useLiveMode = (\n  liveMode: LiveModeProps[\"liveMode\"],\n): LiveModeProps[\"liveMode\"] => {\n  const { liveMode: liveModeFromContext } =\n    useContext<IRefineContext>(RefineContext);\n\n  return liveMode ?? liveModeFromContext;\n};\n", "import { useContext, useEffect } from \"react\";\n\nimport { LiveContext } from \"@contexts/live\";\n\nimport type {\n  BaseKey,\n  CrudFilter,\n  CrudSort,\n  MetaQuery,\n  Pagination,\n} from \"../../../contexts/data/types\";\nimport type { LiveEvent } from \"../../../contexts/live/types\";\n\nexport type UseSubscriptionProps = {\n  /**\n   * Channel name to subscribe.\n   */\n  channel: string;\n  /**\n   * Callback that is run when new events from subscription arrive.\n   */\n  onLiveEvent: (event: LiveEvent) => void;\n  /**\n   * Type of events to subscribe. `\"*\"` means all events.\n   * @type Array<\"deleted\" | \"updated\" | \"created\" | \"*\" | string>\n   */\n  types?: LiveEvent[\"type\"][];\n  /**\n   * Determines subscription should subscribe or not.\n   * @type Array<\"deleted\" | \"updated\" | \"created\" | \"*\" | string>\n   */\n  enabled?: boolean;\n  params?: {\n    ids?: BaseKey[];\n    id?: BaseKey;\n    /**\n     * @deprecated `params.meta` is depcerated. Use `meta` directly from the root level instead.\n     */\n    meta?: MetaQuery;\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    pagination?: Pagination;\n    /**\n     * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * @deprecated `sort` is deprecated, use `sorters` instead.\n     */\n    sort?: CrudSort[];\n    sorters?: CrudSort[];\n    filters?: CrudFilter[];\n    subscriptionType?: \"useList\" | \"useOne\" | \"useMany\";\n    resource?: string;\n    [key: string]: any;\n  };\n  /**\n   * @deprecated use `meta.dataProviderName` instead.\n   */\n  dataProviderName?: string;\n  meta?: MetaQuery & { dataProviderName?: string };\n};\n\nexport const useSubscription = ({\n  params,\n  channel,\n  types = [\"*\"],\n  enabled = true,\n  onLiveEvent,\n  dataProviderName = \"default\",\n  meta,\n}: UseSubscriptionProps): void => {\n  const { liveProvider } = useContext(LiveContext);\n\n  useEffect(() => {\n    let subscription: any;\n\n    if (enabled) {\n      subscription = liveProvider?.subscribe({\n        channel,\n        params,\n        types,\n        callback: onLiveEvent,\n        dataProviderName,\n        meta: {\n          ...meta,\n          dataProviderName,\n        },\n      });\n    }\n\n    return () => {\n      if (subscription) {\n        liveProvider?.unsubscribe(subscription);\n      }\n    };\n  }, [enabled]);\n};\n", "import { useContext } from \"react\";\n\nimport { LiveContext } from \"@contexts/live\";\nimport type { LiveProvider } from \"../../../contexts/live/types\";\n\nexport const usePublish: () => NonNullable<LiveProvider>[\"publish\"] = () => {\n  const { liveProvider } = useContext(LiveContext);\n\n  return liveProvider?.publish;\n};\n", "import { useContext } from \"react\";\n\nimport { UndoableQueueContext } from \"@contexts/undoableQueue\";\nimport type { IUndoableQueue } from \"../../../contexts/undoableQueue/types\";\n\nexport type UseCancelNotificationType = () => {\n  notifications: IUndoableQueue[];\n  notificationDispatch: React.Dispatch<any>;\n};\n\nexport const useCancelNotification: UseCancelNotificationType = () => {\n  const { notifications, notificationDispatch } =\n    useContext(UndoableQueueContext);\n\n  return { notifications, notificationDispatch };\n};\n", "import React, {\n  createContext,\n  useReducer,\n  type PropsWithChildren,\n} from \"react\";\n\nimport isEqual from \"lodash-es/isEqual.js\";\n\nimport { UndoableQueue } from \"../../components\";\nimport {\n  ActionTypes,\n  type IUndoableQueue,\n  type IUndoableQueueContext,\n} from \"./types\";\n\nexport const UndoableQueueContext = createContext<IUndoableQueueContext>({\n  notifications: [],\n  notificationDispatch: () => false,\n});\n\nconst initialState: IUndoableQueue[] = [];\n\nexport const undoableQueueReducer = (state: IUndoableQueue[], action: any) => {\n  switch (action.type) {\n    case ActionTypes.ADD: {\n      const newState = state.filter((notificationItem: IUndoableQueue) => {\n        return !(\n          isEqual(notificationItem.id, action.payload.id) &&\n          notificationItem.resource === action.payload.resource\n        );\n      });\n\n      return [\n        ...newState,\n        {\n          ...action.payload,\n          isRunning: true,\n        },\n      ];\n    }\n    case ActionTypes.REMOVE:\n      return state.filter(\n        (notificationItem: IUndoableQueue) =>\n          !(\n            isEqual(notificationItem.id, action.payload.id) &&\n            notificationItem.resource === action.payload.resource\n          ),\n      );\n    case ActionTypes.DECREASE_NOTIFICATION_SECOND:\n      return state.map((notificationItem: IUndoableQueue) => {\n        if (\n          isEqual(notificationItem.id, action.payload.id) &&\n          notificationItem.resource === action.payload.resource\n        ) {\n          return {\n            ...notificationItem,\n            seconds: action.payload.seconds - 1000,\n          };\n        }\n        return notificationItem;\n      });\n    default:\n      return state;\n  }\n};\n\nexport const UndoableQueueContextProvider: React.FC<PropsWithChildren> = ({\n  children,\n}) => {\n  const [notifications, notificationDispatch] = useReducer(\n    undoableQueueReducer,\n    initialState,\n  );\n\n  const notificationData = { notifications, notificationDispatch };\n\n  return (\n    <UndoableQueueContext.Provider value={notificationData}>\n      {children}\n      {typeof window !== \"undefined\"\n        ? notifications.map((notification) => (\n            <UndoableQueue\n              key={`${notification.id}-${notification.resource}-queue`}\n              notification={notification}\n            />\n          ))\n        : null}\n    </UndoableQueueContext.Provider>\n  );\n};\n", "import { useContext } from \"react\";\n\nimport { NotificationContext } from \"@contexts/notification\";\nimport type { INotificationContext } from \"../../../contexts/notification/types\";\n\nexport const useNotification = (): INotificationContext => {\n  const { open, close } = useContext(NotificationContext);\n\n  return { open, close };\n};\n", "import React, { createContext, type PropsWithChildren } from \"react\";\n\nimport type { INotificationContext } from \"./types\";\n\n/** @deprecated default value for notification context has no use and is an empty object.  */\nexport const defaultNotificationProvider: INotificationContext = {};\n\nexport const NotificationContext = createContext<INotificationContext>({});\n\nexport const NotificationContextProvider: React.FC<\n  PropsWithChildren<INotificationContext>\n> = ({ open, close, children }) => {\n  return (\n    <NotificationContext.Provider value={{ open, close }}>\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n", "import { useCallback } from \"react\";\n\nimport { useNotification } from \"@hooks\";\n\nimport type { OpenNotificationParams } from \"../../../contexts/notification/types\";\n\nexport const useHandleNotification = (): typeof handleNotification => {\n  const { open } = useNotification();\n\n  const handleNotification = useCallback(\n    (\n      notification: OpenNotificationParams | false | undefined,\n      fallbackNotification?: OpenNotificationParams,\n    ) => {\n      if (notification !== false) {\n        if (notification) {\n          open?.(notification);\n        } else if (fallbackNotification) {\n          open?.(fallbackNotification);\n        }\n      }\n    },\n    [],\n  );\n\n  return handleNotification;\n};\n", "import { useCallback, useContext } from \"react\";\n\nimport { I18nContext } from \"@contexts/i18n\";\n\n/**\n * If you need to change the locale at runtime, refine provides the `useSetLocale` hook.\n * It returns the changeLocale method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useSetLocale} for more details.\n */\nexport const useSetLocale = () => {\n  const { i18nProvider } = useContext(I18nContext);\n\n  return useCallback((lang: string) => i18nProvider?.changeLocale(lang), []);\n};\n", "import React, { type PropsWithChildren } from \"react\";\n\nimport type { I18nProvider, II18nContext } from \"./types\";\n\n/** @deprecated default value for translation context has no use and is an empty object.  */\nexport const defaultProvider: Partial<I18nProvider> = {};\n\nexport const I18nContext = React.createContext<II18nContext>({});\n\nexport const I18nContextProvider: React.FC<PropsWithChildren<II18nContext>> = ({\n  children,\n  i18nProvider,\n}) => {\n  return (\n    <I18nContext.Provider\n      value={{\n        i18nProvider,\n      }}\n    >\n      {children}\n    </I18nContext.Provider>\n  );\n};\n", "import { useContext, useMemo } from \"react\";\n\nimport { I18nContext } from \"@contexts/i18n\";\n\n/**\n * If you need to translate the texts in your own components, refine provides the `useTranslate` hook.\n * It returns the translate method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useTranslate} for more details.\n */\nexport const useTranslate = () => {\n  const { i18nProvider } = useContext(I18nContext);\n\n  const fn = useMemo(() => {\n    function translate(\n      key: string,\n      options?: any,\n      defaultMessage?: string,\n    ): string;\n    function translate(key: string, defaultMessage?: string): string;\n\n    function translate(\n      key: string,\n      options?: string | any,\n      defaultMessage?: string,\n    ) {\n      return (\n        i18nProvider?.translate(key, options, defaultMessage) ??\n        defaultMessage ??\n        (typeof options === \"string\" && typeof defaultMessage === \"undefined\"\n          ? options\n          : key)\n      );\n    }\n\n    return translate;\n  }, [i18nProvider]);\n\n  return fn;\n};\n", "import { useCallback, useContext } from \"react\";\n\nimport { I18nContext } from \"@contexts/i18n\";\n\nexport type UseGetLocaleType = () => () => string | undefined;\n\n/**\n * If you need to know the current locale, refine provides the `useGetLocale` hook.\n * It returns the `getLocale` method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useGetLocale} for more details.\n */\nexport const useGetLocale: UseGetLocaleType = () => {\n  const { i18nProvider } = useContext(I18nContext);\n\n  return useCallback(() => i18nProvider?.getLocale(), []);\n};\n", "import { useGetLocale } from \"./useGetLocale\";\nimport { useSetLocale } from \"./useSetLocale\";\nimport { useTranslate } from \"./useTranslate\";\n\n/**\n * It combines `useTranslate`, `useSetLocale` and `useGetLocale` hooks for a better developer experience.\n * It returns `i18nProvider` methods under the hood.\n * @returns `translate` method to translate the texts.\n * @returns `changeLocale` method to change the locale\n * @returns `getLocale` method to get the current locale.\n *\n * @see {@link https://refine.dev/docs/i18n/i18n-provider/} for more details.\n */\nexport const useTranslation = () => {\n  const translate = useTranslate();\n  const changeLocale = useSetLocale();\n  const getLocale = useGetLocale();\n\n  return {\n    translate,\n    changeLocale,\n    getLocale,\n  };\n};\n", "import { useState } from \"react\";\n\nimport papaparse from \"papaparse\";\nimport warnOnce from \"warn-once\";\n\nimport {\n  downloadInBrowser,\n  pickDataProvider,\n  pickNotDeprecated,\n  useUserFriendlyName,\n} from \"@definitions\";\nimport { useDataProvider, useMeta, useResource } from \"@hooks\";\n\nimport type {\n  BaseRecord,\n  CrudFilter,\n  CrudSort,\n  MetaQuery,\n} from \"../../contexts/data/types\";\nimport type { MapDataFn } from \"./types\";\n\n// Old options interface taken from export-to-csv-fix-source-map@0.2.1\n// Kept here to ensure backward compatibility\nexport interface ExportOptions {\n  filename?: string;\n  fieldSeparator?: string;\n  quoteStrings?: string;\n  decimalSeparator?: string;\n  showLabels?: boolean;\n  showTitle?: boolean;\n  title?: string;\n  useTextFile?: boolean;\n  useBom?: boolean;\n  headers?: string[];\n  useKeysAsHeaders?: boolean;\n}\n\ntype UseExportOptionsType<\n  TData extends BaseRecord = BaseRecord,\n  TVariables = any,\n> = {\n  /**\n   * Resource name for API data interactions\n   * @default Resource name that it reads from route\n   * @deprecated `resourceName` is deprecated. Use `resource` instead.\n   */\n  resourceName?: string;\n  /**\n   * Resource name for API data interactions\n   * @default Resource name that it reads from route\n   */\n  resource?: string;\n  /**\n   * A mapping function that runs for every record. Mapped data will be included in the file contents\n   */\n  mapData?: MapDataFn<TData, TVariables>;\n  /**\n   *  Sorts records\n   *  @deprecated `sorter` is deprecated. Use `sorters` instead.\n   */\n  sorter?: CrudSort[];\n  /**\n   *  Sorts records\n   */\n  sorters?: CrudSort[];\n  /**\n   *  Filters records\n   */\n  filters?: CrudFilter[];\n  maxItemCount?: number;\n  /**\n   *  Requests to fetch data are made as batches by page size. By default, it is 20. Used for `getList` method of `DataProvider`\n   */\n  pageSize?: number;\n  /**\n   *  Used for exporting options\n   *  @type [Options](https://github.com/alexcaza/export-to-csv)\n   * @deprecated `exportOptions` is deprecated. Use `unparseConfig` instead.\n   */\n  exportOptions?: ExportOptions;\n  /**\n   *  Used for exporting options\n   *  @type [UnparseConfig](https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/papaparse)\n   */\n  unparseConfig?: papaparse.UnparseConfig;\n  /**\n   *  Metadata query for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   *  Metadata query for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   */\n  dataProviderName?: string;\n  /**\n   *  Callback to handle error events of this hook\n   */\n  onError?: (error: any) => void;\n  /**\n   *  Whether to generate download of the CSV in browser environments, defaults to true.\n   */\n  download?: boolean;\n};\n\ntype UseExportReturnType = {\n  isLoading: boolean;\n  triggerExport: () => Promise<string | undefined>;\n};\n\n/**\n * `useExport` hook allows you to make your resources exportable.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useExport} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TVariables - Values for params.\n *\n */\nexport const useExport = <\n  TData extends BaseRecord = BaseRecord,\n  TVariables = any,\n>({\n  resourceName,\n  resource: resourceFromProps,\n  sorter,\n  sorters,\n  filters,\n  maxItemCount,\n  pageSize = 20,\n  mapData = (item) => item as any,\n  exportOptions,\n  unparseConfig,\n  meta,\n  metaData,\n  dataProviderName,\n  onError,\n  download,\n}: UseExportOptionsType<TData, TVariables> = {}): UseExportReturnType => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const dataProvider = useDataProvider();\n  const getMeta = useMeta();\n  const { resource, resources, identifier } = useResource(\n    pickNotDeprecated(resourceFromProps, resourceName),\n  );\n  const getFriendlyName = useUserFriendlyName();\n\n  const filename = `${getFriendlyName(\n    identifier,\n    \"plural\",\n  )}-${new Date().toLocaleString()}`;\n\n  const { getList } = dataProvider(\n    pickDataProvider(identifier, dataProviderName, resources),\n  );\n\n  const combinedMeta = getMeta({\n    resource,\n    meta: pickNotDeprecated(meta, metaData),\n  });\n\n  const triggerExport = async () => {\n    setIsLoading(true);\n\n    let rawData: BaseRecord[] = [];\n\n    let current = 1;\n    let preparingData = true;\n    while (preparingData) {\n      try {\n        const { data, total } = await getList<TData>({\n          resource: resource?.name ?? \"\",\n          filters,\n          sort: pickNotDeprecated(sorters, sorter),\n          sorters: pickNotDeprecated(sorters, sorter),\n          pagination: {\n            current,\n            pageSize,\n            mode: \"server\",\n          },\n          meta: combinedMeta,\n          metaData: combinedMeta,\n        });\n\n        current++;\n\n        rawData.push(...data);\n\n        if (maxItemCount && rawData.length >= maxItemCount) {\n          rawData = rawData.slice(0, maxItemCount);\n          preparingData = false;\n        }\n\n        if (total === rawData.length) {\n          preparingData = false;\n        }\n      } catch (error) {\n        setIsLoading(false);\n        preparingData = false;\n\n        onError?.(error);\n\n        return;\n      }\n    }\n\n    const hasUnparseConfig =\n      typeof unparseConfig !== \"undefined\" && unparseConfig !== null;\n\n    warnOnce(\n      hasUnparseConfig &&\n        typeof exportOptions !== \"undefined\" &&\n        exportOptions !== null,\n      `[useExport]: resource: \"${identifier}\" \\n\\nBoth \\`unparseConfig\\` and \\`exportOptions\\` are set, \\`unparseConfig\\` will take precedence`,\n    );\n\n    const options: ExportOptions = {\n      filename,\n      useKeysAsHeaders: true,\n      useBom: true, // original default\n      title: \"My Generated Report\", // original default\n      quoteStrings: '\"', // original default\n      ...exportOptions,\n    };\n\n    warnOnce(\n      exportOptions?.decimalSeparator !== undefined,\n      `[useExport]: resource: \"${identifier}\" \\n\\nUse of \\`decimalSeparator\\` no longer supported, please use \\`mapData\\` instead.\\n\\nSee https://refine.dev/docs/api-reference/core/hooks/import-export/useExport/`,\n    );\n\n    if (!hasUnparseConfig) {\n      unparseConfig = {\n        // useKeysAsHeaders takes priority over options.headers\n        columns: options.useKeysAsHeaders ? undefined : options.headers,\n        delimiter: options.fieldSeparator,\n        header: options.showLabels || options.useKeysAsHeaders,\n        quoteChar: options.quoteStrings,\n        quotes: true,\n      };\n    } else {\n      unparseConfig = {\n        // Set to force quote for better compatibility\n        quotes: true,\n        ...unparseConfig,\n      };\n    }\n\n    let csv = papaparse.unparse(rawData.map(mapData as any), unparseConfig);\n    if (options.showTitle) {\n      csv = `${options.title}\\r\\n\\n${csv}`;\n    }\n\n    // Backward compatibility support for downloadInBrowser of the exported file, only works for browsers.\n    if (typeof window !== \"undefined\" && csv.length > 0 && (download ?? true)) {\n      const fileExtension = options.useTextFile ? \".txt\" : \".csv\";\n      const fileType = `text/${\n        options.useTextFile ? \"plain\" : \"csv\"\n      };charset=utf8;`;\n      const downloadFilename = `${(options.filename ?? \"download\").replace(\n        / /g,\n        \"_\",\n      )}${fileExtension}`;\n\n      downloadInBrowser(\n        downloadFilename,\n        `${options?.useBom ? \"\\ufeff\" : \"\"}${csv}`,\n        fileType,\n      );\n    }\n\n    setIsLoading(false);\n    return csv;\n  };\n\n  return {\n    isLoading,\n    triggerExport,\n  };\n};\n", "import React from \"react\";\nimport warnOnce from \"warn-once\";\n\nimport {\n  useMeta,\n  useOne,\n  useCreate,\n  useUpdate,\n  useResourceParams,\n  useInvalidate,\n  useMutationMode,\n  useRefineOptions,\n  useLoadingOvertime,\n  useWarnAboutChange,\n  useRedirectionAfterSubmission,\n} from \"@hooks\";\n\nimport {\n  redirectPage,\n  asyncDebounce,\n  deferExecution,\n  pickNotDeprecated,\n} from \"@definitions/helpers\";\n\nimport type { UpdateParams } from \"../data/useUpdate\";\nimport type { UseCreateParams } from \"../data/useCreate\";\nimport type { UseFormProps, UseFormReturnType } from \"./types\";\nimport type {\n  BaseKey,\n  BaseRecord,\n  CreateResponse,\n  HttpError,\n  UpdateResponse,\n} from \"../../contexts/data/types\";\n\nexport type {\n  ActionParams,\n  UseFormProps,\n  UseFormReturnType,\n  AutoSaveIndicatorElements,\n  AutoSaveProps,\n  AutoSaveReturnType,\n  FormAction,\n  RedirectAction,\n  RedirectionTypes,\n  FormWithSyncWithLocationParams,\n} from \"./types\";\n\n/**\n * This hook orchestrates Refine's data hooks to create, edit, and clone data. It also provides a set of features to make it easier for users to implement their real world needs and handle edge cases such as redirects, invalidation, auto-save and more.\n *\n * @see {@link https://refine.dev/docs/data/hooks/use-form} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/core/interface-references/#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interface-references/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/core/interface-references/#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n * @typeParam TResponse - Result data returned by the mutation function. Extends {@link https://refine.dev/docs/core/interface-references/#baserecord `BaseRecord`}. Defaults to `TData`\n * @typeParam TResponseError - Custom error object that extends {@link https://refine.dev/docs/core/interface-references/#httperror `HttpError`}. Defaults to `TError`\n *\n */\nexport const useForm = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TData extends BaseRecord = TQueryFnData,\n  TResponse extends BaseRecord = TData,\n  TResponseError extends HttpError = TError,\n>(\n  props: UseFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n  > = {},\n): UseFormReturnType<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TData,\n  TResponse,\n  TResponseError\n> => {\n  const getMeta = useMeta();\n  const invalidate = useInvalidate();\n  const { redirect: defaultRedirect } = useRefineOptions();\n  const { mutationMode: defaultMutationMode } = useMutationMode();\n\n  const { setWarnWhen } = useWarnAboutChange();\n  const handleSubmitWithRedirect = useRedirectionAfterSubmission();\n\n  const pickedMeta = pickNotDeprecated(props.meta, props.metaData);\n  const mutationMode = props.mutationMode ?? defaultMutationMode;\n\n  const {\n    id,\n    setId,\n    resource,\n    identifier,\n    formAction: action,\n  } = useResourceParams({\n    resource: props.resource,\n    id: props.id,\n    action: props.action,\n  });\n\n  const [autosaved, setAutosaved] = React.useState(false);\n\n  const isEdit = action === \"edit\";\n  const isClone = action === \"clone\";\n  const isCreate = action === \"create\";\n\n  const combinedMeta = getMeta({\n    resource,\n    meta: pickedMeta,\n  });\n\n  const isIdRequired = (isEdit || isClone) && Boolean(props.resource);\n  const isIdDefined = typeof props.id !== \"undefined\";\n  const isQueryDisabled = props.queryOptions?.enabled === false;\n\n  /**\n   * When a custom resource is provided through props, `id` will not be inferred from the URL to avoid any potential faulty requests.\n   * In this case, `id` is required to be passed through props.\n   * If `id` is not handled, a warning will be thrown in development mode.\n   */\n  warnOnce(\n    isIdRequired && !isIdDefined && !isQueryDisabled,\n    idWarningMessage(action, identifier, id),\n  );\n\n  /**\n   * Target action to redirect after form submission.\n   */\n  const redirectAction = redirectPage({\n    redirectFromProps: props.redirect,\n    action,\n    redirectOptions: defaultRedirect,\n  });\n\n  /**\n   * Redirection function to be used in internal redirects and to be provided to the user.\n   */\n  const redirect: UseFormReturnType[\"redirect\"] = (\n    redirect = isEdit ? \"list\" : \"edit\",\n    redirectId = id,\n    routeParams = {},\n  ) => {\n    handleSubmitWithRedirect({\n      redirect: redirect,\n      resource,\n      id: redirectId,\n      meta: { ...pickedMeta, ...routeParams },\n    });\n  };\n\n  const queryResult = useOne<TQueryFnData, TError, TData>({\n    resource: identifier,\n    id,\n    queryOptions: {\n      // Only enable the query if it's not a create action and the `id` is defined\n      enabled: !isCreate && id !== undefined,\n      ...props.queryOptions,\n    },\n    liveMode: props.liveMode,\n    onLiveEvent: props.onLiveEvent,\n    liveParams: props.liveParams,\n    meta: { ...combinedMeta, ...props.queryMeta },\n    dataProviderName: props.dataProviderName,\n    overtimeOptions: { enabled: false },\n  });\n\n  const createMutation = useCreate<TResponse, TResponseError, TVariables>({\n    mutationOptions: props.createMutationOptions,\n    overtimeOptions: { enabled: false },\n  });\n\n  const updateMutation = useUpdate<TResponse, TResponseError, TVariables>({\n    mutationOptions: props.updateMutationOptions,\n    overtimeOptions: { enabled: false },\n  });\n\n  const mutationResult = isEdit ? updateMutation : createMutation;\n  const isMutationLoading = mutationResult.isLoading;\n  const formLoading = isMutationLoading || queryResult.isFetching;\n\n  const { elapsedTime } = useLoadingOvertime({\n    ...props.overtimeOptions,\n    isLoading: formLoading,\n  });\n\n  React.useEffect(() => {\n    // After `autosaved` is set to `true`, it won't be set to `false` again.\n    // Therefore, the `invalidate` function will be called only once at the end of the hooks lifecycle.\n    return () => {\n      if (\n        props.autoSave?.invalidateOnUnmount &&\n        autosaved &&\n        identifier &&\n        typeof id !== \"undefined\"\n      ) {\n        invalidate({\n          id,\n          invalidates: props.invalidates || [\"list\", \"many\", \"detail\"],\n          dataProviderName: props.dataProviderName,\n          resource: identifier,\n        });\n      }\n    };\n  }, [props.autoSave?.invalidateOnUnmount, autosaved]);\n\n  const onFinish = async (\n    values: TVariables,\n    { isAutosave = false }: { isAutosave?: boolean } = {},\n  ) => {\n    const isPessimistic = mutationMode === \"pessimistic\";\n\n    // Disable warning trigger when the form is being submitted\n    setWarnWhen(false);\n\n    // Redirect after a successful form submission\n    const onSuccessRedirect = (id?: BaseKey) => redirect(redirectAction, id);\n\n    const submissionPromise = new Promise<\n      CreateResponse<TResponse> | UpdateResponse<TResponse> | void\n    >((resolve, reject) => {\n      // Reject the mutation if the resource is not defined\n      if (!resource) return reject(missingResourceError);\n      // Reject the mutation if the `id` is not defined in edit action\n      // This line is commented out because the `id` might not be set for some cases and edit is done on a resource.\n      // if (isEdit && !id) return reject(missingIdError);\n      // Reject the mutation if the `id` is not defined in clone action\n      if (isClone && !id) return reject(missingIdError);\n      // Reject the mutation if there's no `values` passed\n      if (!values) return reject(missingValuesError);\n      // Auto Save is only allowed in edit action\n      if (isAutosave && !isEdit) return reject(autosaveOnNonEditError);\n\n      if (!isPessimistic && !isAutosave) {\n        // If the mutation mode is not pessimistic, handle the redirect immediately in an async manner\n        // `setWarnWhen` blocks the redirects until set to `false`\n        // If redirect is done before the value is properly set, it will be blocked.\n        // We're deferring the execution of the redirect to ensure that the value is set properly.\n        deferExecution(() => onSuccessRedirect());\n        // Resolve the promise immediately\n        resolve();\n      }\n\n      const variables:\n        | UpdateParams<TResponse, TResponseError, TVariables>\n        | UseCreateParams<TResponse, TResponseError, TVariables> = {\n        values,\n        resource: identifier ?? resource.name,\n        meta: { ...combinedMeta, ...props.mutationMeta },\n        metaData: { ...combinedMeta, ...props.mutationMeta },\n        dataProviderName: props.dataProviderName,\n        invalidates: isAutosave ? [] : props.invalidates,\n        successNotification: isAutosave ? false : props.successNotification,\n        errorNotification: isAutosave ? false : props.errorNotification,\n        // Update specific variables\n        ...(isEdit\n          ? {\n              id: id ?? \"\",\n              mutationMode,\n              undoableTimeout: props.undoableTimeout,\n              optimisticUpdateMap: props.optimisticUpdateMap,\n            }\n          : {}),\n      };\n\n      const { mutateAsync } = isEdit ? updateMutation : createMutation;\n\n      mutateAsync(variables as any, {\n        // Call user-defined `onMutationSuccess` and `onMutationError` callbacks if provided\n        // These callbacks will not have an effect on the submission promise\n        onSuccess: props.onMutationSuccess\n          ? (data, _, context) => {\n              props.onMutationSuccess?.(data, values, context, isAutosave);\n            }\n          : undefined,\n        onError: props.onMutationError\n          ? (error: TResponseError, _, context) => {\n              props.onMutationError?.(error, values, context, isAutosave);\n            }\n          : undefined,\n      })\n        // If the mutation mode is pessimistic, resolve the promise after the mutation is succeeded\n        .then((data) => {\n          if (isPessimistic && !isAutosave) {\n            deferExecution(() => onSuccessRedirect(data?.data?.id));\n          }\n          if (isAutosave) {\n            setAutosaved(true);\n          }\n          resolve(data);\n        })\n        // If the mutation mode is pessimistic, reject the promise after the mutation is failed\n        .catch(reject);\n    });\n\n    return submissionPromise;\n  };\n\n  const onFinishAutoSave = asyncDebounce(\n    (values: TVariables) => onFinish(values, { isAutosave: true }),\n    props.autoSave?.debounce || 1000,\n    \"Cancelled by debounce\",\n  );\n\n  const overtime = {\n    elapsedTime,\n  };\n\n  const autoSaveProps = {\n    status: updateMutation.status,\n    data: updateMutation.data,\n    error: updateMutation.error,\n  };\n\n  return {\n    onFinish,\n    onFinishAutoSave,\n    formLoading,\n    mutationResult,\n    mutation: mutationResult,\n    queryResult,\n    query: queryResult,\n    autoSaveProps,\n    id,\n    setId,\n    redirect,\n    overtime,\n  };\n};\n\nconst missingResourceError = new Error(\n  \"[useForm]: `resource` is not defined or not matched but is required\",\n);\n\nconst missingIdError = new Error(\n  \"[useForm]: `id` is not defined but is required in edit and clone actions\",\n);\n\nconst missingValuesError = new Error(\n  \"[useForm]: `values` is not provided but is required\",\n);\n\nconst autosaveOnNonEditError = new Error(\n  \"[useForm]: `autoSave` is only allowed in edit action\",\n);\n\nconst idWarningMessage = (action?: string, identifier?: string, id?: BaseKey) =>\n  `[useForm]: action: \"${action}\", resource: \"${identifier}\", id: ${id}\n\nIf you don't use the \\`setId\\` method to set the \\`id\\`, you should pass the \\`id\\` prop to \\`useForm\\`. Otherwise, \\`useForm\\` will not be able to infer the \\`id\\` from the current URL with custom resource provided.\n\nSee https://refine.dev/docs/data/hooks/use-form/#id-`;\n", "import { useCallback } from \"react\";\n\nimport { useNavigation } from \"@hooks\";\n\nimport type { BaseKey, MetaDataQuery } from \"../../contexts/data/types\";\nimport type { IResourceItem } from \"../../contexts/resource/types\";\nimport type { RedirectAction } from \"../form/types\";\n\nexport type UseRedirectionAfterSubmissionType = () => (options: {\n  redirect: RedirectAction;\n  resource?: IResourceItem;\n  id?: BaseKey;\n  meta?: MetaDataQuery;\n}) => void;\n\nexport const useRedirectionAfterSubmission: UseRedirectionAfterSubmissionType =\n  () => {\n    const { show, edit, list, create } = useNavigation();\n\n    const handleSubmitWithRedirect = useCallback(\n      ({\n        redirect,\n        resource,\n        id,\n        meta = {},\n      }: {\n        redirect: RedirectAction;\n        resource?: IResourceItem;\n        id?: BaseKey;\n        meta?: MetaDataQuery;\n      }) => {\n        if (redirect && resource) {\n          if (!!resource.show && redirect === \"show\" && id) {\n            return show(resource, id, undefined, meta);\n          }\n\n          if (!!resource.edit && redirect === \"edit\" && id) {\n            return edit(resource, id, undefined, meta);\n          }\n\n          if (!!resource.create && redirect === \"create\") {\n            return create(resource, undefined, meta);\n          }\n\n          return list(resource, \"push\", meta);\n        }\n        return;\n      },\n      [],\n    );\n\n    return handleSubmitWithRedirect;\n  };\n", "import { RouterContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\n\nexport const useBack = () => {\n  const routerContext = useContext(RouterContext);\n\n  const useBack = React.useMemo(\n    () => routerContext?.back ?? (() => () => undefined),\n    [routerContext?.back],\n  );\n\n  const back = useBack();\n\n  return back;\n};\n", "import React, { useCallback, useContext } from \"react\";\n\nimport { RouterContext } from \"@contexts/router\";\nimport { useResource } from \"@hooks/resource\";\n\nimport type { BaseKey } from \"../../../contexts/data/types\";\nimport type { IResourceItem } from \"../../../contexts/resource/types\";\nimport type {\n  Action,\n  GoConfig as GoConfigBase,\n} from \"../../../contexts/router/types\";\nimport { useGetToPath } from \"../use-get-to-path\";\n\ntype ResourceWithoutId = {\n  /**\n   *  The name or identifier of the resource.\n   */\n  resource: string;\n  action: Extract<Action, \"create\" | \"list\">;\n  id?: never;\n  meta?: Record<string, unknown>;\n};\n\ntype ResourceWithId = {\n  /**\n   *  The name or identifier of the resource.\n   */\n  resource: string;\n  action: Extract<Action, \"edit\" | \"show\" | \"clone\">;\n  id: BaseKey;\n  meta?: Record<string, unknown>;\n};\n\nexport type Resource = ResourceWithoutId | ResourceWithId;\n\nexport type GoConfigWithResource = Omit<GoConfigBase, \"to\"> & {\n  to?: GoConfigBase[\"to\"] | Resource;\n};\n\nexport const useGo = () => {\n  const routerContext = useContext(RouterContext);\n  const { select: resourceSelect } = useResource();\n  const getToPath = useGetToPath();\n\n  const useGo = React.useMemo(\n    () => routerContext?.go ?? (() => () => undefined),\n    [routerContext?.go],\n  );\n\n  const goFromRouter = useGo();\n\n  const go = useCallback(\n    (config: GoConfigWithResource | GoConfigBase) => {\n      if (typeof config.to !== \"object\") {\n        return goFromRouter({ ...config, to: config.to });\n      }\n\n      // when config.to is an object, it means that we want to go to a resource.\n      // so we need to find the path for the resource.\n      const { resource } = resourceSelect(config.to.resource);\n      handleResourceErrors(config.to, resource);\n      const newTo = getToPath({\n        resource,\n        action: config.to.action,\n        meta: {\n          id: config.to.id,\n          ...config.to.meta,\n        },\n      });\n\n      return goFromRouter({\n        ...config,\n        to: newTo,\n      });\n    },\n    [resourceSelect, goFromRouter],\n  );\n\n  return go;\n};\n\n/**\n * handle errors for resource\n * @internal\n */\nexport const handleResourceErrors = (to: Resource, resource: IResourceItem) => {\n  if (!to?.action || !to?.resource) {\n    throw new Error(`[useGo]: \"action\" or \"resource\" is required.`);\n  }\n\n  if ([\"edit\", \"show\", \"clone\"].includes(to?.action) && !to.id) {\n    throw new Error(\n      `[useGo]: [action: ${to.action}] requires an \"id\" for resource [resource: ${to.resource}]`,\n    );\n  }\n\n  const actionUrl = resource[to.action];\n  if (!actionUrl) {\n    throw new Error(\n      `[useGo]: [action: ${to.action}] is not defined for [resource: ${to.resource}]`,\n    );\n  }\n};\n", "import React from \"react\";\n\nimport type { IResourceItem } from \"../../../contexts/resource/types\";\nimport { useRouterType } from \"../../../contexts/router/picker\";\nimport type { Action } from \"../../../contexts/router/types\";\nimport { getActionRoutesFromResource } from \"../../../definitions/helpers/router\";\nimport { composeRoute } from \"../../../definitions/helpers/router/compose-route\";\nimport { useResource } from \"../../resource\";\nimport { useParsed } from \"../use-parsed\";\n\ntype UseToPathParams = {\n  resource?: IResourceItem;\n  action: Action;\n  meta?: Record<string, unknown>;\n  legacy?: boolean;\n};\n\ntype GetToPathFn = (params: UseToPathParams) => string | undefined;\n\n/**\n * Returns a function to get the route for a given action and resource.\n * If resource is not provided, it will use the resource from the route.\n * If the resource is not found, it will return undefined.\n * If the action is not found, it will return undefined.\n * `meta` can be provided to compose the routes with parameters. (Can be used for nested routes.)\n */\nexport const useGetToPath = (): GetToPathFn => {\n  const routerType = useRouterType();\n  const { resource: resourceFromRoute, resources } = useResource();\n  const parsed = useParsed();\n\n  const fn = React.useCallback(\n    ({ resource, action, meta }: UseToPathParams): string | undefined => {\n      const selectedResource = resource || resourceFromRoute;\n\n      if (!selectedResource) {\n        return undefined;\n      }\n\n      const actionRoutes = getActionRoutesFromResource(\n        selectedResource,\n        resources,\n        routerType === \"legacy\",\n      );\n\n      const actionRoute = actionRoutes.find(\n        (item) => item.action === action,\n      )?.route;\n\n      if (!actionRoute) {\n        return undefined;\n      }\n\n      const composed = composeRoute(\n        actionRoute,\n        selectedResource?.meta,\n        parsed,\n        meta,\n      );\n\n      return composed;\n    },\n    [resources, resourceFromRoute, parsed],\n  );\n\n  return fn;\n};\n", "import { useRouterType } from \"@contexts/router/picker\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\nimport { getActionRoutesFromResource } from \"@definitions/helpers/router\";\nimport { composeRoute } from \"@definitions/helpers/router/compose-route\";\nimport { useResource, useRouterContext } from \"@hooks\";\nimport { useBack } from \"@hooks/router/use-back\";\nimport { useGo } from \"@hooks/router/use-go\";\nimport { useParsed } from \"@hooks/router/use-parsed\";\n\nimport type { BaseKey, MetaDataQuery } from \"../../contexts/data/types\";\nimport type { IResourceItem } from \"../../contexts/resource/types\";\n\nexport type HistoryType = \"push\" | \"replace\";\n\n/**\n * `refine` uses {@link https://reactrouter.com/en/main/hooks/use-navigate#usenavigate `React Router`} and comes with all redirects out of the box.\n * It allows you to manage your routing operations in refine.\n * Using this hook, you can manage all the routing operations of your application very easily.\n *\n * @internal This is an internal hook of refine. Do not use it directly.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation} for more details.\n */\nexport const useNavigation = () => {\n  const { resources } = useResource();\n  const routerType = useRouterType();\n  const { useHistory } = useRouterContext();\n  const history = useHistory();\n  const parsed = useParsed();\n  const go = useGo();\n  const back = useBack();\n\n  const handleUrl = (url: string, type: HistoryType = \"push\") => {\n    if (routerType === \"legacy\") {\n      history[type](url);\n    } else {\n      go({ to: url, type });\n    }\n  };\n\n  const createUrl = (\n    resource: string | IResourceItem,\n    meta: MetaDataQuery = {},\n  ) => {\n    if (routerType === \"legacy\") {\n      const resourceItem =\n        typeof resource === \"string\"\n          ? pickResource(resource, resources, true) ?? {\n              name: resource,\n              route: resource,\n            }\n          : resource;\n\n      const createActionRoute = getActionRoutesFromResource(\n        resourceItem,\n        resources,\n        true,\n      ).find((r) => r.action === \"create\");\n\n      if (!createActionRoute) {\n        return \"\";\n      }\n\n      return composeRoute(\n        createActionRoute.route,\n        resourceItem?.meta,\n        parsed,\n        meta,\n      );\n    }\n    const resourceItem =\n      typeof resource === \"string\"\n        ? pickResource(resource, resources) ?? { name: resource }\n        : resource;\n\n    const createActionRoute = getActionRoutesFromResource(\n      resourceItem,\n      resources,\n    ).find((r) => r.action === \"create\")?.route;\n\n    if (!createActionRoute) {\n      return \"\";\n    }\n\n    return go({\n      to: composeRoute(createActionRoute, resourceItem?.meta, parsed, meta),\n      type: \"path\",\n      query: meta.query,\n    }) as string;\n  };\n\n  const editUrl = (\n    resource: string | IResourceItem,\n    id: BaseKey,\n    meta: MetaDataQuery = {},\n  ) => {\n    const encodedId = encodeURIComponent(id);\n    if (routerType === \"legacy\") {\n      const resourceItem =\n        typeof resource === \"string\"\n          ? pickResource(resource, resources, true) ?? {\n              name: resource,\n              route: resource,\n            }\n          : resource;\n\n      const editActionRoute = getActionRoutesFromResource(\n        resourceItem,\n        resources,\n        true,\n      ).find((r) => r.action === \"edit\");\n\n      if (!editActionRoute) {\n        return \"\";\n      }\n\n      return composeRoute(editActionRoute.route, resourceItem?.meta, parsed, {\n        ...meta,\n        id: encodedId,\n      });\n    }\n    const resourceItem =\n      typeof resource === \"string\"\n        ? pickResource(resource, resources) ?? { name: resource }\n        : resource;\n\n    const editActionRoute = getActionRoutesFromResource(\n      resourceItem,\n      resources,\n    ).find((r) => r.action === \"edit\")?.route;\n\n    if (!editActionRoute) {\n      return \"\";\n    }\n\n    return go({\n      to: composeRoute(editActionRoute, resourceItem?.meta, parsed, {\n        ...meta,\n        id: encodedId,\n      }),\n      type: \"path\",\n      query: meta.query,\n    }) as string;\n  };\n\n  const cloneUrl = (\n    resource: string | IResourceItem,\n    id: BaseKey,\n    meta: MetaDataQuery = {},\n  ) => {\n    const encodedId = encodeURIComponent(id);\n\n    if (routerType === \"legacy\") {\n      const resourceItem =\n        typeof resource === \"string\"\n          ? pickResource(resource, resources, true) ?? {\n              name: resource,\n              route: resource,\n            }\n          : resource;\n\n      const cloneActionRoute = getActionRoutesFromResource(\n        resourceItem,\n        resources,\n        true,\n      ).find((r) => r.action === \"clone\");\n\n      if (!cloneActionRoute) {\n        return \"\";\n      }\n\n      return composeRoute(cloneActionRoute.route, resourceItem?.meta, parsed, {\n        ...meta,\n        id: encodedId,\n      });\n    }\n    const resourceItem =\n      typeof resource === \"string\"\n        ? pickResource(resource, resources) ?? { name: resource }\n        : resource;\n\n    const cloneActionRoute = getActionRoutesFromResource(\n      resourceItem,\n      resources,\n    ).find((r) => r.action === \"clone\")?.route;\n\n    if (!cloneActionRoute) {\n      return \"\";\n    }\n\n    return go({\n      to: composeRoute(cloneActionRoute, resourceItem?.meta, parsed, {\n        ...meta,\n        id: encodedId,\n      }),\n      type: \"path\",\n      query: meta.query,\n    }) as string;\n  };\n\n  const showUrl = (\n    resource: string | IResourceItem,\n    id: BaseKey,\n    meta: MetaDataQuery = {},\n  ) => {\n    const encodedId = encodeURIComponent(id);\n    if (routerType === \"legacy\") {\n      const resourceItem =\n        typeof resource === \"string\"\n          ? pickResource(resource, resources, true) ?? {\n              name: resource,\n              route: resource,\n            }\n          : resource;\n\n      const showActionRoute = getActionRoutesFromResource(\n        resourceItem,\n        resources,\n        true,\n      ).find((r) => r.action === \"show\");\n\n      if (!showActionRoute) {\n        return \"\";\n      }\n\n      return composeRoute(showActionRoute.route, resourceItem?.meta, parsed, {\n        ...meta,\n        id: encodedId,\n      });\n    }\n    const resourceItem =\n      typeof resource === \"string\"\n        ? pickResource(resource, resources) ?? { name: resource }\n        : resource;\n\n    const showActionRoute = getActionRoutesFromResource(\n      resourceItem,\n      resources,\n    ).find((r) => r.action === \"show\")?.route;\n\n    if (!showActionRoute) {\n      return \"\";\n    }\n\n    return go({\n      to: composeRoute(showActionRoute, resourceItem?.meta, parsed, {\n        ...meta,\n        id: encodedId,\n      }),\n      type: \"path\",\n      query: meta.query,\n    }) as string;\n  };\n\n  const listUrl = (\n    resource: string | IResourceItem,\n    meta: MetaDataQuery = {},\n  ) => {\n    if (routerType === \"legacy\") {\n      const resourceItem =\n        typeof resource === \"string\"\n          ? pickResource(resource, resources, true) ?? {\n              name: resource,\n              route: resource,\n            }\n          : resource;\n\n      const listActionRoute = getActionRoutesFromResource(\n        resourceItem,\n        resources,\n        true,\n      ).find((r) => r.action === \"list\");\n\n      if (!listActionRoute) {\n        return \"\";\n      }\n\n      return composeRoute(\n        listActionRoute.route,\n        resourceItem?.meta,\n        parsed,\n        meta,\n      );\n    }\n    const resourceItem =\n      typeof resource === \"string\"\n        ? pickResource(resource, resources) ?? { name: resource }\n        : resource;\n\n    const listActionRoute = getActionRoutesFromResource(\n      resourceItem,\n      resources,\n    ).find((r) => r.action === \"list\")?.route;\n\n    if (!listActionRoute) {\n      return \"\";\n    }\n\n    return go({\n      to: composeRoute(listActionRoute, resourceItem?.meta, parsed, meta),\n      type: \"path\",\n      query: meta.query,\n    }) as string;\n  };\n\n  const create = (\n    resource: string | IResourceItem,\n    type: HistoryType = \"push\",\n    meta: MetaDataQuery = {},\n  ) => {\n    handleUrl(createUrl(resource, meta), type);\n  };\n\n  const edit = (\n    resource: string | IResourceItem,\n    id: BaseKey,\n    type: HistoryType = \"push\",\n    meta: MetaDataQuery = {},\n  ) => {\n    handleUrl(editUrl(resource, id, meta), type);\n  };\n\n  const clone = (\n    resource: string | IResourceItem,\n    id: BaseKey,\n    type: HistoryType = \"push\",\n    meta: MetaDataQuery = {},\n  ) => {\n    handleUrl(cloneUrl(resource, id, meta), type);\n  };\n\n  const show = (\n    resource: string | IResourceItem,\n    id: BaseKey,\n    type: HistoryType = \"push\",\n    meta: MetaDataQuery = {},\n  ) => {\n    handleUrl(showUrl(resource, id, meta), type);\n  };\n\n  const list = (\n    resource: string | IResourceItem,\n    type: HistoryType = \"push\",\n    meta: MetaDataQuery = {},\n  ) => {\n    handleUrl(listUrl(resource, meta), type);\n  };\n\n  /**\n   * @deprecated Please use `useGo` hook instead.\n   */\n  const push = (path: string, ...rest: unknown[]) => {\n    if (routerType === \"legacy\") {\n      history.push(path, ...rest);\n    } else {\n      go({ to: path, type: \"push\" });\n    }\n  };\n\n  /**\n   * @deprecated Please use `useGo` hook instead.\n   */\n  const replace = (path: string, ...rest: unknown[]) => {\n    if (routerType === \"legacy\") {\n      history.replace(path, ...rest);\n    } else {\n      go({ to: path, type: \"replace\" });\n    }\n  };\n\n  /**\n   * @deprecated Please use `useBack` hook instead.\n   */\n  const goBack = () => {\n    if (routerType === \"legacy\") {\n      history.goBack();\n    } else {\n      back();\n    }\n  };\n\n  return {\n    create,\n    createUrl,\n    edit,\n    editUrl,\n    clone,\n    cloneUrl,\n    show,\n    showUrl,\n    list,\n    listUrl,\n    push,\n    replace,\n    goBack,\n  };\n};\n", "import warnOnce from \"warn-once\";\nimport { useMeta, useOne, useResourceParams } from \"@hooks\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\n\nimport type { UseShowProps, UseShowReturnType } from \"./types\";\nimport type { BaseKey, BaseRecord, HttpError } from \"../../contexts/data/types\";\n\nexport type {\n  UseShowProps,\n  UseShowReturnType,\n  useShowProps,\n  useShowReturnType,\n} from \"./types\";\n\n/**\n * `useShow` hook allows you to fetch the desired record.\n * It uses `getOne` method as query function from the dataProvider that is\n * passed to {@link https://refine.dev/docs/core/refine-component `<Refine>`}.\n *\n * @see {@link https://refine.dev/docs/data/hooks/use-show} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/core/interface-references/#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interface-references/#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/core/interface-references/#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\nexport const useShow = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  resource: resourceFromProp,\n  id,\n  meta,\n  metaData,\n  queryOptions,\n  overtimeOptions,\n  ...useOneProps\n}: UseShowProps<TQueryFnData, TError, TData> = {}): UseShowReturnType<\n  TData,\n  TError\n> => {\n  const {\n    resource,\n    identifier,\n    id: showId,\n    setId: setShowId,\n  } = useResourceParams({\n    id,\n    resource: resourceFromProp,\n  });\n\n  const getMeta = useMeta();\n\n  const combinedMeta = getMeta({\n    resource,\n    meta: pickNotDeprecated(meta, metaData),\n  });\n\n  warnOnce(\n    Boolean(resourceFromProp) && !showId,\n    idWarningMessage(identifier, showId),\n  );\n\n  const queryResult = useOne<TQueryFnData, TError, TData>({\n    resource: identifier,\n    id: showId ?? \"\",\n    queryOptions: {\n      enabled: showId !== undefined,\n      ...queryOptions,\n    },\n    meta: combinedMeta,\n    metaData: combinedMeta,\n    overtimeOptions,\n    ...useOneProps,\n  });\n\n  return {\n    queryResult,\n    query: queryResult,\n    showId,\n    setShowId,\n    overtime: queryResult.overtime,\n  };\n};\n\nconst idWarningMessage = (identifier?: string, id?: BaseKey) =>\n  `[useShow]: resource: \"${identifier}\", id: ${id} \\n\\nIf you don't use the \\`setShowId\\` method to set the \\`showId\\`, you should pass the \\`id\\` prop to \\`useShow\\`. Otherwise, \\`useShow\\` will not be able to infer the \\`id\\` from the current URL. \\n\\nSee https://refine.dev/docs/data/hooks/use-show/#resource`;\n", "import { useEffect, useState } from \"react\";\n\nimport chunk from \"lodash-es/chunk.js\";\nimport papaparse from \"papaparse\";\n\nimport {\n  importCSVMapper,\n  pickNotDeprecated,\n  sequentialPromises,\n} from \"@definitions\";\nimport { useCreate, useCreateMany, useMeta, useResource } from \"@hooks\";\n\nimport type {\n  BaseRecord,\n  HttpError,\n  MetaQuery,\n} from \"../../contexts/data/types\";\nimport type { UseCreateReturnType } from \"../../hooks/data/useCreate\";\nimport type { UseCreateManyReturnType } from \"../../hooks/data/useCreateMany\";\nimport type { MapDataFn } from \"../export/types\";\n\nexport type ImportSuccessResult<TVariables, TData> = {\n  request: TVariables[];\n  type: \"success\";\n  response: TData[];\n};\n\nexport type ImportErrorResult<TVariables> = {\n  request: TVariables[];\n  type: \"error\";\n  response: HttpError[];\n};\n\nexport type OnFinishParams<TVariables, TData> = {\n  succeeded: ImportSuccessResult<TVariables, TData>[];\n  errored: ImportErrorResult<TVariables>[];\n};\n\nexport type OnProgressParams = {\n  totalAmount: number;\n  processedAmount: number;\n};\n\nexport type ImportOptions<\n  TItem,\n  TVariables = any,\n  TData extends BaseRecord = BaseRecord,\n> = {\n  /**\n   * Resource name for API data interactions.\n   * @default Resource name that it reads from route\n   * @deprecated `resourceName` is deprecated. Use `resource` instead.\n   */\n  resourceName?: string;\n  /**\n   * Resource name for API data interactions.\n   * @default Resource name that it reads from route\n   */\n  resource?: string;\n  /**\n   * A mapping function that runs for every record. Mapped data will be included in the file contents.\n   */\n  mapData?: MapDataFn<TItem, TVariables>;\n  /**\n   * Custom Papa Parse options.\n   * @type [`ParseConfig`](https://www.papaparse.com/docs)\n   */\n  paparseOptions?: papaparse.ParseConfig;\n  /**\n   * Requests batch size. If it is 1, all records are sent one by one. By default, it is [`Number.MAX_SAFE_INTEGER`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER) to send all records in one batch. If it is more than 1, `createMany` should be implemented on DataProvider.\n   */\n  batchSize?: number;\n  /**\n   * Called with errors and successful responses when all requests are sent.\n   */\n  onFinish?: (results: OnFinishParams<TVariables, TData>) => void;\n  /**\n   *  Metadata query for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   *  Metadata query for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   *  A callback function that returns a current state of uploading process.\n   *\n   *  Ex: `percentage = onProgressParams.processedAmount / onProgressParams.totalAmount * 100`\n   */\n  onProgress?: (onProgressParams: OnProgressParams) => void;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   */\n  dataProviderName?: string;\n};\n\nexport type CreatedValuesType<TVariables, TData> =\n  | ImportSuccessResult<TVariables, TData>\n  | ImportErrorResult<TVariables>;\n\nexport type HandleChangeType<TVariables, TData> = (onChangeParams: {\n  file: Partial<File>;\n}) => Promise<CreatedValuesType<TVariables, TData>[]>;\n\nexport type UseImportInputPropsType = {\n  type: \"file\";\n  accept: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport type UseImportReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TVariables = {},\n  TError extends HttpError = HttpError,\n> = {\n  inputProps: UseImportInputPropsType;\n  mutationResult:\n    | UseCreateReturnType<TData, TError, TVariables>\n    | UseCreateManyReturnType<TData, TError, TVariables>;\n  isLoading: boolean;\n  handleChange: HandleChangeType<TVariables, TData>;\n};\n\n/**\n * `useImport` hook allows you to handle your csv import logic easily.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useImport} for more details.\n *\n * @typeParam TItem - Interface of parsed csv data\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useImport = <\n  TItem = any,\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = any,\n>({\n  resourceName,\n  resource: resourceFromProps,\n  mapData = (item) => item as unknown as TVariables,\n  paparseOptions,\n  batchSize = Number.MAX_SAFE_INTEGER,\n  onFinish,\n  meta,\n  metaData,\n  onProgress,\n  dataProviderName,\n}: ImportOptions<TItem, TVariables, TData> = {}): UseImportReturnType<\n  TData,\n  TVariables,\n  TError\n> => {\n  const [processedAmount, setProcessedAmount] = useState<number>(0);\n  const [totalAmount, setTotalAmount] = useState<number>(0);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { resource, identifier } = useResource(\n    resourceFromProps ?? resourceName,\n  );\n\n  const getMeta = useMeta();\n\n  const createMany = useCreateMany<TData, TError, TVariables>();\n  const create = useCreate<TData, TError, TVariables>();\n\n  const combinedMeta = getMeta({\n    resource,\n    meta: pickNotDeprecated(meta, metaData),\n  });\n\n  let mutationResult:\n    | UseCreateReturnType<TData, TError, TVariables>\n    | UseCreateManyReturnType<TData, TError, TVariables>;\n\n  if (batchSize === 1) {\n    mutationResult = create;\n  } else {\n    mutationResult = createMany;\n  }\n\n  const handleCleanup = () => {\n    setTotalAmount(0);\n    setProcessedAmount(0);\n    setIsLoading(false);\n  };\n\n  const handleFinish = (\n    createdValues: CreatedValuesType<TVariables, TData>[],\n  ) => {\n    const result = {\n      succeeded: createdValues.filter(\n        (item) => item.type === \"success\",\n      ) as unknown as ImportSuccessResult<TVariables, TData>[],\n      errored: createdValues.filter(\n        (item) => item.type === \"error\",\n      ) as unknown as ImportErrorResult<TVariables>[],\n    };\n\n    onFinish?.(result);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    onProgress?.({ totalAmount, processedAmount });\n  }, [totalAmount, processedAmount]);\n\n  const handleChange: HandleChangeType<TVariables, TData> = ({ file }) => {\n    handleCleanup();\n    return new Promise<CreatedValuesType<TVariables, TData>[]>((resolve) => {\n      setIsLoading(true);\n      papaparse.parse(file as any, {\n        complete: async ({ data }: { data: unknown[][] }) => {\n          const values = importCSVMapper(data, mapData);\n\n          setTotalAmount(values.length);\n\n          if (batchSize === 1) {\n            // Create Processor Functions\n            const valueFns = values.map((value) => {\n              const fn = async () => {\n                const response = await create.mutateAsync({\n                  resource: identifier ?? \"\",\n                  values: value,\n                  successNotification: false,\n                  errorNotification: false,\n                  dataProviderName,\n                  meta: combinedMeta,\n                  metaData: combinedMeta,\n                });\n\n                return { response, value };\n              };\n              return fn;\n            });\n            // Sequentially run processor functions and process resolves/rejects\n            const createdValues = await sequentialPromises(\n              valueFns,\n              ({ response, value }) => {\n                setProcessedAmount((currentAmount) => {\n                  return currentAmount + 1;\n                });\n\n                return {\n                  response: [response.data],\n                  type: \"success\",\n                  request: [value],\n                } as ImportSuccessResult<TVariables, TData>;\n              },\n              (error: HttpError, index) => {\n                return {\n                  response: [error],\n                  type: \"error\",\n                  request: [values[index]],\n                } as ImportErrorResult<TVariables>;\n              },\n            );\n            // Resolve with created values\n            resolve(createdValues);\n          } else {\n            // Create Chunks\n            const chunks = chunk(values, batchSize);\n            // Create Chunk Processor Functions\n            const chunkedFns = chunks.map((chunkedValues) => {\n              const fn = async () => {\n                const response = await createMany.mutateAsync({\n                  resource: identifier ?? \"\",\n                  values: chunkedValues,\n                  successNotification: false,\n                  errorNotification: false,\n                  dataProviderName,\n                  meta: combinedMeta,\n                  metaData: combinedMeta,\n                });\n\n                return {\n                  response,\n                  value: chunkedValues,\n                  currentBatchLength: chunkedValues.length,\n                };\n              };\n\n              return fn;\n            });\n            // Sequentially run chunked functions and process resolves/rejects\n            const createdValues = await sequentialPromises(\n              chunkedFns,\n              ({ response, currentBatchLength, value }) => {\n                setProcessedAmount((currentAmount) => {\n                  return currentAmount + currentBatchLength;\n                });\n\n                return {\n                  response: response.data,\n                  type: \"success\",\n                  request: value,\n                } as ImportSuccessResult<TVariables, TData>;\n              },\n              (error: HttpError, index) => {\n                return {\n                  response: [error],\n                  type: \"error\",\n                  request: chunks[index],\n                } as ImportErrorResult<TVariables>;\n              },\n            );\n            // resolve with all created values\n            resolve(createdValues);\n          }\n        },\n\n        ...paparseOptions,\n      });\n    }).then((createdValues) => {\n      handleFinish(createdValues);\n      return createdValues;\n    });\n  };\n\n  return {\n    inputProps: {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.files && event.target.files.length > 0) {\n          handleChange({ file: event.target.files[0] });\n        }\n      },\n    },\n    mutationResult,\n    isLoading,\n    handleChange,\n  };\n};\n", "import { useCallback, useState } from \"react\";\n\nexport type useModalReturnType = {\n  visible: boolean;\n  show: () => void;\n  close: () => void;\n};\n\nexport type useModalProps = {\n  /**\n   * Initial state of the modal\n   */\n  defaultVisible?: boolean;\n};\n\nexport const useModal = ({\n  defaultVisible = false,\n}: useModalProps = {}): useModalReturnType => {\n  const [visible, setVisible] = useState(defaultVisible);\n\n  const show = useCallback(() => setVisible(true), [visible]);\n  const close = useCallback(() => setVisible(false), [visible]);\n\n  return {\n    visible,\n    show,\n    close,\n  };\n};\n", "import type { IResourceItem } from \"../../../contexts/resource/types\";\nimport type { Action } from \"../../../contexts/router/types\";\nimport { useGetToPath } from \"../use-get-to-path\";\n\ntype UseToPathParams = {\n  resource?: IResourceItem;\n  action: Action;\n  meta?: Record<string, unknown>;\n  legacy?: boolean;\n};\n\n/**\n * Returns the route for a given action and resource.\n * If resource is not provided, it will use the resource from the route.\n * If the resource is not found, it will return undefined.\n * If the action is not found, it will return undefined.\n * `meta` can be provided to compose the routes with parameters. (Can be used for nested routes.)\n */\nexport const useToPath = ({\n  resource,\n  action,\n  meta,\n  legacy,\n}: UseToPathParams): string | undefined => {\n  const getToPath = useGetToPath();\n\n  return getToPath({ resource, action, meta, legacy });\n};\n", "import React, { type Ref, forwardRef, useContext } from \"react\";\nimport { useGo } from \"@hooks/router\";\nimport { RouterContext } from \"@contexts/router\";\nimport type { GoConfigWithResource } from \"../../hooks/router/use-go\";\nimport warnOnce from \"warn-once\";\n\ntype LinkPropsWithGo = {\n  go: Omit<GoConfigWithResource, \"type\">;\n};\n\ntype LinkPropsWithTo = {\n  to: string;\n};\n\nexport type LinkProps<TProps = {}> = React.PropsWithChildren<\n  (LinkPropsWithGo | LinkPropsWithTo) & TProps\n>;\n\n/**\n * @param to The path to navigate to.\n * @param go The useGo.go params to navigate to. If `to` provided, this will be ignored.\n * @returns routerProvider.Link if it is provided, otherwise an anchor tag.\n */\nconst LinkComponent = <TProps = {}>(\n  props: LinkProps<TProps>,\n  ref: Ref<Element>,\n) => {\n  const routerContext = useContext(RouterContext);\n  const LinkFromContext = routerContext?.Link;\n\n  const goFunction = useGo();\n\n  let resolvedTo = \"\";\n  if (\"go\" in props) {\n    if (!routerContext?.go) {\n      warnOnce(\n        true,\n        \"[Link]: `routerProvider` is not found. To use `go`, Please make sure that you have provided the `routerProvider` for `<Refine />` https://refine.dev/docs/routing/router-provider/ \\n\",\n      );\n    }\n    resolvedTo = goFunction({ ...props.go, type: \"path\" }) as string;\n  }\n  if (\"to\" in props) {\n    resolvedTo = props.to;\n  }\n\n  if (LinkFromContext) {\n    return (\n      <LinkFromContext\n        ref={ref}\n        {...props}\n        to={resolvedTo}\n        // This is a workaround to avoid passing `go` to the Link component.\n        go={undefined}\n      />\n    );\n  }\n  return (\n    <a\n      ref={ref}\n      href={resolvedTo}\n      {...props}\n      // This is a workaround to avoid passing `go` and `to` to the anchor tag.\n      to={undefined}\n      go={undefined}\n    />\n  );\n};\n\nexport const Link = forwardRef(LinkComponent) as <T = {}>(\n  props: LinkProps<T> & { ref?: Ref<Element> },\n) => ReturnType<typeof LinkComponent>;\n", "import { Link } from \"../../../components/link\";\n\nexport const useLink = () => {\n  return Link;\n};\n", "import { useContext } from \"react\";\n\nimport { LegacyRouterContext, defaultProvider } from \"@contexts/router/legacy\";\n\nexport const useRouterContext = () => {\n  const routerContextValues = useContext(LegacyRouterContext);\n\n  const { useHistory, useLocation, useParams, Prompt, Link, routes } =\n    routerContextValues ?? defaultProvider;\n\n  return {\n    useHistory,\n    useLocation,\n    useParams,\n    Prompt,\n    Link,\n    routes,\n  };\n};\n", "import React, { type PropsWithChildren } from \"react\";\n\nimport type { ILegacyRouterContext } from \"./types\";\n\nexport const defaultProvider: ILegacyRouterContext = {\n  useHistory: () => false,\n  useLocation: () => false,\n  useParams: () => ({}) as any,\n  Prompt: () => null,\n  Link: () => null,\n};\n\nexport const LegacyRouterContext =\n  React.createContext<ILegacyRouterContext>(defaultProvider);\n\nexport const LegacyRouterContextProvider: React.FC<\n  PropsWithChildren<Partial<ILegacyRouterContext>>\n> = ({\n  children,\n  useHistory,\n  useLocation,\n  useParams,\n  Prompt,\n  Link,\n  routes,\n}) => {\n  return (\n    <LegacyRouterContext.Provider\n      value={{\n        useHistory: useHistory ?? defaultProvider.useHistory,\n        useLocation: useLocation ?? defaultProvider.useLocation,\n        useParams: useParams ?? defaultProvider.useParams,\n        Prompt: Prompt ?? defaultProvider.Prompt,\n        Link: Link ?? defaultProvider.Link,\n        routes: routes ?? defaultProvider.routes,\n      }}\n    >\n      {children}\n    </LegacyRouterContext.Provider>\n  );\n};\n", "import { useContext } from \"react\";\n\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseQueryOptions,\n  type UseQueryResult,\n  useQuery,\n} from \"@tanstack/react-query\";\n\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport type {\n  CanParams,\n  CanReturnType,\n} from \"../../../contexts/accessControl/types\";\n\nexport type UseCanProps = CanParams & {\n  /**\n   * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n   */\n  queryOptions?: UseQueryOptions<CanReturnType>;\n};\n\n/**\n * `useCan` uses the `can` as the query function for `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`}. It takes the parameters that `can` takes. It can also be configured with `queryOptions` for `useQuery`. Returns the result of `useQuery`.\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/accessControl/useCan} for more details.\n *\n * @typeParam CanParams {@link https://refine.dev/docs/core/interfaceReferences#canparams}\n * @typeParam CanReturnType {@link https://refine.dev/docs/core/interfaceReferences#canreturntype}\n *\n */\nexport const useCan = ({\n  action,\n  resource,\n  params,\n  queryOptions: hookQueryOptions,\n}: UseCanProps): UseQueryResult<CanReturnType> => {\n  const { can, options: globalOptions } = useContext(AccessControlContext);\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const { queryOptions: globalQueryOptions } = globalOptions || {};\n\n  const mergedQueryOptions = {\n    ...globalQueryOptions,\n    ...hookQueryOptions,\n  };\n\n  /**\n   * Since `react-query` stringifies the query keys, it will throw an error for a circular dependency if we include `React.ReactNode` elements inside the keys.\n   * The feature in #2220(https://github.com/refinedev/refine/issues/2220) includes such change and to fix this, we need to remove `icon` property in the `resource`\n   */\n  const { resource: _resource, ...paramsRest } = params ?? {};\n\n  const sanitizedResource = sanitizeResource(_resource);\n\n  const queryResponse = useQuery<CanReturnType>({\n    queryKey: keys()\n      .access()\n      .resource(resource)\n      .action(action)\n      .params({\n        params: { ...paramsRest, resource: sanitizedResource },\n        enabled: mergedQueryOptions?.enabled,\n      })\n      .get(preferLegacyKeys),\n    // Enabled check for `can` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n    queryFn: () =>\n      can?.({\n        action,\n        resource,\n        params: { ...paramsRest, resource: sanitizedResource },\n      }) ?? Promise.resolve({ can: true }),\n    enabled: typeof can !== \"undefined\",\n    ...mergedQueryOptions,\n    meta: {\n      ...mergedQueryOptions?.meta,\n      ...getXRay(\"useCan\", preferLegacyKeys, resource, [\n        \"useButtonCanAccess\",\n        \"useNavigationButton\",\n      ]),\n    },\n    retry: false,\n  });\n\n  return typeof can === \"undefined\"\n    ? ({ data: { can: true } } as typeof queryResponse)\n    : queryResponse;\n};\n", "import React, { type PropsWithChildren } from \"react\";\n\nimport type {\n  IAccessControlContext,\n  IAccessControlContextReturnType,\n} from \"./types\";\n\n/** @deprecated default value for access control context has no use and is an empty object. */\nexport const defaultAccessControlContext = {} as IAccessControlContext;\n\nexport const AccessControlContext =\n  React.createContext<IAccessControlContextReturnType>({\n    options: {\n      buttons: { enableAccessControl: true, hideIfUnauthorized: false },\n    },\n  });\n\nexport const AccessControlContextProvider: React.FC<\n  PropsWithChildren<IAccessControlContext>\n> = ({ can, children, options }) => {\n  return (\n    <AccessControlContext.Provider\n      value={{\n        can,\n        options: options\n          ? {\n              ...options,\n              buttons: {\n                enableAccessControl: true,\n                hideIfUnauthorized: false,\n                ...options.buttons,\n              },\n            }\n          : {\n              buttons: {\n                enableAccessControl: true,\n                hideIfUnauthorized: false,\n              },\n              queryOptions: undefined,\n            },\n      }}\n    >\n      {children}\n    </AccessControlContext.Provider>\n  );\n};\n", "import type { IResourceItem } from \"../../../contexts/resource/types\";\n\n/**\n * Remove all properties that are non-serializable from a resource object.\n */\nexport const sanitizeResource = (\n  resource?: Partial<IResourceItem> &\n    Required<Pick<IResourceItem, \"name\">> & { children?: unknown },\n):\n  | (Partial<IResourceItem> & Required<Pick<IResourceItem, \"name\">>)\n  | undefined => {\n  if (!resource) {\n    return undefined;\n  }\n\n  const {\n    icon,\n    list,\n    edit,\n    create,\n    show,\n    clone,\n    children,\n    meta,\n    options,\n    ...restResource\n  } = resource;\n\n  const { icon: _metaIcon, ...restMeta } = meta ?? {};\n  const { icon: _optionsIcon, ...restOptions } = options ?? {};\n\n  return {\n    ...restResource,\n    ...(meta ? { meta: restMeta } : {}),\n    ...(options ? { options: restOptions } : {}),\n  };\n};\n", "import React from \"react\";\n\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\n\nimport type { IAccessControlContext } from \"../../contexts/accessControl/types\";\n\nexport const useCanWithoutCache = (): IAccessControlContext => {\n  const { can: canFromContext } = React.useContext(AccessControlContext);\n\n  const can = React.useMemo(() => {\n    if (!canFromContext) {\n      return undefined;\n    }\n\n    const canWithSanitizedResource: NonNullable<typeof canFromContext> =\n      async ({ params, ...rest }) => {\n        const sanitizedResource = params?.resource\n          ? sanitizeResource(params.resource)\n          : undefined;\n\n        return canFromContext({\n          ...rest,\n          ...(params\n            ? {\n                params: {\n                  ...params,\n                  resource: sanitizedResource,\n                },\n              }\n            : {}),\n        });\n      };\n\n    return canWithSanitizedResource;\n  }, [canFromContext]);\n\n  return { can };\n};\n", "import { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\n\nimport type {\n  QueryObserverResult,\n  UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport debounce from \"lodash-es/debounce.js\";\nimport get from \"lodash-es/get.js\";\nimport uniqBy from \"lodash-es/uniqBy.js\";\n\nimport { pickNotDeprecated } from \"@definitions/helpers\";\nimport { useList, useMany, useMeta } from \"@hooks\";\n\nimport type {\n  BaseKey,\n  BaseOption,\n  BaseRecord,\n  CrudFilter,\n  CrudSort,\n  GetListResponse,\n  GetManyResponse,\n  HttpError,\n  MetaQuery,\n  Pagination,\n  Prettify,\n} from \"../../contexts/data/types\";\nimport type { LiveModeProps } from \"../../contexts/live/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport type { BaseListProps } from \"../data/useList\";\nimport { useResource } from \"../resource/useResource/index\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nexport type SelectedOptionsOrder = \"in-place\" | \"selected-first\";\n\nexport type UseSelectProps<TQueryFnData, TError, TData> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource: string;\n  /**\n   * Set the option's label value\n   * @default `\"title\"`\n   */\n  optionLabel?:\n    | (keyof TData extends string ? keyof TData : never)\n    | ((item: TData) => string);\n  /**\n   * Set the option's value\n   * @default `\"id\"`\n   */\n  optionValue?:\n    | (keyof TData extends string ? keyof TData : never)\n    | ((item: TData) => string);\n  /**\n   * Field name to search for.\n   * @description If provided `optionLabel` is a string, uses `optionLabel`'s value.\n   * @default `\"title\"`\n   * @example\n   * // when optionLabel is string.\n   * useSelect({ optionLabel: \"name\" })\n   * // uses `name` field.\n   * @example\n   * // when optionLabel is function.\n   * useSelect({ optionLabel: (field) => field.description })\n   * // uses `title`, since `optionLabel` is a function.\n   */\n  searchField?: keyof TData extends string ? keyof TData : never;\n  /**\n   * Allow us to sort the options\n   * @deprecated Use `sorters` instead\n   */\n  sort?: CrudSort[];\n  /**\n   * Allow us to sort the options\n   */\n  sorters?: CrudSort[];\n  /**\n   * Resource name for API data interactions\n   */\n  filters?: CrudFilter[];\n  /**\n   * Adds extra `options`\n   */\n  defaultValue?: BaseKey | BaseKey[];\n  /**\n   * Allow us to sort the selection options\n   * @default `in-place`\n   */\n  selectedOptionsOrder?: SelectedOptionsOrder;\n  /**\n   * The number of milliseconds to delay\n   * @default `300`\n   */\n  debounce?: number;\n  /**\n   * react-query [useQuery](https://react-query.tanstack.com/reference/useQuery) options\n   */\n  queryOptions?: UseQueryOptions<\n    GetListResponse<TQueryFnData>,\n    TError,\n    GetListResponse<TData>\n  >;\n  /**\n   * Pagination option from [`useList()`](/docs/api-reference/core/hooks/data/useList/)\n   * @type {  current?: number; pageSize?: number;}\n   * @default `undefined`\n   */\n  pagination?: Prettify<\n    Omit<Pagination, \"mode\"> & {\n      /**\n       * Whether to use server side pagination or not.\n       * @default \"off\"\n       */\n      mode?: Pagination[\"mode\"];\n    }\n  >;\n  /**\n   * Disabling pagination option from [`useList()`](/docs/api-reference/core/hooks/data/useList/)\n   * @type boolean\n   * @default `false`\n   * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n   */\n  hasPagination?: boolean;\n  /**\n   * react-query [useQuery](https://react-query.tanstack.com/reference/useQuery) options\n   */\n  defaultValueQueryOptions?: UseQueryOptions<\n    GetManyResponse<TQueryFnData>,\n    TError\n  >;\n  /**\n   * If defined, this callback allows us to override all filters for every search request.\n   * @default `undefined`\n   */\n  onSearch?: (value: string) => CrudFilter[];\n  /**\n   * Additional meta data to pass to the `useMany` from the data provider\n   */\n  meta?: MetaQuery;\n  /**\n   * Additional meta data to pass to the `useMany` from the data provider\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default `default`\n   */\n  dataProviderName?: string;\n  /**\n   * Amount of records to fetch in select box list.\n   * @deprecated use [`pagination`](https://refine.dev/docs/api-reference/core/interfaceReferences/#pagination) instead\n   * @default `undefined`\n   */\n  fetchSize?: number;\n} & SuccessErrorNotification<\n  GetListResponse<TData>,\n  TError,\n  Prettify<BaseListProps>\n> &\n  LiveModeProps &\n  UseLoadingOvertimeOptionsProps;\n\nexport type UseSelectReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TOption extends BaseOption = BaseOption,\n> = {\n  query: QueryObserverResult<GetListResponse<TData>, TError>;\n  defaultValueQuery: QueryObserverResult<GetManyResponse<TData>>;\n  /**\n   * @deprecated Use `query` instead\n   */\n  queryResult: QueryObserverResult<GetListResponse<TData>, TError>;\n  /**\n   * @deprecated Use `defaultValueQuery` instead\n   */\n  defaultValueQueryResult: QueryObserverResult<GetManyResponse<TData>>;\n  onSearch: (value: string) => void;\n  options: TOption[];\n} & UseLoadingOvertimeReturnType;\n\n/**\n * `useSelect` hook is used to fetch data from the dataProvider and return the options for the select box.\n *\n * It uses `getList` method as query function from the dataProvider that is\n * passed to {@link https://refine.dev/docs/api-reference/core/components/refine-config/ `<Refine>`}.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useSelect} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useSelect = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n  TOption extends BaseOption = BaseOption,\n>(\n  props: UseSelectProps<TQueryFnData, TError, TData>,\n): UseSelectReturnType<TData, TError, TOption> => {\n  const [search, setSearch] = useState<CrudFilter[]>([]);\n  const [options, setOptions] = useState<TOption[]>([]);\n  const [selectedOptions, setSelectedOptions] = useState<TOption[]>([]);\n\n  const {\n    resource: resourceFromProps,\n    sort,\n    sorters,\n    filters = [],\n    optionLabel = \"title\",\n    optionValue = \"id\",\n    searchField = typeof optionLabel === \"string\" ? optionLabel : \"title\",\n    debounce: debounceValue = 300,\n    successNotification,\n    errorNotification,\n    defaultValueQueryOptions: defaultValueQueryOptionsFromProps,\n    queryOptions,\n    fetchSize,\n    pagination,\n    hasPagination = false,\n    liveMode,\n    defaultValue = [],\n    selectedOptionsOrder = \"in-place\",\n    onLiveEvent,\n    onSearch: onSearchFromProp,\n    liveParams,\n    meta,\n    metaData,\n    dataProviderName,\n    overtimeOptions,\n  } = props;\n\n  const getOptionLabel = useCallback(\n    (item: TData) => {\n      if (typeof optionLabel === \"string\") {\n        return get(item, optionLabel);\n      }\n\n      return optionLabel(item);\n    },\n    [optionLabel],\n  );\n\n  const getOptionValue = useCallback(\n    (item: TData) => {\n      if (typeof optionValue === \"string\") {\n        return get(item, optionValue);\n      }\n\n      return optionValue(item);\n    },\n    [optionValue],\n  );\n\n  const { resource, identifier } = useResource(resourceFromProps);\n\n  const getMeta = useMeta();\n\n  const combinedMeta = getMeta({\n    resource,\n    meta: pickNotDeprecated(meta, metaData),\n  });\n\n  const defaultValues = Array.isArray(defaultValue)\n    ? defaultValue\n    : [defaultValue];\n\n  const defaultValueQueryOnSuccess = useCallback(\n    (data: GetManyResponse<TData>) => {\n      setSelectedOptions(\n        data.data.map(\n          (item) =>\n            ({\n              label: getOptionLabel(item),\n              value: getOptionValue(item),\n            }) as TOption,\n        ),\n      );\n    },\n    [optionLabel, optionValue],\n  );\n\n  const defaultValueQueryOptions =\n    defaultValueQueryOptionsFromProps ?? (queryOptions as any);\n\n  const defaultValueQueryResult = useMany<TQueryFnData, TError, TData>({\n    resource: identifier,\n    ids: defaultValues,\n    queryOptions: {\n      ...defaultValueQueryOptions,\n      enabled:\n        defaultValues.length > 0 && (defaultValueQueryOptions?.enabled ?? true),\n      onSuccess: (data) => {\n        defaultValueQueryOnSuccess(data);\n        defaultValueQueryOptions?.onSuccess?.(data);\n      },\n    },\n    overtimeOptions: { enabled: false },\n    meta: combinedMeta,\n    metaData: combinedMeta,\n    liveMode: \"off\",\n    dataProviderName,\n  });\n\n  const defaultQueryOnSuccess = useCallback(\n    (data: GetListResponse<TData>) => {\n      setOptions(\n        data.data.map(\n          (item) =>\n            ({\n              label: getOptionLabel(item),\n              value: getOptionValue(item),\n            }) as TOption,\n        ),\n      );\n    },\n    [optionLabel, optionValue],\n  );\n\n  const queryResult = useList<TQueryFnData, TError, TData>({\n    resource: identifier,\n    sorters: pickNotDeprecated(sorters, sort),\n    filters: filters.concat(search),\n    pagination: {\n      current: pagination?.current,\n      pageSize: pagination?.pageSize ?? fetchSize,\n      mode: pagination?.mode,\n    },\n    hasPagination,\n    queryOptions: {\n      ...queryOptions,\n      onSuccess: (data) => {\n        defaultQueryOnSuccess(data);\n        queryOptions?.onSuccess?.(data);\n      },\n    },\n    overtimeOptions: { enabled: false },\n    successNotification,\n    errorNotification,\n    meta: combinedMeta,\n    metaData: combinedMeta,\n    liveMode,\n    liveParams,\n    onLiveEvent,\n    dataProviderName,\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    ...overtimeOptions,\n    isLoading: queryResult.isFetching || defaultValueQueryResult.isFetching,\n  });\n\n  const combinedOptions = useMemo(\n    () =>\n      uniqBy(\n        selectedOptionsOrder === \"in-place\"\n          ? [...options, ...selectedOptions]\n          : [...selectedOptions, ...options],\n        \"value\",\n      ),\n    [options, selectedOptions],\n  );\n\n  /**\n   * To avoid any changes in the `onSearch` callback,\n   * We're storing `onSearchFromProp` in a ref and accessing it in the `onSearch` callback.\n   */\n  const onSearchFromPropRef = useRef(onSearchFromProp);\n\n  const onSearch = useMemo(() => {\n    return debounce((value: string) => {\n      if (onSearchFromPropRef.current) {\n        setSearch(onSearchFromPropRef.current(value));\n        return;\n      }\n\n      if (!value) {\n        setSearch([]);\n        return;\n      }\n\n      setSearch([\n        {\n          field: searchField,\n          operator: \"contains\",\n          value,\n        },\n      ]);\n    }, debounceValue);\n  }, [searchField, debounceValue]);\n\n  useEffect(() => {\n    onSearchFromPropRef.current = onSearchFromProp;\n  }, [onSearchFromProp]);\n\n  return {\n    queryResult,\n    defaultValueQueryResult,\n    query: queryResult,\n    defaultValueQuery: defaultValueQueryResult,\n    options: combinedOptions,\n    onSearch,\n    overtime: { elapsedTime },\n  };\n};\n", "import React, { useState, useEffect, useCallback } from \"react\";\n\nimport type {\n  QueryObserverResult,\n  UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport differenceWith from \"lodash-es/differenceWith.js\";\nimport isEqual from \"lodash-es/isEqual.js\";\nimport qs from \"qs\";\nimport warnOnce from \"warn-once\";\n\nimport { pickNotDeprecated } from \"@definitions/helpers\";\nimport {\n  parseTableParams,\n  setInitialFilters,\n  setInitialSorters,\n  stringifyTableParams,\n  unionFilters,\n  unionSorters,\n} from \"@definitions/table\";\nimport {\n  useGo,\n  useList,\n  useLiveMode,\n  useMeta,\n  useNavigation,\n  useParsed,\n  useResource,\n  useRouterContext,\n  useRouterType,\n  useSyncWithLocation,\n} from \"@hooks\";\n\nimport type {\n  BaseRecord,\n  CrudFilter,\n  CrudSort,\n  GetListResponse,\n  HttpError,\n  MetaQuery,\n  Pagination,\n  Prettify,\n} from \"../../contexts/data/types\";\nimport type { LiveModeProps } from \"../../contexts/live/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport type { BaseListProps } from \"../data/useList\";\nimport type {\n  UseLoadingOvertimeOptionsProps,\n  UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\ntype SetFilterBehavior = \"merge\" | \"replace\";\n\nexport type useTableProps<TQueryFnData, TError, TData> = {\n  /**\n   * Resource name for API data interactions\n   * @default Resource name that it reads from route\n   */\n  resource?: string;\n  /**\n   * Configuration for pagination\n   */\n  pagination?: Pagination;\n  /**\n   * Initial page index\n   * @default 1\n   * @deprecated `initialCurrent` property is deprecated. Use `pagination.current` instead.\n   */\n  initialCurrent?: number;\n  /**\n   * Initial number of items per page\n   * @default 10\n   * @deprecated `initialPageSize` property is deprecated. Use `pagination.pageSize` instead.\n   */\n  initialPageSize?: number;\n  /**\n   * Sort configs\n   */\n  sorters?: {\n    /**\n     * Initial sorter state\n     */\n    initial?: CrudSort[];\n    /**\n     * Default and unchangeable sorter state\n     *  @default `[]`\n     */\n    permanent?: CrudSort[];\n    /**\n     * Whether to use server side sorting or not.\n     * @default \"server\"\n     */\n    mode?: \"server\" | \"off\";\n  };\n  /**\n   * Initial sorter state\n   * @deprecated `initialSorter` property is deprecated. Use `sorters.initial` instead.\n   */\n  initialSorter?: CrudSort[];\n  /**\n   * Default and unchangeable sorter state\n   *  @default `[]`\n   *  @deprecated `permanentSorter` property is deprecated. Use `sorters.permanent` instead.\n   */\n  permanentSorter?: CrudSort[];\n  /**\n   * Filter configs\n   */\n  filters?: {\n    /**\n     * Initial filter state\n     */\n    initial?: CrudFilter[];\n    /**\n     * Default and unchangeable filter state\n     *  @default `[]`\n     */\n    permanent?: CrudFilter[];\n    /**\n     * Default behavior of the `setFilters` function\n     * @default `\"merge\"`\n     */\n    defaultBehavior?: SetFilterBehavior;\n    /**\n     * Whether to use server side filter or not.\n     * @default \"server\"\n     */\n    mode?: \"server\" | \"off\";\n  };\n  /**\n   * Initial filter state\n   * @deprecated `initialFilter` property is deprecated. Use `filters.initial` instead.\n   */\n  initialFilter?: CrudFilter[];\n  /**\n   * Default and unchangeable filter state\n   * @default `[]`\n   * @deprecated `permanentFilter` property is deprecated. Use `filters.permanent` instead.\n   */\n  permanentFilter?: CrudFilter[];\n  /**\n   * Default behavior of the `setFilters` function\n   * @default `\"merge\"`\n   * @deprecated `defaultSetFilterBehavior` property is deprecated. Use `filters.defaultBehavior` instead.\n   */\n  defaultSetFilterBehavior?: SetFilterBehavior;\n  /**\n   * Whether to use server side pagination or not.\n   * @default `true`\n   * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n   */\n  hasPagination?: boolean;\n  /**\n   * Sortings, filters, page index and records shown per page are tracked by browser history\n   * @default Value set in [Refine](/docs/api-reference/core/components/refine-config/#syncwithlocation). If a custom resource is given, it will be `false`\n   */\n  syncWithLocation?: boolean;\n  /**\n   * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n   */\n  queryOptions?: UseQueryOptions<\n    GetListResponse<TQueryFnData>,\n    TError,\n    GetListResponse<TData>\n  >;\n  /**\n   * Metadata query for dataProvider\n   */\n  meta?: MetaQuery;\n  /**\n   * Metadata query for dataProvider\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   */\n  dataProviderName?: string;\n} & SuccessErrorNotification<\n  GetListResponse<TData>,\n  TError,\n  Prettify<BaseListProps>\n> &\n  LiveModeProps &\n  UseLoadingOvertimeOptionsProps;\n\ntype ReactSetState<T> = React.Dispatch<React.SetStateAction<T>>;\n\ntype SyncWithLocationParams = {\n  pagination: { current?: number; pageSize?: number };\n  /**\n   * @deprecated `sorter` is deprecated. Use `sorters` instead.\n   */\n  sorter?: CrudSort[];\n  sorters: CrudSort[];\n  filters: CrudFilter[];\n};\n\nexport type useTableReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n> = {\n  tableQuery: QueryObserverResult<GetListResponse<TData>, TError>;\n  /**\n   * @deprecated `tableQueryResult` is deprecated. Use `tableQuery` instead.\n   */\n  tableQueryResult: QueryObserverResult<GetListResponse<TData>, TError>;\n  /**\n   * @deprecated `sorter` is deprecated. Use `sorters` instead.\n   */\n  sorter: CrudSort[];\n  sorters: CrudSort[];\n  /**\n   * @deprecated `setSorter` is deprecated. Use `setSorters` instead.\n   */\n  setSorter: (sorter: CrudSort[]) => void;\n  setSorters: (sorter: CrudSort[]) => void;\n  filters: CrudFilter[];\n  setFilters: ((filters: CrudFilter[], behavior?: SetFilterBehavior) => void) &\n    ((setter: (prevFilters: CrudFilter[]) => CrudFilter[]) => void);\n  createLinkForSyncWithLocation: (params: SyncWithLocationParams) => string;\n  current: number;\n  setCurrent: ReactSetState<useTableReturnType[\"current\"]>;\n  pageSize: number;\n  setPageSize: ReactSetState<useTableReturnType[\"pageSize\"]>;\n  pageCount: number;\n} & UseLoadingOvertimeReturnType;\n\n/**\n * By using useTable, you are able to get properties that are compatible with\n * Ant Design {@link https://ant.design/components/table/ `<Table>`} component.\n * All features such as sorting, filtering and pagination comes as out of box.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useTable} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nconst defaultPermanentFilter: CrudFilter[] = [];\nconst defaultPermanentSorter: CrudSort[] = [];\n\nexport function useTable<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  initialCurrent,\n  initialPageSize,\n  hasPagination = true,\n  pagination,\n  initialSorter,\n  permanentSorter = defaultPermanentSorter,\n  defaultSetFilterBehavior,\n  initialFilter,\n  permanentFilter = defaultPermanentFilter,\n  filters: filtersFromProp,\n  sorters: sortersFromProp,\n  syncWithLocation: syncWithLocationProp,\n  resource: resourceFromProp,\n  successNotification,\n  errorNotification,\n  queryOptions,\n  liveMode: liveModeFromProp,\n  onLiveEvent,\n  liveParams,\n  meta,\n  metaData,\n  dataProviderName,\n  overtimeOptions,\n}: useTableProps<TQueryFnData, TError, TData> = {}): useTableReturnType<\n  TData,\n  TError\n> {\n  const { syncWithLocation: syncWithLocationContext } = useSyncWithLocation();\n\n  const syncWithLocation = syncWithLocationProp ?? syncWithLocationContext;\n\n  const liveMode = useLiveMode(liveModeFromProp);\n\n  const routerType = useRouterType();\n  const { useLocation } = useRouterContext();\n  const { search, pathname } = useLocation();\n  const getMeta = useMeta();\n  const parsedParams = useParsed();\n\n  const isServerSideFilteringEnabled =\n    (filtersFromProp?.mode || \"server\") === \"server\";\n  const isServerSideSortingEnabled =\n    (sortersFromProp?.mode || \"server\") === \"server\";\n  const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n  const isPaginationEnabled =\n    (pagination?.mode ?? hasPaginationString) !== \"off\";\n  const prefferedCurrent = pickNotDeprecated(\n    pagination?.current,\n    initialCurrent,\n  );\n  const prefferedPageSize = pickNotDeprecated(\n    pagination?.pageSize,\n    initialPageSize,\n  );\n  const preferredMeta = pickNotDeprecated(meta, metaData);\n\n  /** `parseTableParams` is redundant with the new routing */\n  // We want to always parse the query string even when syncWithLocation is\n  // deactivated, for hotlinking to work properly\n  const { parsedCurrent, parsedPageSize, parsedSorter, parsedFilters } =\n    parseTableParams(search ?? \"?\");\n\n  const preferredInitialFilters = pickNotDeprecated(\n    filtersFromProp?.initial,\n    initialFilter,\n  );\n  const preferredPermanentFilters =\n    pickNotDeprecated(filtersFromProp?.permanent, permanentFilter) ??\n    defaultPermanentFilter;\n\n  const preferredInitialSorters = pickNotDeprecated(\n    sortersFromProp?.initial,\n    initialSorter,\n  );\n  const preferredPermanentSorters =\n    pickNotDeprecated(sortersFromProp?.permanent, permanentSorter) ??\n    defaultPermanentSorter;\n\n  const prefferedFilterBehavior =\n    pickNotDeprecated(\n      filtersFromProp?.defaultBehavior,\n      defaultSetFilterBehavior,\n    ) ?? \"merge\";\n\n  let defaultCurrent: number;\n  let defaultPageSize: number;\n  let defaultSorter: CrudSort[] | undefined;\n  let defaultFilter: CrudFilter[] | undefined;\n\n  if (syncWithLocation) {\n    defaultCurrent =\n      parsedParams?.params?.current || parsedCurrent || prefferedCurrent || 1;\n    defaultPageSize =\n      parsedParams?.params?.pageSize ||\n      parsedPageSize ||\n      prefferedPageSize ||\n      10;\n    defaultSorter =\n      parsedParams?.params?.sorters ||\n      (parsedSorter.length ? parsedSorter : preferredInitialSorters);\n    defaultFilter =\n      parsedParams?.params?.filters ||\n      (parsedFilters.length ? parsedFilters : preferredInitialFilters);\n  } else {\n    defaultCurrent = prefferedCurrent || 1;\n    defaultPageSize = prefferedPageSize || 10;\n    defaultSorter = preferredInitialSorters;\n    defaultFilter = preferredInitialFilters;\n  }\n\n  const { replace } = useNavigation();\n  /** New way of `replace` calls to the router is using `useGo` */\n  const go = useGo();\n\n  const { resource, identifier } = useResource(resourceFromProp);\n\n  const combinedMeta = getMeta({\n    resource,\n    meta: preferredMeta,\n  });\n\n  React.useEffect(() => {\n    warnOnce(\n      typeof identifier === \"undefined\",\n      \"useTable: `resource` is not defined.\",\n    );\n  }, [identifier]);\n\n  const [sorters, setSorters] = useState<CrudSort[]>(\n    setInitialSorters(preferredPermanentSorters, defaultSorter ?? []),\n  );\n  const [filters, setFilters] = useState<CrudFilter[]>(\n    setInitialFilters(preferredPermanentFilters, defaultFilter ?? []),\n  );\n  const [current, setCurrent] = useState<number>(defaultCurrent);\n  const [pageSize, setPageSize] = useState<number>(defaultPageSize);\n\n  const getCurrentQueryParams = (): object => {\n    if (routerType === \"new\") {\n      // We get QueryString parameters that are uncontrolled by refine.\n      const { sorters, filters, pageSize, current, ...rest } =\n        parsedParams?.params ?? {};\n\n      return rest;\n    }\n\n    // We get QueryString parameters that are uncontrolled by refine.\n    const { sorter, filters, pageSize, current, ...rest } = qs.parse(search, {\n      ignoreQueryPrefix: true,\n    });\n\n    return rest;\n  };\n\n  const createLinkForSyncWithLocation = ({\n    pagination: { current, pageSize },\n    sorter,\n    filters,\n  }: SyncWithLocationParams) => {\n    if (routerType === \"new\") {\n      return (\n        go({\n          type: \"path\",\n          options: {\n            keepHash: true,\n            keepQuery: true,\n          },\n          query: {\n            ...(isPaginationEnabled ? { current, pageSize } : {}),\n            sorters: sorter,\n            filters,\n            ...getCurrentQueryParams(),\n          },\n        }) ?? \"\"\n      );\n    }\n    const currentQueryParams = qs.parse(search?.substring(1)); // remove first ? character\n\n    const stringifyParams = stringifyTableParams({\n      pagination: {\n        pageSize,\n        current,\n      },\n      sorters: sorters ?? sorter,\n      filters,\n      ...currentQueryParams,\n    });\n\n    return `${pathname ?? \"\"}?${stringifyParams ?? \"\"}`;\n  };\n\n  useEffect(() => {\n    if (search === \"\") {\n      setCurrent(defaultCurrent);\n      setPageSize(defaultPageSize);\n      setSorters(\n        setInitialSorters(preferredPermanentSorters, defaultSorter ?? []),\n      );\n      setFilters(\n        setInitialFilters(preferredPermanentFilters, defaultFilter ?? []),\n      );\n    }\n  }, [search]);\n\n  useEffect(() => {\n    if (syncWithLocation) {\n      // Careful! This triggers render\n      const queryParams = getCurrentQueryParams();\n\n      if (routerType === \"new\") {\n        go({\n          type: \"replace\",\n          options: {\n            keepQuery: true,\n          },\n          query: {\n            ...(isPaginationEnabled ? { pageSize, current } : {}),\n            sorters: differenceWith(\n              sorters,\n              preferredPermanentSorters,\n              isEqual,\n            ),\n            filters: differenceWith(\n              filters,\n              preferredPermanentFilters,\n              isEqual,\n            ),\n            // ...queryParams,\n          },\n        });\n      } else {\n        const stringifyParams = stringifyTableParams({\n          ...(isPaginationEnabled\n            ? {\n                pagination: {\n                  pageSize,\n                  current,\n                },\n              }\n            : {}),\n          sorters: differenceWith(sorters, preferredPermanentSorters, isEqual),\n          filters: differenceWith(filters, preferredPermanentFilters, isEqual),\n          ...queryParams,\n        });\n        return replace?.(`${pathname}?${stringifyParams}`, undefined, {\n          shallow: true,\n        });\n      }\n    }\n  }, [syncWithLocation, current, pageSize, sorters, filters]);\n\n  const queryResult = useList<TQueryFnData, TError, TData>({\n    resource: identifier,\n    hasPagination,\n    pagination: { current, pageSize, mode: pagination?.mode },\n    filters: isServerSideFilteringEnabled\n      ? unionFilters(preferredPermanentFilters, filters)\n      : undefined,\n    sorters: isServerSideSortingEnabled\n      ? unionSorters(preferredPermanentSorters, sorters)\n      : undefined,\n    queryOptions,\n    overtimeOptions,\n    successNotification,\n    errorNotification,\n    meta: combinedMeta,\n    metaData: combinedMeta,\n    liveMode,\n    liveParams,\n    onLiveEvent,\n    dataProviderName,\n  });\n\n  const setFiltersAsMerge = useCallback(\n    (newFilters: CrudFilter[]) => {\n      setFilters((prevFilters) =>\n        unionFilters(preferredPermanentFilters, newFilters, prevFilters),\n      );\n    },\n    [preferredPermanentFilters],\n  );\n\n  const setFiltersAsReplace = useCallback(\n    (newFilters: CrudFilter[]) => {\n      setFilters(unionFilters(preferredPermanentFilters, newFilters));\n    },\n    [preferredPermanentFilters],\n  );\n\n  const setFiltersWithSetter = useCallback(\n    (setter: (prevFilters: CrudFilter[]) => CrudFilter[]) => {\n      setFilters((prev) =>\n        unionFilters(preferredPermanentFilters, setter(prev)),\n      );\n    },\n    [preferredPermanentFilters],\n  );\n\n  const setFiltersFn: useTableReturnType<TQueryFnData>[\"setFilters\"] =\n    useCallback(\n      (\n        setterOrFilters,\n        behavior: SetFilterBehavior = prefferedFilterBehavior,\n      ) => {\n        if (typeof setterOrFilters === \"function\") {\n          setFiltersWithSetter(setterOrFilters);\n        } else {\n          if (behavior === \"replace\") {\n            setFiltersAsReplace(setterOrFilters);\n          } else {\n            setFiltersAsMerge(setterOrFilters);\n          }\n        }\n      },\n      [setFiltersWithSetter, setFiltersAsReplace, setFiltersAsMerge],\n    );\n\n  const setSortWithUnion = useCallback(\n    (newSorter: CrudSort[]) => {\n      setSorters(() => unionSorters(preferredPermanentSorters, newSorter));\n    },\n    [preferredPermanentSorters],\n  );\n\n  return {\n    tableQueryResult: queryResult,\n    tableQuery: queryResult,\n    sorters,\n    setSorters: setSortWithUnion,\n    sorter: sorters,\n    setSorter: setSortWithUnion,\n    filters,\n    setFilters: setFiltersFn,\n    current,\n    setCurrent,\n    pageSize,\n    setPageSize,\n    pageCount: pageSize\n      ? Math.ceil((queryResult.data?.total ?? 0) / pageSize)\n      : 1,\n    createLinkForSyncWithLocation,\n    overtime: queryResult.overtime,\n  };\n}\n", "import { useContext } from \"react\";\n\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type UseMutationResult,\n  useMutation,\n  useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { ResourceContext } from \"@contexts/resource\";\nimport { hasPermission, pickNotDeprecated } from \"@definitions/helpers\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\nimport { useGetIdentity } from \"@hooks/auth\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nimport type { LogParams } from \"../../../contexts/auditLog/types\";\nimport type { BaseKey } from \"../../../contexts/data/types\";\n\ntype LogRenameData =\n  | {\n      resource?: string;\n    }\n  | undefined;\n\nexport type UseLogReturnType<TLogData, TLogRenameData> = {\n  log: UseMutationResult<TLogData, Error, LogParams>;\n  rename: UseMutationResult<\n    TLogRenameData,\n    Error,\n    {\n      id: BaseKey;\n      name: string;\n    }\n  >;\n};\n\nexport type UseLogMutationProps<\n  TLogData,\n  TLogRenameData extends LogRenameData = LogRenameData,\n> = {\n  logMutationOptions?: Omit<\n    UseMutationOptions<TLogData, Error, LogParams, unknown>,\n    \"mutationFn\"\n  >;\n  renameMutationOptions?: Omit<\n    UseMutationOptions<\n      TLogRenameData,\n      Error,\n      { id: BaseKey; name: string },\n      unknown\n    >,\n    \"mutationFn\" | \"onSuccess\"\n  >;\n};\n\n/**\n * useLog is used to `create` a new and `rename` the existing audit log.\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/audit-log/useLog} for more details.\n */\n\nexport const useLog = <\n  TLogData,\n  TLogRenameData extends LogRenameData = LogRenameData,\n>({\n  logMutationOptions,\n  renameMutationOptions,\n}: UseLogMutationProps<TLogData, TLogRenameData> = {}): UseLogReturnType<\n  TLogData,\n  TLogRenameData\n> => {\n  const queryClient = useQueryClient();\n  const auditLogContext = useContext(AuditLogContext);\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const authProvider = useActiveAuthProvider();\n\n  const { resources } = useContext(ResourceContext);\n  const {\n    data: identityData,\n    refetch,\n    isLoading,\n  } = useGetIdentity({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    queryOptions: {\n      enabled: !!auditLogContext?.create,\n    },\n  });\n\n  const log = useMutation<TLogData, Error, LogParams, unknown>(\n    async (params) => {\n      const resource = pickResource(params.resource, resources);\n      const logPermissions = pickNotDeprecated(\n        resource?.meta?.audit,\n        resource?.options?.audit,\n        resource?.options?.auditLog?.permissions,\n      );\n\n      if (logPermissions) {\n        if (!hasPermission(logPermissions, params.action)) {\n          return;\n        }\n      }\n\n      let authorData;\n      if (isLoading && !!auditLogContext?.create) {\n        authorData = await refetch();\n      }\n\n      return await auditLogContext.create?.({\n        ...params,\n        author: identityData ?? authorData?.data,\n      });\n    },\n    {\n      mutationKey: keys().audit().action(\"log\").get(),\n      ...logMutationOptions,\n      meta: {\n        ...logMutationOptions?.meta,\n        ...getXRay(\"useLog\", preferLegacyKeys),\n      },\n    },\n  );\n\n  const rename = useMutation<\n    TLogRenameData,\n    Error,\n    { id: BaseKey; name: string },\n    unknown\n  >(\n    async (params) => {\n      return await auditLogContext.update?.(params);\n    },\n    {\n      onSuccess: (data) => {\n        if (data?.resource) {\n          queryClient.invalidateQueries(\n            keys()\n              .audit()\n              .resource(data?.resource ?? \"\")\n              .action(\"list\")\n              .get(preferLegacyKeys),\n          );\n        }\n      },\n      mutationKey: keys().audit().action(\"rename\").get(),\n      ...renameMutationOptions,\n      meta: {\n        ...renameMutationOptions?.meta,\n        ...getXRay(\"useLog\", preferLegacyKeys),\n      },\n    },\n  );\n\n  return { log, rename };\n};\n", "import React, { type PropsWithChildren } from \"react\";\n\nimport type { IAuditLogContext } from \"./types\";\n\nexport const AuditLogContext = React.createContext<IAuditLogContext>({});\n\nexport const AuditLogContextProvider: React.FC<\n  PropsWithChildren<IAuditLogContext>\n> = ({ create, get, update, children }) => {\n  return (\n    <AuditLogContext.Provider value={{ create, get, update }}>\n      {children}\n    </AuditLogContext.Provider>\n  );\n};\n", "import { useContext } from \"react\";\n\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseQueryOptions,\n  type UseQueryResult,\n  useQuery,\n} from \"@tanstack/react-query\";\n\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nimport type { HttpError, MetaQuery } from \"../../../contexts/data/types\";\n\nexport type UseLogProps<TQueryFnData, TError, TData> = {\n  resource: string;\n  action?: string;\n  meta?: Record<number | string, any>;\n  author?: Record<number | string, any>;\n  queryOptions?: UseQueryOptions<TQueryFnData, TError, TData>;\n  metaData?: MetaQuery;\n};\n\n/**\n * useLogList is used to get and filter audit logs.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/audit-log/useLogList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function.\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Defaults to `TQueryFnData`\n *\n */\nexport const useLogList = <\n  TQueryFnData = any,\n  TError extends HttpError = HttpError,\n  TData = TQueryFnData,\n>({\n  resource,\n  action,\n  meta,\n  author,\n  metaData,\n  queryOptions,\n}: UseLogProps<TQueryFnData, TError, TData>): UseQueryResult<TData> => {\n  const { get } = useContext(AuditLogContext);\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const queryResponse = useQuery<TQueryFnData, TError, TData>({\n    queryKey: keys()\n      .audit()\n      .resource(resource)\n      .action(\"list\")\n      .params(meta)\n      .get(preferLegacyKeys),\n    queryFn: () =>\n      get?.({\n        resource,\n        action,\n        author,\n        meta,\n        metaData,\n      }) ?? Promise.resolve([]),\n    enabled: typeof get !== \"undefined\",\n    ...queryOptions,\n    retry: false,\n    meta: {\n      ...queryOptions?.meta,\n      ...getXRay(\"useLogList\", preferLegacyKeys, resource),\n    },\n  });\n\n  return queryResponse;\n};\n", "import React, { useContext } from \"react\";\n\nimport warnOnce from \"warn-once\";\n\nimport { I18nContext } from \"@contexts/i18n\";\nimport { useRouterType } from \"@contexts/router/picker\";\nimport { pickNotDeprecated } from \"@definitions\";\nimport { getActionRoutesFromResource } from \"@definitions/helpers/router\";\nimport { composeRoute } from \"@definitions/helpers/router/compose-route\";\nimport { useRefineContext, useResource, useTranslate } from \"@hooks\";\nimport { useParsed } from \"@hooks/router/use-parsed\";\n\nimport type { IResourceItem } from \"../../contexts/resource/types\";\nimport { pickResource } from \"../../definitions/helpers/pick-resource/index\";\n\nexport type BreadcrumbsType = {\n  label: string;\n  href?: string;\n  icon?: React.ReactNode;\n};\n\ntype UseBreadcrumbReturnType = {\n  breadcrumbs: BreadcrumbsType[];\n};\n\ntype UseBreadcrumbProps = {\n  /**\n   * Additional params to be used in the route generation process.\n   */\n  meta?: Record<string, string | number>;\n};\n\nexport const useBreadcrumb = ({\n  meta: metaFromProps = {},\n}: UseBreadcrumbProps = {}): UseBreadcrumbReturnType => {\n  const routerType = useRouterType();\n  const { i18nProvider } = useContext(I18nContext);\n  const parsed = useParsed();\n  const translate = useTranslate();\n  const { resources, resource, action } = useResource();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n\n  const breadcrumbs: BreadcrumbsType[] = [];\n\n  if (!resource?.name) {\n    return { breadcrumbs };\n  }\n\n  const addBreadcrumb = (parentName: string | IResourceItem) => {\n    const parentResource =\n      typeof parentName === \"string\"\n        ? pickResource(parentName, resources, routerType === \"legacy\") ?? {\n            name: parentName,\n          }\n        : parentName;\n\n    if (parentResource) {\n      const grandParentName = pickNotDeprecated(\n        parentResource?.meta?.parent,\n        parentResource?.parentName,\n      );\n      if (grandParentName) {\n        addBreadcrumb(grandParentName);\n      }\n      const listActionOfResource = getActionRoutesFromResource(\n        parentResource,\n        resources,\n        routerType === \"legacy\",\n      ).find((r) => r.action === \"list\");\n\n      const hrefRaw = listActionOfResource?.resource?.list\n        ? listActionOfResource?.route\n        : undefined;\n\n      const href = hrefRaw\n        ? routerType === \"legacy\"\n          ? hrefRaw\n          : composeRoute(hrefRaw, parentResource?.meta, parsed, metaFromProps)\n        : undefined;\n\n      breadcrumbs.push({\n        label:\n          pickNotDeprecated(\n            parentResource.meta?.label,\n            parentResource.options?.label,\n          ) ??\n          translate(\n            `${parentResource.name}.${parentResource.name}`,\n            textTransformers.humanize(parentResource.name),\n          ),\n        href: href,\n        icon: pickNotDeprecated(\n          parentResource.meta?.icon,\n          parentResource.options?.icon,\n          parentResource.icon,\n        ),\n      });\n    }\n  };\n\n  addBreadcrumb(resource);\n\n  if (action && action !== \"list\") {\n    const key = `actions.${action}`;\n    const actionLabel = translate(key);\n    if (typeof i18nProvider !== \"undefined\" && actionLabel === key) {\n      warnOnce(\n        true,\n        `[useBreadcrumb]: Breadcrumb missing translate key for the \"${action}\" action. Please add \"actions.${action}\" key to your translation file.\\nFor more information, see https://refine.dev/docs/api-reference/core/hooks/useBreadcrumb/#i18n-support`,\n      );\n      breadcrumbs.push({\n        label: translate(\n          `buttons.${action}`,\n          textTransformers.humanize(action),\n        ),\n      });\n    } else {\n      breadcrumbs.push({\n        label: translate(key, textTransformers.humanize(action)),\n      });\n    }\n  }\n\n  return {\n    breadcrumbs,\n  };\n};\n", "import React from \"react\";\n\nimport { pickNotDeprecated, useUserFriendlyName } from \"@definitions\";\nimport { getParentResource } from \"@definitions/helpers/router\";\n\nimport { useParsed, useResource, useRouterContext, useTranslate } from \"..\";\nimport { useRouterType } from \"../../contexts/router/picker\";\nimport { createResourceKey } from \"../../definitions/helpers/menu/create-resource-key\";\nimport {\n  type FlatTreeItem,\n  createTree,\n} from \"../../definitions/helpers/menu/create-tree\";\nimport { useGetToPath } from \"../router/use-get-to-path/index\";\n\ntype UseMenuReturnType = {\n  defaultOpenKeys: string[];\n  selectedKey: string;\n  menuItems: TreeMenuItem[];\n};\n\nexport type UseMenuProps = {\n  meta?: Record<string, any>;\n  hideOnMissingParameter?: boolean;\n};\n\nexport type TreeMenuItem =\n  // Omitted because `label` and `route` are deprecated in `resource` but not in `menuItems`. These are populated in `prepareItem` for ease of use.\n  Omit<FlatTreeItem, \"label\" | \"route\" | \"children\"> & {\n    route?: string;\n    icon?: React.ReactNode;\n    label?: string;\n    children: TreeMenuItem[];\n  };\n\nconst getCleanPath = (pathname: string) => {\n  return pathname\n    .split(\"?\")[0]\n    .split(\"#\")[0]\n    .replace(/(.+)(\\/$)/, \"$1\");\n};\n\n/**\n * `useMenu` is used to get menu items of the default sidebar.\n * These items include a link to dashboard page (if it exists) and links to the user defined resources\n * (passed as children to {@link https://refine.dev/docs/core/components/refine-config `<Refine>`}).\n * This hook can also be used to build custom menus, which is also used by default sidebar to show menu items.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/ui/useMenu} for more details.\n */\nexport const useMenu = (\n  { meta, hideOnMissingParameter = true }: UseMenuProps = {\n    hideOnMissingParameter: true,\n  },\n): UseMenuReturnType => {\n  const translate = useTranslate();\n\n  const getToPath = useGetToPath();\n  const routerType = useRouterType();\n  const { resource, resources } = useResource();\n  const { pathname } = useParsed();\n  const { useLocation } = useRouterContext();\n  const { pathname: legacyPath } = useLocation();\n  const getFriendlyName = useUserFriendlyName();\n\n  const cleanPathname =\n    routerType === \"legacy\"\n      ? getCleanPath(legacyPath)\n      : pathname\n        ? getCleanPath(pathname)\n        : undefined;\n\n  const cleanRoute = `/${(cleanPathname ?? \"\").replace(/^\\//, \"\")}`;\n\n  const selectedKey = resource\n    ? createResourceKey(resource, resources, routerType === \"legacy\")\n    : cleanRoute ?? \"\";\n\n  const defaultOpenKeys = React.useMemo(() => {\n    if (!resource) return [];\n    let parent = getParentResource(resource, resources);\n    const keys = [createResourceKey(resource, resources)];\n    while (parent) {\n      keys.push(createResourceKey(parent, resources));\n      parent = getParentResource(parent, resources);\n    }\n    return keys;\n  }, []);\n\n  const prepareItem = React.useCallback(\n    (item: FlatTreeItem): TreeMenuItem | undefined => {\n      if (pickNotDeprecated(item?.meta?.hide, item?.options?.hide)) {\n        return undefined;\n      }\n      if (!item?.list && item.children.length === 0) return undefined;\n\n      const composed = item.list\n        ? getToPath({\n            resource: item,\n            action: \"list\",\n            legacy: routerType === \"legacy\",\n            meta,\n          })\n        : undefined;\n\n      if (\n        hideOnMissingParameter &&\n        composed &&\n        composed.match(/(\\/|^):(.+?)(\\/|$){1}/)\n      )\n        return undefined;\n\n      return {\n        ...item,\n        route: composed,\n        icon: pickNotDeprecated(item.meta?.icon, item.options?.icon, item.icon),\n        label:\n          pickNotDeprecated(item?.meta?.label, item?.options?.label) ??\n          translate(\n            `${item.name}.${item.name}`,\n            getFriendlyName(item.name, \"plural\"),\n          ),\n      };\n    },\n    [routerType, meta, getToPath, translate, hideOnMissingParameter],\n  );\n\n  const treeItems = React.useMemo(() => {\n    const treeMenuItems = createTree(resources, routerType === \"legacy\");\n\n    // add paths to items and their nodes recursively\n    const prepare = (items: TreeMenuItem[]): TreeMenuItem[] => {\n      return items.flatMap((item) => {\n        const preparedNodes = prepare(item.children);\n        const newItem = prepareItem({\n          ...item,\n          children: preparedNodes,\n        });\n\n        if (!newItem) return [];\n\n        return [newItem];\n      });\n    };\n\n    return prepare(treeMenuItems);\n  }, [resources, routerType, prepareItem]);\n\n  return {\n    defaultOpenKeys,\n    selectedKey,\n    menuItems: treeItems,\n  };\n};\n", "import type { IResourceItem } from \"../../../contexts/resource/types\";\nimport {\n  getParentResource,\n  removeLeadingTrailingSlashes,\n} from \"../../helpers/router\";\n\nexport const createResourceKey = (\n  resource: IResourceItem,\n  resources: IResourceItem[],\n  legacy = false,\n) => {\n  const parents: IResourceItem[] = [];\n\n  let currentParentResource = getParentResource(resource, resources);\n  while (currentParentResource) {\n    parents.push(currentParentResource);\n    currentParentResource = getParentResource(currentParentResource, resources);\n  }\n  parents.reverse();\n\n  const key = [...parents, resource]\n    .map((r) =>\n      removeLeadingTrailingSlashes(\n        (legacy ? r.route : undefined) ?? r.identifier ?? r.name,\n      ),\n    )\n    .join(\"/\");\n\n  return `/${key.replace(/^\\//, \"\")}`;\n};\n", "import type { IResourceItem } from \"../../../contexts/resource/types\";\nimport { getParentResource } from \"../router\";\nimport { createResourceKey } from \"./create-resource-key\";\n\nexport type Tree = {\n  item: IResourceItem;\n  children: { [key: string]: Tree };\n};\n\nexport type FlatTreeItem = IResourceItem & {\n  key: string;\n  children: FlatTreeItem[];\n};\n\nexport const createTree = (\n  resources: IResourceItem[],\n  legacy = false,\n): FlatTreeItem[] => {\n  const root: Tree = {\n    item: {\n      name: \"__root__\",\n    },\n    children: {},\n  };\n\n  resources.forEach((resource) => {\n    const parents: IResourceItem[] = [];\n\n    let currentParent = getParentResource(resource, resources);\n    while (currentParent) {\n      parents.push(currentParent);\n      currentParent = getParentResource(currentParent, resources);\n    }\n    parents.reverse();\n\n    let currentTree = root;\n\n    parents.forEach((parent) => {\n      const key =\n        (legacy ? parent.route : undefined) ?? parent.identifier ?? parent.name;\n\n      if (!currentTree.children[key]) {\n        currentTree.children[key] = {\n          item: parent,\n          children: {},\n        };\n      }\n      currentTree = currentTree.children[key];\n    });\n\n    const key =\n      (legacy ? resource.route : undefined) ??\n      resource.identifier ??\n      resource.name;\n\n    if (!currentTree.children[key]) {\n      currentTree.children[key] = {\n        item: resource,\n        children: {},\n      };\n    }\n  });\n\n  const flatten = (tree: Tree): FlatTreeItem[] => {\n    const items: FlatTreeItem[] = [];\n\n    Object.keys(tree.children).forEach((key) => {\n      const itemKey = createResourceKey(\n        tree.children[key].item,\n        resources,\n        legacy,\n      );\n      const item: FlatTreeItem = {\n        ...tree.children[key].item,\n        key: itemKey,\n        children: flatten(tree.children[key]),\n      };\n      items.push(item);\n    });\n\n    return items;\n  };\n\n  return flatten(root);\n};\n", "import React, {\n  type ReactNode,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\n\ntype MetaContextValue = Record<string, any>;\n\nexport const MetaContext = createContext<MetaContextValue>({});\n\n/**\n * Is used to provide meta data to the children components.\n * @internal\n */\nexport const MetaContextProvider = ({\n  children,\n  value,\n}: { children: ReactNode; value: MetaContextValue }) => {\n  const currentValue = useMetaContext();\n\n  const metaContext = useMemo(() => {\n    return {\n      ...currentValue,\n      ...value,\n    };\n  }, [currentValue, value]);\n\n  return (\n    <MetaContext.Provider value={metaContext}>{children}</MetaContext.Provider>\n  );\n};\n\n/**\n * @internal\n * @returns The MetaContext value.\n */\nexport const useMetaContext = () => {\n  const context = useContext(MetaContext);\n  if (!context) {\n    throw new Error(\"useMetaContext must be used within a MetaContextProvider\");\n  }\n\n  return useContext(MetaContext);\n};\n", "import { useMetaContext } from \"@contexts/metaContext\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\nimport { useParsed } from \"@hooks/router\";\n\nimport type { MetaQuery } from \"../../contexts/data/types\";\nimport type { IResourceItem } from \"../../contexts/resource/types\";\n\n/**\n * Hook that returns a function to get meta.\n * The meta is a combination of the resource meta, hook meta, query params and metaContext value.\n * @internal\n */\nexport const useMeta = () => {\n  const { params } = useParsed();\n\n  const metaContext = useMetaContext();\n\n  const getMetaFn = ({\n    resource,\n    meta: metaFromProp,\n  }: {\n    resource?: IResourceItem;\n    meta?: MetaQuery;\n  } = {}) => {\n    const { meta } = sanitizeResource(resource) ?? { meta: {} };\n\n    // this fields came from the query params and should be removed from the meta because they are not part of the meta.\n    const {\n      filters: _filters,\n      sorters: _sorters,\n      current: _current,\n      pageSize: _pageSize,\n      ...additionalParams\n    } = params ?? {};\n\n    const result: Record<string, unknown> = {\n      ...meta,\n      ...additionalParams,\n      ...metaFromProp,\n    };\n\n    // when MultiTenancyProvider from \"@refinedev-ee/multi-tenancy\" is provided, we need to add tenantId to the meta\n    if (metaContext?.tenantId) {\n      result[\"tenantId\"] = metaContext.tenantId;\n    }\n\n    return result;\n  };\n\n  return getMetaFn;\n};\n", "import { RefineContext } from \"@contexts/refine\";\nimport React from \"react\";\n\nexport const useRefineOptions = () => {\n  const { options } = React.useContext(RefineContext);\n\n  return options;\n};\n", "import React from \"react\";\n\nimport { useId } from \"./use-id\";\nimport { useAction } from \"./use-action\";\nimport { useResource } from \"../resource\";\nimport type { BaseKey } from \"../../contexts/data/types\";\nimport type { IResourceItem } from \"../../contexts/resource/types\";\nimport type { Action } from \"../../contexts/router/types\";\nimport type { FormAction } from \"../form/types\";\n\ntype Props = {\n  id?: BaseKey;\n  resource?: string;\n  action?: Action;\n};\n\ntype ResourceParams = {\n  id?: BaseKey;\n  setId: React.Dispatch<React.SetStateAction<BaseKey | undefined>>;\n  resource?: IResourceItem;\n  action?: Action;\n  identifier?: string;\n  formAction: FormAction;\n};\n\n/**\n * Interactions in Refine has 3 main parameters: resource, action and id.\n *\n * This hook is used to manage these parameters based on below conditions and outputs the final parameters.\n *\n * `resource`: The resource to be used. (either the identifier or the name of the resource)\n * - If a `resource` is provided, it will be used (even if it's not defined in the <Refine/> component)\n * - If a `resource` is not provided, it will be inferred from the route.\n * `id`: The `id` of the record to be used.\n * - If an `id` is provided, it will be used.\n * - If an `id` is not provided, it will either be inferred from the route or will be `undefined`.\n * -- If a custom resource is provided and it's different from the inferred resource, the id will be undefined.\n * -- If a custom resource is provided and it's same as the inferred resource, the id will be inferred from the route.\n * -- If a custom resource is not provided, the id will be inferred from the route.\n * `action`: The action to be used.\n * - If an `action` is provided, it will be used.\n * - If an `action` is not provided, it will be inferred from the route.\n * `formAction`: The action to be used in the form.\n * - `formAction` can only be \"edit\", \"clone\" or \"create\".\n * - If action is \"edit\" or \"clone\", `formAction` will be the same as action.\n * - Same as `id`, if passed resource is different from inferred resource, `formAction` will fallback to \"create\" and ignore the action from the route.\n */\nexport function useResourceParams(props?: Props): ResourceParams {\n  const { select, identifier: inferredIdentifier } = useResource();\n  const resourceToCheck = props?.resource ?? inferredIdentifier;\n  const { identifier = undefined, resource = undefined } = resourceToCheck\n    ? select(resourceToCheck, true)\n    : {};\n\n  const isSameResource = inferredIdentifier === identifier;\n  const inferredId = useId();\n  const action = useAction(props?.action);\n\n  const defaultId = React.useMemo(() => {\n    if (!isSameResource) return props?.id;\n\n    return props?.id ?? inferredId;\n  }, [isSameResource, props?.id, inferredId]);\n\n  const [id, setId] = React.useState<BaseKey | undefined>(defaultId);\n\n  React.useMemo(() => setId(defaultId), [defaultId]);\n\n  const formAction = React.useMemo(() => {\n    if (!isSameResource && !props?.action) {\n      return \"create\";\n    }\n\n    if (action === \"edit\" || action === \"clone\") {\n      return action;\n    }\n\n    return \"create\";\n  }, [action, isSameResource, props?.action]);\n\n  return {\n    id,\n    setId,\n    resource,\n    action,\n    identifier,\n    formAction,\n  };\n}\n", "import { useParsed } from \"../../router/use-parsed\";\nimport { useRouterContext } from \"../../legacy-router/useRouterContext\";\nimport type { BaseKey } from \"../../../contexts/data/types\";\nimport { useRouterType } from \"../../../contexts/router/picker\";\nimport type { ResourceRouterParams } from \"../../../contexts/router/legacy/types\";\n\n/**\n * Returns the id from the router regardless of the router type.\n * In legacy routers, `useParsed` won't work and in the new router bindings, `useParams` won't work.\n * To make it easier to get the id from the router, this hook can be used.\n *\n * Additionally, if an id is provided as a parameter, it will be used instead of the inferred id.\n *\n * @internal usage only\n */\nexport const useId = (id?: BaseKey) => {\n  const routerType = useRouterType();\n  const { useParams } = useRouterContext();\n\n  const parsed = useParsed();\n  const legacyParams = useParams<Partial<ResourceRouterParams>>();\n\n  const inferredId = routerType === \"legacy\" ? legacyParams.id : parsed.id;\n\n  return id ?? inferredId;\n};\n", "import { useParsed } from \"../../router/use-parsed\";\nimport { useRouterContext } from \"../../legacy-router/useRouterContext\";\nimport type { Action } from \"../../../contexts/router/types\";\nimport { useRouterType } from \"../../../contexts/router/picker\";\nimport type { ResourceRouterParams } from \"../../../contexts/router/legacy/types\";\n\n/**\n * Returns the action from the router regardless of the router type.\n * In legacy routers, `useParsed` won't work and in the new router bindings, `useParams` won't work.\n * To make it easier to get the action from the router, this hook can be used.\n *\n * Additionally, if an action is provided as a parameter, it will be used instead of the inferred action.\n *\n * @internal usage only\n */\nexport const useAction = (action?: Action) => {\n  const routerType = useRouterType();\n  const { useParams } = useRouterContext();\n\n  const parsed = useParsed();\n  const legacyParams = useParams<Partial<ResourceRouterParams>>();\n\n  const inferredAction =\n    routerType === \"legacy\" ? legacyParams.action : parsed.action;\n\n  return action ?? inferredAction;\n};\n", "import { useRefineOptions } from \"../../use-refine-options\";\nimport { useTranslate } from \"../../i18n\";\n\nexport type ActionableButtonProps = {\n  type: \"save\" | \"export\" | \"import\";\n};\n\nexport type ActionableButtonValues = {\n  label: string;\n};\n\nexport function useActionableButton({\n  type,\n}: ActionableButtonProps): ActionableButtonValues {\n  const translate = useTranslate();\n  const {\n    textTransformers: { humanize },\n  } = useRefineOptions();\n\n  const key = `buttons.${type}`;\n  const fallback = humanize(type);\n\n  const label = translate(key, fallback);\n\n  return { label };\n}\n", "import React from \"react\";\n\nimport { useUserFriendlyName } from \"../../../definitions/helpers/useUserFriendlyName\";\nimport { useRouterType } from \"../../../contexts/router/picker\";\nimport { useResourceParams } from \"../../use-resource-params\";\nimport { useRefineOptions } from \"../../use-refine-options\";\nimport { useButtonCanAccess } from \"../button-can-access\";\nimport { useRouterContext } from \"../../legacy-router\";\nimport { useNavigation } from \"../../navigation\";\nimport { useTranslate } from \"../../i18n\";\nimport { useLink } from \"../../router\";\n\nimport type { BaseKey } from \"../../../contexts/data/types\";\nimport type { Action } from \"../../../contexts/router/types\";\nimport type { CanReturnType } from \"../../../contexts/accessControl/types\";\n\nexport type NavigationButtonProps = {\n  action: Action;\n  id?: BaseKey;\n  resource?: string;\n  meta?: Record<string, unknown>;\n  accessControl?: {\n    enabled?: boolean;\n    hideIfUnauthorized?: boolean;\n  };\n};\n\nexport type NavigationButtonValues = {\n  to: string;\n  label: string;\n  disabled: boolean;\n  title: string;\n  hidden: boolean;\n  canAccess: CanReturnType | undefined;\n  LinkComponent: React.ComponentType<\n    React.PropsWithChildren<{\n      [prop: string]: any;\n      to: string;\n    }>\n  >;\n};\n\nexport function useNavigationButton(\n  props: NavigationButtonProps,\n): NavigationButtonValues {\n  const navigation = useNavigation();\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n  const translate = useTranslate();\n  const getUserFriendlyName = useUserFriendlyName();\n  const {\n    textTransformers: { humanize },\n  } = useRefineOptions();\n\n  const { id, resource, identifier } = useResourceParams({\n    resource: props.resource,\n    id: props.action === \"create\" ? undefined : props.id,\n  });\n\n  const { canAccess, title, hidden, disabled } = useButtonCanAccess({\n    action: props.action,\n    accessControl: props.accessControl,\n    id,\n    resource,\n  });\n\n  const LinkComponent = routerType === \"legacy\" ? LegacyLink : Link;\n\n  const to = React.useMemo(() => {\n    if (!resource) return \"\";\n    switch (props.action) {\n      case \"create\":\n      case \"list\":\n        return navigation[`${props.action}Url`](resource, props.meta);\n      default:\n        if (!id) return \"\";\n        return navigation[`${props.action}Url`](resource, id, props.meta);\n    }\n  }, [resource, id, props.meta, navigation[`${props.action}Url`]]);\n\n  const label =\n    props.action === \"list\"\n      ? translate(\n          `${identifier ?? props.resource}.titles.list`,\n          getUserFriendlyName(\n            resource?.meta?.label ??\n              resource?.label ??\n              identifier ??\n              props.resource,\n            \"plural\",\n          ),\n        )\n      : translate(`buttons.${props.action}`, humanize(props.action));\n\n  return {\n    to,\n    label,\n    title,\n    disabled,\n    hidden,\n    canAccess,\n    LinkComponent,\n  };\n}\n", "import React from \"react\";\n\nimport { AccessControlContext } from \"../../../contexts/accessControl\";\nimport { useCan } from \"../../accessControl\";\nimport { useTranslate } from \"../../i18n\";\n\nimport type { CanReturnType } from \"../../../contexts/accessControl/types\";\nimport type { IResourceItem } from \"../../../contexts/resource/types\";\nimport type { Action } from \"../../../contexts/router/types\";\nimport type { BaseKey } from \"../../../contexts/data/types\";\n\ntype ButtonCanAccessProps = {\n  action: Action | \"delete\";\n  resource?: IResourceItem;\n  id?: BaseKey;\n  accessControl?: {\n    enabled?: boolean;\n    hideIfUnauthorized?: boolean;\n  };\n};\n\ntype ButtonCanAccessValues = {\n  title: string;\n  hidden: boolean;\n  disabled: boolean;\n  canAccess: CanReturnType | undefined;\n};\n\nexport const useButtonCanAccess = (\n  props: ButtonCanAccessProps,\n): ButtonCanAccessValues => {\n  const translate = useTranslate();\n  const accessControlContext = React.useContext(AccessControlContext);\n\n  const accessControlEnabled =\n    props.accessControl?.enabled ??\n    accessControlContext.options.buttons.enableAccessControl;\n\n  const hideIfUnauthorized =\n    props.accessControl?.hideIfUnauthorized ??\n    accessControlContext.options.buttons.hideIfUnauthorized;\n\n  const { data: canAccess } = useCan({\n    resource: props.resource?.name,\n    action: props.action === \"clone\" ? \"create\" : props.action,\n    params: { id: props.id, resource: props.resource },\n    queryOptions: {\n      enabled: accessControlEnabled,\n    },\n  });\n\n  const title = React.useMemo(() => {\n    if (canAccess?.can) return \"\";\n    if (canAccess?.reason) return canAccess.reason;\n\n    return translate(\n      \"buttons.notAccessTitle\",\n      \"You don't have permission to access\",\n    );\n  }, [canAccess?.can, canAccess?.reason, translate]);\n\n  const hidden = accessControlEnabled && hideIfUnauthorized && !canAccess?.can;\n\n  const disabled = canAccess?.can === false;\n\n  return {\n    title,\n    hidden,\n    disabled,\n    canAccess,\n  };\n};\n", "import { useTranslate } from \"../../i18n\";\nimport { useDelete } from \"../../data/useDelete\";\nimport { useButtonCanAccess } from \"../button-can-access\";\nimport { useResourceParams } from \"../../use-resource-params\";\nimport { useMutationMode, useWarnAboutChange } from \"../../refine\";\n\nimport type { BaseKey, DeleteOneResponse } from \"../../../contexts/data/types\";\nimport type { CanReturnType } from \"../../../contexts/accessControl/types\";\nimport type { DeleteParams } from \"../../data/useDelete\";\n\nexport type DeleteButtonProps = {\n  resource?: string;\n  id?: BaseKey;\n  dataProviderName?: string;\n  meta?: Record<string, unknown>;\n  accessControl?: {\n    enabled?: boolean;\n    hideIfUnauthorized?: boolean;\n  };\n  onSuccess?: (value: DeleteOneResponse) => void;\n} & Pick<\n  DeleteParams<any, any, any>,\n  \"mutationMode\" | \"successNotification\" | \"errorNotification\" | \"invalidates\"\n>;\n\nexport type DeleteButtonValues = {\n  label: string;\n  title: string;\n  hidden: boolean;\n  loading: boolean;\n  disabled: boolean;\n  canAccess: CanReturnType | undefined;\n  confirmOkLabel: string;\n  cancelLabel: string;\n  confirmTitle: string;\n  onConfirm: () => void;\n};\n\nexport function useDeleteButton(props: DeleteButtonProps): DeleteButtonValues {\n  const translate = useTranslate();\n  const { mutate, isLoading, variables } = useDelete();\n  const { setWarnWhen } = useWarnAboutChange();\n  const { mutationMode } = useMutationMode(props.mutationMode);\n\n  const { id, resource, identifier } = useResourceParams({\n    resource: props.resource,\n    id: props.id,\n  });\n\n  const { title, disabled, hidden, canAccess } = useButtonCanAccess({\n    action: \"delete\",\n    accessControl: props.accessControl,\n    id,\n    resource,\n  });\n\n  const label = translate(\"buttons.delete\", \"Delete\");\n\n  const confirmOkLabel = translate(\"buttons.delete\", \"Delete\");\n\n  const confirmTitle = translate(\"buttons.confirm\", \"Are you sure?\");\n\n  const cancelLabel = translate(\"buttons.cancel\", \"Cancel\");\n\n  const loading = id === variables?.id && isLoading;\n\n  const onConfirm = () => {\n    if (id && identifier) {\n      setWarnWhen(false);\n      mutate(\n        {\n          id,\n          resource: identifier,\n          mutationMode,\n          successNotification: props.successNotification,\n          errorNotification: props.errorNotification,\n          meta: props.meta,\n          metaData: props.meta,\n          dataProviderName: props.dataProviderName,\n          invalidates: props.invalidates,\n        },\n        {\n          onSuccess: props.onSuccess,\n        },\n      );\n    }\n  };\n\n  return {\n    label,\n    title,\n    hidden,\n    disabled,\n    canAccess,\n    loading,\n    confirmOkLabel,\n    cancelLabel,\n    confirmTitle,\n    onConfirm,\n  };\n}\n", "import { useQueryClient } from \"@tanstack/react-query\";\n\nimport { useTranslate } from \"../../i18n\";\nimport { useInvalidate } from \"../../invalidate\";\nimport { useResourceParams } from \"../../use-resource-params\";\nimport { useResource } from \"../../resource\";\nimport { useKeys } from \"../../useKeys\";\nimport { pickDataProvider } from \"../../../definitions\";\n\nimport type { BaseKey } from \"../../../contexts/data/types\";\n\nexport type RefreshButtonProps = {\n  resource?: string;\n  id?: BaseKey;\n  dataProviderName?: string;\n  meta?: Record<string, unknown>;\n};\n\nexport type RefreshButtonValues = {\n  onClick: () => void;\n  label: string;\n  loading: boolean;\n};\n\nexport function useRefreshButton(\n  props: RefreshButtonProps,\n): RefreshButtonValues {\n  const translate = useTranslate();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const queryClient = useQueryClient();\n  const invalidates = useInvalidate();\n\n  const { identifier, id } = useResourceParams({\n    resource: props.resource,\n    id: props.id,\n  });\n\n  const { resources } = useResource();\n\n  const loading = !!queryClient.isFetching({\n    queryKey: keys()\n      .data(pickDataProvider(identifier, props.dataProviderName, resources))\n      .resource(identifier)\n      .action(\"one\")\n      .get(preferLegacyKeys),\n  });\n\n  const onClick = () => {\n    invalidates({\n      id,\n      invalidates: [\"detail\"],\n      dataProviderName: props.dataProviderName,\n      resource: identifier,\n    });\n  };\n\n  const label = translate(\"buttons.refresh\", \"Refresh\");\n\n  return {\n    onClick,\n    label,\n    loading,\n  };\n}\n", "import { useActionableButton } from \"./actionable-button\";\nimport { useNavigationButton } from \"./navigation-button\";\n\nimport type { NavigationButtonProps } from \"./navigation-button\";\nimport type { Prettify } from \"../../contexts/data/types\";\n\nexport { useDeleteButton } from \"./delete-button\";\n\nexport { useRefreshButton } from \"./refresh-button\";\n\nexport const useShowButton = (\n  props: Prettify<Omit<NavigationButtonProps, \"action\">>,\n) => useNavigationButton({ ...props, action: \"show\" });\n\nexport const useEditButton = (\n  props: Prettify<Omit<NavigationButtonProps, \"action\">>,\n) => useNavigationButton({ ...props, action: \"edit\" });\n\nexport const useCloneButton = (\n  props: Prettify<Omit<NavigationButtonProps, \"action\">>,\n) => useNavigationButton({ ...props, action: \"clone\" });\n\nexport const useCreateButton = (\n  props: Prettify<Omit<NavigationButtonProps, \"action\" | \"id\">>,\n) => useNavigationButton({ ...props, action: \"create\" });\n\nexport const useListButton = (\n  props: Prettify<Omit<NavigationButtonProps, \"action\" | \"id\">>,\n) => useNavigationButton({ ...props, action: \"list\" });\n\nexport const useSaveButton = () => useActionableButton({ type: \"save\" });\n\nexport const useExportButton = () => useActionableButton({ type: \"export\" });\n\nexport const useImportButton = () => useActionableButton({ type: \"import\" });\n", "import React, { useState } from \"react\";\n\nimport { useLogin, useTranslate } from \"@hooks\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\nexport interface ILoginForm {\n  username: string;\n  password: string;\n}\n\n/**\n * @deprecated LoginPage is deprecated. Use AuthPage instead. @see {@link https://refine.dev/docs/core/components/auth-page} for more details.\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#loginpage} for more details.\n */\nexport const LoginPage: React.FC = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const translate = useTranslate();\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: login } = useLogin<ILoginForm>({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  return (\n    <>\n      <h1>{translate(\"pages.login.title\", \"Sign in your account\")}</h1>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          login({ username, password });\n        }}\n      >\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                {translate(\"pages.login.username\", undefined, \"username\")}:\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  size={20}\n                  autoCorrect=\"off\"\n                  spellCheck={false}\n                  autoCapitalize=\"off\"\n                  autoFocus\n                  required\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                {translate(\"pages.login.password\", undefined, \"password\")}:\n              </td>\n              <td>\n                <input\n                  type=\"password\"\n                  required\n                  size={20}\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <br />\n        <input type=\"submit\" value=\"login\" />\n      </form>\n    </>\n  );\n};\n", "import React, {\n  type DetailedHTMLProps,\n  type HTMLAttributes,\n  type FormHTMLAttributes,\n} from \"react\";\n\nimport {\n  ForgotPasswordPage,\n  LoginPage,\n  RegisterPage,\n  UpdatePasswordPage,\n} from \"./components\";\n\nimport type { AuthPageProps } from \"./types\";\n\nexport type DivPropsType = DetailedHTMLProps<\n  HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement\n>;\nexport type FormPropsType = DetailedHTMLProps<\n  FormHTMLAttributes<HTMLFormElement>,\n  HTMLFormElement\n>;\n\nexport type AuthProps = AuthPageProps<\n  DivPropsType,\n  DivPropsType,\n  FormPropsType\n>;\n\n/**\n * **refine** has a default auth page form which is served on `/login` route when the `authProvider` configuration is provided.\n * @param title is not implemented yet.\n * @see {@link https://refine.dev/docs/api-reference/core/components/auth-page/} for more details.\n */\nexport const AuthPage: React.FC<AuthProps> = (props) => {\n  const { type } = props;\n  const renderView = () => {\n    switch (type) {\n      case \"register\":\n        return <RegisterPage {...props} />;\n      case \"forgotPassword\":\n        return <ForgotPasswordPage {...props} />;\n      case \"updatePassword\":\n        return <UpdatePasswordPage {...props} />;\n      default:\n        return <LoginPage {...props} />;\n    }\n  };\n\n  return <>{renderView()}</>;\n};\n", "import React, { useState } from \"react\";\n\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\nimport {\n  useLink,\n  useLogin,\n  useRouterContext,\n  useRouterType,\n  useTranslate,\n} from \"@hooks\";\n\nimport type { DivPropsType, FormPropsType } from \"../..\";\nimport type { LoginFormTypes, LoginPageProps } from \"../../types\";\n\ntype LoginProps = LoginPageProps<DivPropsType, DivPropsType, FormPropsType>;\n\nexport const LoginPage: React.FC<LoginProps> = ({\n  providers,\n  registerLink,\n  forgotPasswordLink,\n  rememberMe,\n  contentProps,\n  wrapperProps,\n  renderContent,\n  formProps,\n  title = undefined,\n  hideForm,\n  mutationVariables,\n}) => {\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [remember, setRemember] = useState(false);\n\n  const translate = useTranslate();\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: login } = useLogin<LoginFormTypes>({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const renderLink = (link: string, text?: string) => {\n    return <ActiveLink to={link}>{text}</ActiveLink>;\n  };\n\n  const renderProviders = () => {\n    if (providers) {\n      return providers.map((provider) => (\n        <div\n          key={provider.name}\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginBottom: \"1rem\",\n          }}\n        >\n          <button\n            onClick={() =>\n              login({\n                ...mutationVariables,\n                providerName: provider.name,\n              })\n            }\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            {provider?.icon}\n            {provider.label ?? <label>{provider.label}</label>}\n          </button>\n        </div>\n      ));\n    }\n    return null;\n  };\n\n  const content = (\n    <div {...contentProps}>\n      <h1 style={{ textAlign: \"center\" }}>\n        {translate(\"pages.login.title\", \"Sign in to your account\")}\n      </h1>\n      {renderProviders()}\n      {!hideForm && (\n        <>\n          <hr />\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              login({ ...mutationVariables, email, password, remember });\n            }}\n            {...formProps}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                padding: 25,\n              }}\n            >\n              <label htmlFor=\"email-input\">\n                {translate(\"pages.login.fields.email\", \"Email\")}\n              </label>\n              <input\n                id=\"email-input\"\n                name=\"email\"\n                type=\"text\"\n                size={20}\n                autoCorrect=\"off\"\n                spellCheck={false}\n                autoCapitalize=\"off\"\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <label htmlFor=\"password-input\">\n                {translate(\"pages.login.fields.password\", \"Password\")}\n              </label>\n              <input\n                id=\"password-input\"\n                type=\"password\"\n                name=\"password\"\n                required\n                size={20}\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              {rememberMe ?? (\n                <>\n                  <label htmlFor=\"remember-me-input\">\n                    {translate(\"pages.login.buttons.rememberMe\", \"Remember me\")}\n                    <input\n                      id=\"remember-me-input\"\n                      name=\"remember\"\n                      type=\"checkbox\"\n                      size={20}\n                      checked={remember}\n                      value={remember.toString()}\n                      onChange={() => {\n                        setRemember(!remember);\n                      }}\n                    />\n                  </label>\n                </>\n              )}\n              <br />\n              {forgotPasswordLink ??\n                renderLink(\n                  \"/forgot-password\",\n                  translate(\n                    \"pages.login.buttons.forgotPassword\",\n                    \"Forgot password?\",\n                  ),\n                )}\n              <input\n                type=\"submit\"\n                value={translate(\"pages.login.signin\", \"Sign in\")}\n              />\n              {registerLink ?? (\n                <span>\n                  {translate(\n                    \"pages.login.buttons.noAccount\",\n                    \"Don’t have an account?\",\n                  )}{\" \"}\n                  {renderLink(\n                    \"/register\",\n                    translate(\"pages.login.register\", \"Sign up\"),\n                  )}\n                </span>\n              )}\n            </div>\n          </form>\n        </>\n      )}\n      {registerLink !== false && hideForm && (\n        <div style={{ textAlign: \"center\" }}>\n          {translate(\"pages.login.buttons.noAccount\", \"Don’t have an account?\")}{\" \"}\n          {renderLink(\n            \"/register\",\n            translate(\"pages.login.register\", \"Sign up\"),\n          )}\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div {...wrapperProps}>\n      {renderContent ? renderContent(content, title) : content}\n    </div>\n  );\n};\n", "import React, { useState } from \"react\";\n\nimport {\n  useLink,\n  useRegister,\n  useRouterContext,\n  useRouterType,\n  useTranslate,\n} from \"@hooks\";\n\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\n\nimport type { DivPropsType, FormPropsType } from \"../..\";\nimport type { RegisterPageProps } from \"../../types\";\n\ntype RegisterProps = RegisterPageProps<\n  DivPropsType,\n  DivPropsType,\n  FormPropsType\n>;\n\nexport const RegisterPage: React.FC<RegisterProps> = ({\n  providers,\n  loginLink,\n  wrapperProps,\n  contentProps,\n  renderContent,\n  formProps,\n  title = undefined,\n  hideForm,\n  mutationVariables,\n}) => {\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const translate = useTranslate();\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: register, isLoading } = useRegister({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const renderLink = (link: string, text?: string) => {\n    return <ActiveLink to={link}>{text}</ActiveLink>;\n  };\n\n  const renderProviders = () => {\n    if (providers) {\n      return providers.map((provider) => (\n        <div\n          key={provider.name}\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginBottom: \"1rem\",\n          }}\n        >\n          <button\n            onClick={() =>\n              register({\n                ...mutationVariables,\n                providerName: provider.name,\n              })\n            }\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            {provider?.icon}\n            {provider.label ?? <label>{provider.label}</label>}\n          </button>\n        </div>\n      ));\n    }\n    return null;\n  };\n\n  const content = (\n    <div {...contentProps}>\n      <h1 style={{ textAlign: \"center\" }}>\n        {translate(\"pages.register.title\", \"Sign up for your account\")}\n      </h1>\n      {renderProviders()}\n      {!hideForm && (\n        <>\n          <hr />\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              register({ ...mutationVariables, email, password });\n            }}\n            {...formProps}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                padding: 25,\n              }}\n            >\n              <label htmlFor=\"email-input\">\n                {translate(\"pages.register.fields.email\", \"Email\")}\n              </label>\n              <input\n                id=\"email-input\"\n                name=\"email\"\n                type=\"email\"\n                size={20}\n                autoCorrect=\"off\"\n                spellCheck={false}\n                autoCapitalize=\"off\"\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <label htmlFor=\"password-input\">\n                {translate(\"pages.register.fields.password\", \"Password\")}\n              </label>\n              <input\n                id=\"password-input\"\n                name=\"password\"\n                type=\"password\"\n                required\n                size={20}\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <input\n                type=\"submit\"\n                value={translate(\"pages.register.buttons.submit\", \"Sign up\")}\n                disabled={isLoading}\n              />\n              {loginLink ?? (\n                <>\n                  <span>\n                    {translate(\n                      \"pages.login.buttons.haveAccount\",\n                      \"Have an account?\",\n                    )}{\" \"}\n                    {renderLink(\n                      \"/login\",\n                      translate(\"pages.login.signin\", \"Sign in\"),\n                    )}\n                  </span>\n                </>\n              )}\n            </div>\n          </form>\n        </>\n      )}\n      {loginLink !== false && hideForm && (\n        <div style={{ textAlign: \"center\" }}>\n          {translate(\"pages.login.buttons.haveAccount\", \"Have an account?\")}{\" \"}\n          {renderLink(\"/login\", translate(\"pages.login.signin\", \"Sign in\"))}\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div {...wrapperProps}>\n      {renderContent ? renderContent(content, title) : content}\n    </div>\n  );\n};\n", "import React, { useState } from \"react\";\n\nimport {\n  useForgotPassword,\n  useLink,\n  useRouterContext,\n  useRouterType,\n  useTranslate,\n} from \"@hooks\";\n\nimport type { DivPropsType, FormPropsType } from \"../..\";\nimport type {\n  ForgotPasswordFormTypes,\n  ForgotPasswordPageProps,\n} from \"../../types\";\n\ntype ForgotPasswordProps = ForgotPasswordPageProps<\n  DivPropsType,\n  DivPropsType,\n  FormPropsType\n>;\n\nexport const ForgotPasswordPage: React.FC<ForgotPasswordProps> = ({\n  loginLink,\n  wrapperProps,\n  contentProps,\n  renderContent,\n  formProps,\n  title = undefined,\n  mutationVariables,\n}) => {\n  const translate = useTranslate();\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  const [email, setEmail] = useState(\"\");\n\n  const { mutate: forgotPassword, isLoading } =\n    useForgotPassword<ForgotPasswordFormTypes>();\n\n  const renderLink = (link: string, text?: string) => {\n    return <ActiveLink to={link}>{text}</ActiveLink>;\n  };\n\n  const content = (\n    <div {...contentProps}>\n      <h1 style={{ textAlign: \"center\" }}>\n        {translate(\"pages.forgotPassword.title\", \"Forgot your password?\")}\n      </h1>\n      <hr />\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          forgotPassword({ ...mutationVariables, email });\n        }}\n        {...formProps}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            padding: 25,\n          }}\n        >\n          <label htmlFor=\"email-input\">\n            {translate(\"pages.forgotPassword.fields.email\", \"Email\")}\n          </label>\n          <input\n            id=\"email-input\"\n            name=\"email\"\n            type=\"mail\"\n            autoCorrect=\"off\"\n            spellCheck={false}\n            autoCapitalize=\"off\"\n            required\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <input\n            type=\"submit\"\n            disabled={isLoading}\n            value={translate(\n              \"pages.forgotPassword.buttons.submit\",\n              \"Send reset instructions\",\n            )}\n          />\n          <br />\n          {loginLink ?? (\n            <span>\n              {translate(\n                \"pages.register.buttons.haveAccount\",\n                \"Have an account? \",\n              )}{\" \"}\n              {renderLink(\"/login\", translate(\"pages.login.signin\", \"Sign in\"))}\n            </span>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n\n  return (\n    <div {...wrapperProps}>\n      {renderContent ? renderContent(content, title) : content}\n    </div>\n  );\n};\n", "import React, { useState } from \"react\";\n\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\nimport { useTranslate, useUpdatePassword } from \"@hooks\";\n\nimport type { DivPropsType, FormPropsType } from \"../..\";\nimport type {\n  UpdatePasswordFormTypes,\n  UpdatePasswordPageProps,\n} from \"../../types\";\n\ntype UpdatePasswordProps = UpdatePasswordPageProps<\n  DivPropsType,\n  DivPropsType,\n  FormPropsType\n>;\n\nexport const UpdatePasswordPage: React.FC<UpdatePasswordProps> = ({\n  wrapperProps,\n  contentProps,\n  renderContent,\n  formProps,\n  title = undefined,\n  mutationVariables,\n}) => {\n  const translate = useTranslate();\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: updatePassword, isLoading } =\n    useUpdatePassword<UpdatePasswordFormTypes>({\n      v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const content = (\n    <div {...contentProps}>\n      <h1 style={{ textAlign: \"center\" }}>\n        {translate(\"pages.updatePassword.title\", \"Update Password\")}\n      </h1>\n      <hr />\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          updatePassword({\n            ...mutationVariables,\n            password: newPassword,\n            confirmPassword,\n          });\n        }}\n        {...formProps}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            padding: 25,\n          }}\n        >\n          <label htmlFor=\"password-input\">\n            {translate(\"pages.updatePassword.fields.password\", \"New Password\")}\n          </label>\n          <input\n            id=\"password-input\"\n            name=\"password\"\n            type=\"password\"\n            required\n            size={20}\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n          />\n          <label htmlFor=\"confirm-password-input\">\n            {translate(\n              \"pages.updatePassword.fields.confirmPassword\",\n              \"Confirm New Password\",\n            )}\n          </label>\n          <input\n            id=\"confirm-password-input\"\n            name=\"confirmPassword\"\n            type=\"password\"\n            required\n            size={20}\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n          <input\n            type=\"submit\"\n            disabled={isLoading}\n            value={translate(\"pages.updatePassword.buttons.submit\", \"Update\")}\n          />\n        </div>\n      </form>\n    </div>\n  );\n\n  return (\n    <div {...wrapperProps}>\n      {renderContent ? renderContent(content, title) : content}\n    </div>\n  );\n};\n", "import React from \"react\";\n\n/**\n * **refine** shows a default ready page on root route when no `resources` is passed to the `<Refine>` component as a property.\n *\n * @deprecated `ReadyPage` is deprecated and will be removed in the next major release.\n */\nexport const ReadyPage: React.FC = () => {\n  return (\n    <>\n      <h1>Welcome on board</h1>\n      <p>Your configuration is completed.</p>\n      <p>\n        Now you can get started by adding your resources to the{\" \"}\n        <code>`resources`</code> property of <code>{\"`<Refine>`\"}</code>\n      </p>\n      <div style={{ display: \"flex\", gap: 8 }}>\n        <a href=\"https://refine.dev\" target=\"_blank\" rel=\"noreferrer\">\n          <button>Documentation</button>\n        </a>\n        <a href=\"https://refine.dev/examples\" target=\"_blank\" rel=\"noreferrer\">\n          <button>Examples</button>\n        </a>\n        <a href=\"https://discord.gg/refine\" target=\"_blank\" rel=\"noreferrer\">\n          <button>Community</button>\n        </a>\n      </div>\n    </>\n  );\n};\n", "import React from \"react\";\nimport { ConfigSuccessPage } from \"../config-success\";\nimport { useRefineContext } from \"@hooks/refine\";\nimport { ConfigErrorPage } from \"../config-error\";\n\nexport const WelcomePage = () => {\n  const { __initialized } = useRefineContext();\n\n  return (\n    <>\n      <ConfigSuccessPage />\n      {!__initialized && <ConfigErrorPage />}\n    </>\n  );\n};\n", "import React, { useState } from \"react\";\n\nimport { useMediaQuery } from \"@definitions/helpers\";\n\ntype CardInfo = {\n  title: string;\n  description: string;\n  link: string;\n  iconUrl: string;\n};\n\nconst cards: CardInfo[] = [\n  {\n    title: \"Documentation\",\n    description:\n      \"Learn about the technical details of using Refine in your projects.\",\n    link: \"https://refine.dev/docs\",\n    iconUrl:\n      \"https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/book.svg\",\n  },\n  {\n    title: \"Tutorial\",\n    description:\n      \"Learn how to use Refine by building a fully-functioning CRUD app, from scratch to full launch.\",\n    link: \"https://refine.dev/tutorial\",\n    iconUrl:\n      \"https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/hat.svg\",\n  },\n  {\n    title: \"Templates\",\n    description:\n      \"Explore a range of pre-built templates, perfect everything from admin panels to dashboards and CRMs.\",\n    link: \"https://refine.dev/templates\",\n    iconUrl:\n      \"https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/application.svg\",\n  },\n  {\n    title: \"Community\",\n    description: \"Join our Discord community and keep up with the latest news.\",\n    link: \"https://discord.gg/refine\",\n    iconUrl:\n      \"https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/discord.svg\",\n  },\n];\n\n/**\n * It is a page that welcomes you after the configuration is completed.\n */\nexport const ConfigSuccessPage: React.FC = () => {\n  const isTablet = useMediaQuery(\"(max-width: 1010px)\");\n  const isMobile = useMediaQuery(\"(max-width: 650px)\");\n\n  const getGridTemplateColumns = () => {\n    if (isMobile) {\n      return \"1, 280px\";\n    }\n    if (isTablet) {\n      return \"2, 280px\";\n    }\n    return \"4, 1fr\";\n  };\n\n  const getHeaderFontSize = () => {\n    if (isMobile) {\n      return \"32px\";\n    }\n    if (isTablet) {\n      return \"40px\";\n    }\n    return \"48px\";\n  };\n\n  const getSubHeaderFontSize = () => {\n    if (isMobile) {\n      return \"16px\";\n    }\n    if (isTablet) {\n      return \"20px\";\n    }\n    return \"24px\";\n  };\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        zIndex: 10,\n        inset: 0,\n        overflow: \"auto\",\n        width: \"100dvw\",\n        height: \"100dvh\",\n      }}\n    >\n      <div\n        style={{\n          overflow: \"hidden\",\n          position: \"relative\",\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n          background: isMobile\n            ? \"url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/landing-noise.webp), radial-gradient(88.89% 50% at 50% 100%, rgba(38, 217, 127, 0.10) 0%, rgba(38, 217, 127, 0.00) 100%), radial-gradient(88.89% 50% at 50% 0%, rgba(71, 235, 235, 0.15) 0%, rgba(71, 235, 235, 0.00) 100%), #1D1E30\"\n            : isTablet\n              ? \"url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/landing-noise.webp), radial-gradient(66.67% 50% at 50% 100%, rgba(38, 217, 127, 0.10) 0%, rgba(38, 217, 127, 0.00) 100%), radial-gradient(66.67% 50% at 50% 0%, rgba(71, 235, 235, 0.15) 0%, rgba(71, 235, 235, 0.00) 100%), #1D1E30\"\n              : \"url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/landing-noise.webp), radial-gradient(35.56% 50% at 50% 100%, rgba(38, 217, 127, 0.12) 0%, rgba(38, 217, 127, 0) 100%), radial-gradient(35.56% 50% at 50% 0%, rgba(71, 235, 235, 0.18) 0%, rgba(71, 235, 235, 0) 100%), #1D1E30\",\n          minHeight: \"100%\",\n          minWidth: \"100%\",\n          fontFamily: \"Arial\",\n          color: \"#FFFFFF\",\n        }}\n      >\n        <div\n          style={{\n            zIndex: 2,\n            position: \"absolute\",\n            width: isMobile ? \"400px\" : \"800px\",\n            height: \"552px\",\n            opacity: \"0.5\",\n            background:\n              \"url(https://refine.ams3.cdn.digitaloceanspaces.com/assets/welcome-page-hexagon.png)\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"contain\",\n            top: \"0\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n          }}\n        />\n        <div style={{ height: isMobile ? \"40px\" : \"80px\" }} />\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <div\n            style={{\n              backgroundRepeat: \"no-repeat\",\n              backgroundSize: isMobile ? \"112px 58px\" : \"224px 116px\",\n              backgroundImage:\n                \"url(https://refine.ams3.cdn.digitaloceanspaces.com/assets/refine-logo.svg)\",\n              width: isMobile ? 112 : 224,\n              height: isMobile ? 58 : 116,\n            }}\n          />\n        </div>\n        <div\n          style={{\n            height: isMobile ? \"120px\" : isTablet ? \"200px\" : \"30vh\",\n            minHeight: isMobile ? \"120px\" : isTablet ? \"200px\" : \"200px\",\n          }}\n        />\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"16px\",\n            textAlign: \"center\",\n          }}\n        >\n          <h1\n            style={{\n              fontSize: getHeaderFontSize(),\n              fontWeight: 700,\n              margin: \"0px\",\n            }}\n          >\n            Welcome Aboard!\n          </h1>\n          <h4\n            style={{\n              fontSize: getSubHeaderFontSize(),\n              fontWeight: 400,\n              margin: \"0px\",\n            }}\n          >\n            Your configuration is completed.\n          </h4>\n        </div>\n        <div style={{ height: \"64px\" }} />\n        <div\n          style={{\n            display: \"grid\",\n            gridTemplateColumns: `repeat(${getGridTemplateColumns()})`,\n            justifyContent: \"center\",\n            gap: \"48px\",\n            paddingRight: \"16px\",\n            paddingLeft: \"16px\",\n            paddingBottom: \"32px\",\n            maxWidth: \"976px\",\n            margin: \"auto\",\n          }}\n        >\n          {cards.map((card) => (\n            <Card key={`welcome-page-${card.title}`} card={card} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype CardProps = {\n  card: CardInfo;\n};\n\nconst Card: React.FC<CardProps> = ({ card }) => {\n  const { title, description, iconUrl, link } = card;\n\n  const [isHover, setIsHover] = useState(false);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"16px\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <a\n          onPointerEnter={() => setIsHover(true)}\n          onPointerLeave={() => setIsHover(false)}\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            color: \"#fff\",\n            textDecoration: \"none\",\n          }}\n          href={link}\n        >\n          <div\n            style={{\n              width: \"16px\",\n              height: \"16px\",\n              backgroundPosition: \"center\",\n              backgroundSize: \"contain\",\n              backgroundRepeat: \"no-repeat\",\n              backgroundImage: `url(${iconUrl})`,\n            }}\n          />\n          <span\n            style={{\n              fontSize: \"16px\",\n              fontWeight: 700,\n              marginLeft: \"13px\",\n              marginRight: \"14px\",\n            }}\n          >\n            {title}\n          </span>\n          <svg\n            style={{\n              transition:\n                \"transform 0.5s ease-in-out, opacity 0.2s ease-in-out\",\n              ...(isHover && {\n                transform: \"translateX(4px)\",\n                opacity: 1,\n              }),\n            }}\n            width=\"12\"\n            height=\"8\"\n            fill=\"none\"\n            opacity=\"0.5\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M7.293.293a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1 0 1.414l-3 3a1 1 0 0 1-1.414-1.414L8.586 5H1a1 1 0 0 1 0-2h7.586L7.293 1.707a1 1 0 0 1 0-1.414Z\"\n              fill=\"#fff\"\n            />\n          </svg>\n        </a>\n      </div>\n      <span\n        style={{\n          fontSize: \"12px\",\n          opacity: 0.5,\n          lineHeight: \"16px\",\n        }}\n      >\n        {description}\n      </span>\n    </div>\n  );\n};\n", "import React from \"react\";\n\nexport const ConfigErrorPage = () => {\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        zIndex: 11,\n        inset: 0,\n        overflow: \"auto\",\n        width: \"100dvw\",\n        height: \"100dvh\",\n      }}\n    >\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          padding: \"24px\",\n          background: \"#14141FBF\",\n          backdropFilter: \"blur(3px)\",\n        }}\n      >\n        <div\n          style={{\n            maxWidth: \"640px\",\n            width: \"100%\",\n            background: \"#1D1E30\",\n            borderRadius: \"16px\",\n            border: \"1px solid #303450\",\n            boxShadow: \"0px 0px 120px -24px #000000\",\n          }}\n        >\n          <div\n            style={{\n              padding: \"16px 20px\",\n              borderBottom: \"1px solid #303450\",\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: \"8px\",\n              position: \"relative\",\n            }}\n          >\n            <ErrorGradient\n              style={{\n                position: \"absolute\",\n                left: 0,\n                top: 0,\n              }}\n            />\n            <div\n              style={{\n                lineHeight: \"24px\",\n                fontSize: \"16px\",\n                color: \"#FFFFFF\",\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: \"16px\",\n              }}\n            >\n              <ErrorIcon />\n              <span\n                style={{\n                  fontWeight: 400,\n                }}\n              >\n                Configuration Error\n              </span>\n            </div>\n          </div>\n          <div\n            style={{\n              padding: \"20px\",\n              color: \"#A3ADC2\",\n              lineHeight: \"20px\",\n              fontSize: \"14px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: \"20px\",\n            }}\n          >\n            <p\n              style={{\n                margin: 0,\n                padding: 0,\n                lineHeight: \"28px\",\n                fontSize: \"16px\",\n              }}\n            >\n              <code\n                style={{\n                  display: \"inline-block\",\n                  background: \"#30345080\",\n                  padding: \"0 4px\",\n                  lineHeight: \"24px\",\n                  fontSize: \"16px\",\n                  borderRadius: \"4px\",\n                  color: \"#FFFFFF\",\n                }}\n              >\n                {\"<Refine />\"}\n              </code>{\" \"}\n              is not initialized. Please make sure you have it mounted in your\n              app and placed your components inside it.\n            </p>\n            <div>\n              <ExampleImplementation />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ExampleImplementation = () => {\n  return (\n    <pre\n      style={{\n        display: \"block\",\n        overflowX: \"auto\",\n        borderRadius: \"8px\",\n        fontSize: \"14px\",\n        lineHeight: \"24px\",\n        backgroundColor: \"#14141F\",\n        color: \"#E5ECF2\",\n        padding: \"16px\",\n        margin: \"0\",\n        maxHeight: \"400px\",\n        overflow: \"auto\",\n      }}\n    >\n      <span style={{ color: \"#FF7B72\" }}>import</span> {\"{\"} Refine, WelcomePage{\" \"}\n      {\"}\"} <span style={{ color: \"#FF7B72\" }}>from</span>{\" \"}\n      <span style={{ color: \"#A5D6FF\" }}>{'\"@refinedev/core\"'}</span>;{\"\\n\"}\n      {\"\\n\"}\n      <span style={{ color: \"#FF7B72\" }}>export</span>{\" \"}\n      <span style={{ color: \"#FF7B72\" }}>default</span>{\" \"}\n      <span>\n        <span style={{ color: \"#FF7B72\" }}>function</span>{\" \"}\n        <span style={{ color: \"#FFA657\" }}>App</span>\n        (\n        <span style={{ color: \"rgb(222, 147, 95)\" }} />){\" \"}\n      </span>\n      {\"{\"}\n      {\"\\n\"}\n      {\"  \"}\n      <span style={{ color: \"#FF7B72\" }}>return</span> ({\"\\n\"}\n      {\"    \"}\n      <span>\n        <span style={{ color: \"#79C0FF\" }}>\n          &lt;\n          <span style={{ color: \"#79C0FF\" }}>Refine</span>\n          {\"\\n\"}\n          {\"      \"}\n          <span style={{ color: \"#E5ECF2\", opacity: 0.6 }}>\n            {\"// \"}\n            <span>...</span>\n          </span>\n          {\"\\n\"}\n          {\"    \"}&gt;\n        </span>\n        {\"\\n\"}\n        {\"      \"}\n        <span style={{ opacity: 0.6 }}>\n          {\"{\"}\n          {\"/* ... */\"}\n          {\"}\"}\n        </span>\n        {\"\\n\"}\n        {\"      \"}\n        <span style={{ color: \"#79C0FF\" }}>\n          &lt;\n          <span style={{ color: \"#79C0FF\" }}>WelcomePage</span> /&gt;\n        </span>\n        {\"\\n\"}\n        {\"      \"}\n        <span style={{ opacity: 0.6 }}>\n          {\"{\"}\n          {\"/* ... */\"}\n          {\"}\"}\n        </span>\n        {\"\\n\"}\n        {\"    \"}\n        <span style={{ color: \"#79C0FF\" }}>\n          &lt;/\n          <span style={{ color: \"#79C0FF\" }}>Refine</span>\n          &gt;\n        </span>\n      </span>\n      {\"\\n\"}\n      {\"  \"});{\"\\n\"}\n      {\"}\"}\n    </pre>\n  );\n};\n\nconst ErrorGradient = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={204}\n    height={56}\n    viewBox=\"0 0 204 56\"\n    fill=\"none\"\n    {...props}\n  >\n    <path fill=\"url(#welcome-page-error-gradient-a)\" d=\"M12 0H0v12L12 0Z\" />\n    <path\n      fill=\"url(#welcome-page-error-gradient-b)\"\n      d=\"M28 0h-8L0 20v8L28 0Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-c)\"\n      d=\"M36 0h8L0 44v-8L36 0Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-d)\"\n      d=\"M60 0h-8L0 52v4h4L60 0Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-e)\"\n      d=\"M68 0h8L20 56h-8L68 0Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-f)\"\n      d=\"M92 0h-8L28 56h8L92 0Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-g)\"\n      d=\"M100 0h8L52 56h-8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-h)\"\n      d=\"M124 0h-8L60 56h8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-i)\"\n      d=\"M140 0h-8L76 56h8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-j)\"\n      d=\"M132 0h8L84 56h-8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-k)\"\n      d=\"M156 0h-8L92 56h8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-l)\"\n      d=\"M164 0h8l-56 56h-8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-m)\"\n      d=\"M188 0h-8l-56 56h8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-n)\"\n      d=\"M204 0h-8l-56 56h8l56-56Z\"\n    />\n    <defs>\n      <radialGradient\n        id=\"welcome-page-error-gradient-a\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-b\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-c\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-d\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-e\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-f\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-g\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-h\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-i\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-j\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-k\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-l\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-m\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-n\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n    </defs>\n  </svg>\n);\n\nconst ErrorIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={16}\n    height={16}\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"#FF4C4D\"\n      fillRule=\"evenodd\"\n      d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"#fff\"\n      fillRule=\"evenodd\"\n      d=\"M7 8a1 1 0 1 0 2 0V5a1 1 0 1 0-2 0v3Zm0 3a1 1 0 1 1 2 0 1 1 0 0 1-2 0Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\n", "import React from \"react\";\n\nimport { useQuerySubscription } from \"@refinedev/devtools-internal\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\n\nimport { ReadyPage as DefaultReadyPage, RouteChangeHandler } from \"@components\";\nimport { Telemetry } from \"@components/telemetry\";\nimport { handleRefineOptions } from \"@definitions\";\nimport { useDeepMemo } from \"@hooks/deepMemo\";\n\nimport { AccessControlContextProvider } from \"../../../contexts/accessControl\";\nimport { AuditLogContextProvider } from \"../../../contexts/auditLog\";\nimport {\n  AuthBindingsContextProvider,\n  LegacyAuthContextProvider,\n} from \"../../../contexts/auth\";\nimport { DataContextProvider } from \"../../../contexts/data\";\nimport { I18nContextProvider } from \"../../../contexts/i18n\";\nimport { LiveContextProvider } from \"../../../contexts/live\";\nimport { NotificationContextProvider } from \"../../../contexts/notification\";\nimport { RefineContextProvider } from \"../../../contexts/refine\";\nimport { ResourceContextProvider } from \"../../../contexts/resource\";\nimport { RouterContextProvider } from \"../../../contexts/router\";\nimport { LegacyRouterContextProvider } from \"../../../contexts/router/legacy\";\nimport { RouterPickerProvider } from \"../../../contexts/router/picker\";\nimport { UndoableQueueContextProvider } from \"../../../contexts/undoableQueue\";\nimport { UnsavedWarnContextProvider } from \"../../../contexts/unsavedWarn\";\n\nimport type { RefineProps } from \"../../../contexts/refine/types\";\nimport { useRouterMisuseWarning } from \"../../../hooks/router/use-router-misuse-warning/index\";\n\n/**\n * {@link https://refine.dev/docs/api-reference/core/components/refine-config `<Refine> component`} is the entry point of a refine app.\n * It is where the highest level of configuration of the app occurs.\n * Only a dataProvider is required to bootstrap the app. After adding a dataProvider, resources can be added as property.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config} for more details.\n */\nexport const Refine: React.FC<RefineProps> = ({\n  legacyAuthProvider,\n  authProvider,\n  dataProvider,\n  legacyRouterProvider,\n  routerProvider,\n  notificationProvider,\n  accessControlProvider,\n  auditLogProvider,\n  resources,\n  DashboardPage,\n  ReadyPage,\n  LoginPage,\n  catchAll,\n  children,\n  liveProvider,\n  i18nProvider,\n  Title,\n  Layout,\n  Sider,\n  Header,\n  Footer,\n  OffLayoutArea,\n  onLiveEvent,\n  options,\n}) => {\n  const {\n    optionsWithDefaults,\n    disableTelemetryWithDefault,\n    reactQueryWithDefaults,\n  } = handleRefineOptions({\n    options,\n  });\n\n  const queryClient = useDeepMemo(() => {\n    if (reactQueryWithDefaults.clientConfig instanceof QueryClient) {\n      return reactQueryWithDefaults.clientConfig;\n    }\n\n    return new QueryClient({\n      ...reactQueryWithDefaults.clientConfig,\n      defaultOptions: {\n        ...reactQueryWithDefaults.clientConfig.defaultOptions,\n        queries: {\n          refetchOnWindowFocus: false,\n          keepPreviousData: true,\n          ...reactQueryWithDefaults.clientConfig.defaultOptions?.queries,\n        },\n      },\n    });\n  }, [reactQueryWithDefaults.clientConfig]);\n\n  useQuerySubscription(queryClient);\n\n  const useNotificationProviderValues = React.useMemo(() => {\n    return typeof notificationProvider === \"function\"\n      ? notificationProvider\n      : () => notificationProvider;\n  }, [notificationProvider]);\n\n  const notificationProviderContextValues = useNotificationProviderValues();\n\n  /**\n   * Warn our users if they are using the old way of routing in the wrong prop.\n   */\n  useRouterMisuseWarning(routerProvider);\n  /** */\n\n  /**\n   * `<ReadyPage />` is only used in the legacy routing and is not used in the new routing.\n   * If `legacyRouterProvider` is provided and `routerProvider` is not, we'll check for the `resources` prop to be empty.\n   * If `resources` is empty, then we'll render `<ReadyPage />` component.\n   */\n  if (\n    legacyRouterProvider &&\n    !routerProvider &&\n    (resources ?? []).length === 0\n  ) {\n    return ReadyPage ? <ReadyPage /> : <DefaultReadyPage />;\n  }\n\n  /** Router\n   *\n   * Handle routing from `RouterContextProvider` and `router` prop for the brand new way\n   * If `router` is not provided, then we'r checking for `routerProvider` prop\n   * If `routerProvider` is provided, then `RouterContextProvider` is used\n   * If none of them is provided, then `RouterContextProvider` is used because it supports undefined router\n   *\n   * `RouterContextProvider` is skipped whenever possible and by this way,\n   * we can achieve backward compability only when its provided by user\n   *\n   */\n  const { RouterComponent = React.Fragment } = !routerProvider\n    ? legacyRouterProvider ?? {}\n    : {};\n  /** */\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <NotificationContextProvider {...notificationProviderContextValues}>\n        <LegacyAuthContextProvider\n          {...(legacyAuthProvider ?? {})}\n          isProvided={Boolean(legacyAuthProvider)}\n        >\n          <AuthBindingsContextProvider\n            {...(authProvider ?? {})}\n            isProvided={Boolean(authProvider)}\n          >\n            <DataContextProvider dataProvider={dataProvider}>\n              <LiveContextProvider liveProvider={liveProvider}>\n                <RouterPickerProvider\n                  value={\n                    legacyRouterProvider && !routerProvider ? \"legacy\" : \"new\"\n                  }\n                >\n                  <RouterContextProvider router={routerProvider}>\n                    <LegacyRouterContextProvider {...legacyRouterProvider}>\n                      <ResourceContextProvider resources={resources ?? []}>\n                        <I18nContextProvider i18nProvider={i18nProvider}>\n                          <AccessControlContextProvider\n                            {...(accessControlProvider ?? {})}\n                          >\n                            <AuditLogContextProvider\n                              {...(auditLogProvider ?? {})}\n                            >\n                              <UndoableQueueContextProvider>\n                                <RefineContextProvider\n                                  mutationMode={\n                                    optionsWithDefaults.mutationMode\n                                  }\n                                  warnWhenUnsavedChanges={\n                                    optionsWithDefaults.warnWhenUnsavedChanges\n                                  }\n                                  syncWithLocation={\n                                    optionsWithDefaults.syncWithLocation\n                                  }\n                                  Title={Title}\n                                  undoableTimeout={\n                                    optionsWithDefaults.undoableTimeout\n                                  }\n                                  catchAll={catchAll}\n                                  DashboardPage={DashboardPage}\n                                  LoginPage={LoginPage}\n                                  Layout={Layout}\n                                  Sider={Sider}\n                                  Footer={Footer}\n                                  Header={Header}\n                                  OffLayoutArea={OffLayoutArea}\n                                  hasDashboard={!!DashboardPage}\n                                  liveMode={optionsWithDefaults.liveMode}\n                                  onLiveEvent={onLiveEvent}\n                                  options={optionsWithDefaults}\n                                >\n                                  <UnsavedWarnContextProvider>\n                                    <RouterComponent>\n                                      {children}\n                                      {!disableTelemetryWithDefault && (\n                                        <Telemetry />\n                                      )}\n                                      <RouteChangeHandler />\n                                    </RouterComponent>\n                                  </UnsavedWarnContextProvider>\n                                </RefineContextProvider>\n                              </UndoableQueueContextProvider>\n                            </AuditLogContextProvider>\n                          </AccessControlContextProvider>\n                        </I18nContextProvider>\n                      </ResourceContextProvider>\n                    </LegacyRouterContextProvider>\n                  </RouterContextProvider>\n                </RouterPickerProvider>\n              </LiveContextProvider>\n            </DataContextProvider>\n          </AuthBindingsContextProvider>\n        </LegacyAuthContextProvider>\n      </NotificationContextProvider>\n    </QueryClientProvider>\n  );\n};\n", "import React from \"react\";\n\nimport { useTelemetryData } from \"@hooks/useTelemetryData\";\n\nimport type { ITelemetryData } from \"./types\";\n\nconst encode = (payload: ITelemetryData): string | undefined => {\n  try {\n    const stringifiedPayload = JSON.stringify(payload || {});\n\n    if (typeof btoa !== \"undefined\") {\n      return btoa(stringifiedPayload);\n    }\n\n    return Buffer.from(stringifiedPayload).toString(\"base64\");\n  } catch (err) {\n    return undefined;\n  }\n};\n\nconst throughImage = (src: string) => {\n  const img = new Image();\n\n  img.src = src;\n};\n\nconst throughFetch = (src: string) => {\n  fetch(src);\n};\n\nconst transport = (src: string) => {\n  if (typeof Image !== \"undefined\") {\n    throughImage(src);\n  } else if (typeof fetch !== \"undefined\") {\n    throughFetch(src);\n  }\n};\n\nexport const Telemetry: React.FC<{}> = () => {\n  const payload = useTelemetryData();\n  const sent = React.useRef(false);\n\n  React.useEffect(() => {\n    if (sent.current) {\n      return;\n    }\n    const encoded = encode(payload);\n\n    if (!encoded) {\n      return;\n    }\n\n    transport(`https://telemetry.refine.dev/telemetry?payload=${encoded}`);\n    sent.current = true;\n  }, []);\n\n  return null;\n};\n", "import { useContext } from \"react\";\n\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { DataContext } from \"@contexts/data\";\nimport { I18nContext } from \"@contexts/i18n\";\nimport { LiveContext } from \"@contexts/live\";\nimport { NotificationContext } from \"@contexts/notification\";\nimport { LegacyRouterContext } from \"@contexts/router/legacy\";\nimport { useResource } from \"@hooks/resource\";\n\nimport { useIsExistAuthentication, useRefineContext } from \"..\";\nimport type { ITelemetryData } from \"../../components/telemetry/types\";\n\n// It reads and updates from package.json during build. ref: tsup.config.ts\nconst REFINE_VERSION = \"4.57.9\";\n\nexport const useTelemetryData = (): ITelemetryData => {\n  const auth = useIsExistAuthentication();\n  const auditLogContext = useContext(AuditLogContext);\n  const { liveProvider } = useContext(LiveContext);\n  const routerContext = useContext(LegacyRouterContext);\n  const dataContext = useContext(DataContext);\n  const { i18nProvider } = useContext(I18nContext);\n  const notificationContext = useContext(NotificationContext);\n  const accessControlContext = useContext(AccessControlContext);\n  const { resources } = useResource();\n  const refineOptions = useRefineContext();\n\n  const auditLog =\n    !!auditLogContext.create ||\n    !!auditLogContext.get ||\n    !!auditLogContext.update;\n\n  const live =\n    !!liveProvider?.publish ||\n    !!liveProvider?.subscribe ||\n    !!liveProvider?.unsubscribe;\n\n  const router =\n    !!routerContext.useHistory ||\n    !!routerContext.Link ||\n    !!routerContext.Prompt ||\n    !!routerContext.useLocation ||\n    !!routerContext.useParams;\n\n  const data = !!dataContext;\n\n  const i18n =\n    !!i18nProvider?.changeLocale ||\n    !!i18nProvider?.getLocale ||\n    !!i18nProvider?.translate;\n\n  const notification =\n    !!notificationContext.close || !!notificationContext.open;\n\n  const accessControl = !!accessControlContext.can;\n\n  const projectId = refineOptions?.options?.projectId;\n\n  return {\n    providers: {\n      auth,\n      auditLog,\n      live,\n      router,\n      data,\n      i18n,\n      notification,\n      accessControl,\n    },\n    version: REFINE_VERSION,\n    resourceCount: resources.length,\n    projectId,\n  };\n};\n", "import type { LegacyRouterProvider } from \"../../../contexts/router/legacy/types\";\nimport type { RouterProvider } from \"../../../contexts/router/types\";\n\nexport const checkRouterPropMisuse = (\n  value: LegacyRouterProvider | RouterProvider,\n) => {\n  // check if `routerProvider` prop is passed with legacy properties.\n  // If yes, console.warn the user to use `legacyRuterProvider` prop instead.\n  const bindings = [\"go\", \"parse\", \"back\", \"Link\"];\n\n  // check if `value` contains properties other than `bindings`\n  const otherProps = Object.keys(value).filter(\n    (key) => !bindings.includes(key),\n  );\n\n  const hasOtherProps = otherProps.length > 0;\n\n  if (hasOtherProps) {\n    console.warn(\n      `Unsupported properties are found in \\`routerProvider\\` prop. You provided \\`${otherProps.join(\n        \", \",\n      )}\\`. Supported properties are \\`${bindings.join(\n        \", \",\n      )}\\`. You may wanted to use \\`legacyRouterProvider\\` prop instead.`,\n    );\n\n    return true;\n  }\n\n  return false;\n};\n", "import { checkRouterPropMisuse } from \"@definitions/helpers/check-router-prop-misuse\";\nimport React from \"react\";\nimport type { RouterProvider } from \"../../../contexts/router/types\";\n\nexport const useRouterMisuseWarning = (value?: RouterProvider) => {\n  const warned = React.useRef(false);\n\n  React.useEffect(() => {\n    if (warned.current === false) {\n      if (value) {\n        const warn = checkRouterPropMisuse(value);\n        if (warn) {\n          warned.current = true;\n        }\n      }\n    }\n  }, [value]);\n};\n", "import React, { useEffect, useState } from \"react\";\n\nimport { useCancelNotification, useNotification, useTranslate } from \"@hooks\";\n\nimport { userFriendlySecond } from \"@definitions/helpers\";\nimport {\n  ActionTypes,\n  type IUndoableQueue,\n} from \"../../contexts/undoableQueue/types\";\n\nexport const UndoableQueue: React.FC<{\n  notification: IUndoableQueue;\n}> = ({ notification }) => {\n  const translate = useTranslate();\n\n  const { notificationDispatch } = useCancelNotification();\n  const { open } = useNotification();\n\n  const [timeoutId, setTimeoutId] = useState<number | undefined>();\n\n  const cancelNotification = () => {\n    if (notification.isRunning === true) {\n      if (notification.seconds === 0) {\n        notification.doMutation();\n      }\n      if (!notification.isSilent) {\n        open?.({\n          key: `${notification.id}-${notification.resource}-notification`,\n          type: \"progress\",\n          message: translate(\n            \"notifications.undoable\",\n            {\n              seconds: userFriendlySecond(notification.seconds),\n            },\n            `You have ${userFriendlySecond(\n              notification.seconds,\n            )} seconds to undo`,\n          ),\n          cancelMutation: notification.cancelMutation,\n          undoableTimeout: userFriendlySecond(notification.seconds),\n        });\n      }\n\n      if (notification.seconds > 0) {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n\n        const newTimeoutId = setTimeout(() => {\n          notificationDispatch({\n            type: ActionTypes.DECREASE_NOTIFICATION_SECOND,\n            payload: {\n              id: notification.id,\n              seconds: notification.seconds,\n              resource: notification.resource,\n            },\n          });\n        }, 1000) as unknown as number;\n\n        setTimeoutId(newTimeoutId);\n      }\n    }\n  };\n\n  useEffect(() => {\n    cancelNotification();\n  }, [notification]);\n\n  return null;\n};\n", "import React, { useEffect } from \"react\";\n\nimport {\n  useRefineContext,\n  useRouterContext,\n  useTranslate,\n  useWarnAboutChange,\n} from \"@hooks\";\n\nimport type { LayoutProps, TitleProps } from \"../../contexts/refine/types\";\n\nexport interface LayoutWrapperProps {\n  /**\n   * Outer component that renders other components\n   * @default *\n   */\n  Layout?: React.FC<LayoutProps>;\n  /**\n   * [Custom sider to use](/api-reference/core/components/refine-config.md#sider)\n   * @default *\n   */\n  Sider?: React.FC;\n  /**\n   * [Custom header to use](/api-reference/core/components/refine-config.md#header)\n   * @default *\n   */\n  Header?: React.FC;\n  /**\n   * [Custom title to use](/api-reference/core/components/refine-config.md#title)\n   * @default *\n   */\n  Title?: React.FC<TitleProps>;\n  /**\n   * [Custom footer to use](/api-reference/core/components/refine-config.md#footer)\n   * @default *\n   */\n  Footer?: React.FC;\n  /**\n   * [Custom off layout area to use](/api-reference/core/components/refine-config.md#offlayoutarea)\n   * @default *\n   */\n  OffLayoutArea?: React.FC;\n  children: React.ReactNode;\n}\n\n/**\n * `<LayoutWrapper>` wraps its contents in **refine's** layout with all customizations made in {@link https://refine.dev/docs/core/components/refine-config `<Refine>`} component.\n * It is the default layout used in resource pages.\n * It can be used in custom pages to use global layout.\n *\n * @see {@link https://refine.dev/docs/core/components/layout-wrapper} for more details.\n *\n * @deprecated This component is obsolete and only works with the legacy router providers.\n */\nexport const LayoutWrapper: React.FC<LayoutWrapperProps> = ({\n  children,\n  Layout: LayoutFromProps,\n  Sider: SiderFromProps,\n  Header: HeaderFromProps,\n  Title: TitleFromProps,\n  Footer: FooterFromProps,\n  OffLayoutArea: OffLayoutAreaFromProps,\n}) => {\n  const { Layout, Footer, Header, Sider, Title, OffLayoutArea } =\n    useRefineContext();\n\n  const LayoutToRender = LayoutFromProps ?? Layout;\n\n  return (\n    <LayoutToRender\n      Sider={SiderFromProps ?? Sider}\n      Header={HeaderFromProps ?? Header}\n      Footer={FooterFromProps ?? Footer}\n      Title={TitleFromProps ?? Title}\n      OffLayoutArea={OffLayoutAreaFromProps ?? OffLayoutArea}\n    >\n      {children}\n      <UnsavedPrompt />\n    </LayoutToRender>\n  );\n};\n\nconst UnsavedPrompt: React.FC = () => {\n  const { Prompt } = useRouterContext();\n\n  const translate = useTranslate();\n\n  const { warnWhen, setWarnWhen } = useWarnAboutChange();\n\n  const warnWhenListener = (e: {\n    preventDefault: () => void;\n    returnValue: string;\n  }) => {\n    e.preventDefault();\n\n    e.returnValue = translate(\n      \"warnWhenUnsavedChanges\",\n      \"Are you sure you want to leave? You have unsaved changes.\",\n    );\n\n    return e.returnValue;\n  };\n\n  useEffect(() => {\n    if (warnWhen) {\n      window.addEventListener(\"beforeunload\", warnWhenListener);\n    }\n\n    return window.removeEventListener(\"beforeunload\", warnWhenListener);\n  }, [warnWhen]);\n\n  return (\n    <Prompt\n      when={warnWhen}\n      message={translate(\n        \"warnWhenUnsavedChanges\",\n        \"Are you sure you want to leave? You have unsaved changes.\",\n      )}\n      setWarnWhen={setWarnWhen}\n    />\n  );\n};\n", "import React from \"react\";\n\nimport { useActiveAuthProvider } from \"@definitions/index\";\nimport {\n  useGo,\n  useIsAuthenticated,\n  useNavigation,\n  useParsed,\n  useRouterContext,\n  useRouterType,\n} from \"@hooks\";\nimport type { GoConfig } from \"../../contexts/router/types\";\n\nexport type AuthCheckParams = any;\n\nexport type AuthenticatedCommonProps = {\n  /**\n   * Unique key to identify the component.\n   * This is required if you have multiple `Authenticated` components at the same level.\n   * @required\n   */\n  key: React.Key;\n  /**\n   * Whether to redirect user if not logged in or not.\n   * If not set, user will be redirected to `redirectTo` property of the `check` function's response.\n   * This behavior is only available for new auth providers.\n   * Legacy auth providers will redirect to `/login` by default if this property is not set.\n   * If set to a string, user will be redirected to that string.\n   *\n   * This property only works if `fallback` is **not set**.\n   */\n  redirectOnFail?: string | true;\n  /**\n   * Whether to append current path to search params of the redirect url at `to` property.\n   *\n   * By default, `to` parameter is used by successful invocations of the `useLogin` hook.\n   * If `to` present, it will be used as the redirect url after successful login.\n   */\n  appendCurrentPathToQuery?: boolean;\n  /**\n   * Content to show if user is not logged in.\n   */\n  fallback?: React.ReactNode;\n  /**\n   * Content to show while checking whether user is logged in or not.\n   */\n  loading?: React.ReactNode;\n  /**\n   * Content to show if user is logged in.\n   */\n  children?: React.ReactNode;\n  /**\n   * optional params to be passed to the Auth Provider's check method via the useIsAuthenticated hook.\n   */\n  params?: AuthCheckParams;\n};\n\nexport type LegacyAuthenticatedProps = {\n  v3LegacyAuthProviderCompatible: true;\n} & AuthenticatedCommonProps;\n\nexport type AuthenticatedProps = {\n  v3LegacyAuthProviderCompatible?: false;\n} & AuthenticatedCommonProps;\n\n/**\n * `<Authenticated>` is the component form of {@link https://refine.dev/docs/api-reference/core/hooks/auth/useAuthenticated `useAuthenticated`}. It internally uses `useAuthenticated` to provide it's functionality.\n *\n * @requires {@link https://react.dev/learn/rendering-lists#why-does-react-need-keys `key`} prop if you have multiple components at the same level.\n * In React, components don't automatically unmount and remount with prop changes, which is generally good for performance. However, for specific cases this can cause issues like unwanted content rendering (`fallback` or `children`). To solve this, assigning unique `key` values to each instance of component is necessary, forcing React to unmount and remount the component, rather than just updating its props.\n * @example\n *```tsx\n * <Authenticated key=\"dashboard\">\n *   <h1>Dashboard Page</h1>\n * </Authenticated>\n *```\n *\n * @see {@link https://refine.dev/docs/core/components/auth/authenticated `<Authenticated>`} component for more details.\n */\nexport function Authenticated(\n  props: LegacyAuthenticatedProps,\n): JSX.Element | null;\n\n/**\n * `<Authenticated>` is the component form of {@link https://refine.dev/docs/api-reference/core/hooks/auth/useAuthenticated `useAuthenticated`}. It internally uses `useAuthenticated` to provide it's functionality.\n *\n * @requires {@link https://react.dev/learn/rendering-lists#why-does-react-need-keys `key`} prop if you have multiple components at the same level.\n * In React, components don't automatically unmount and remount with prop changes, which is generally good for performance. However, for specific cases this can cause issues like unwanted content rendering (`fallback` or `children`). To solve this, assigning unique `key` values to each instance of component is necessary, forcing React to unmount and remount the component, rather than just updating its props.\n * @example\n *```tsx\n * <Authenticated key=\"dashboard\">\n *   <h1>Dashboard Page</h1>\n * </Authenticated>\n *```\n *\n * @see {@link https://refine.dev/docs/core/components/auth/authenticated `<Authenticated>`} component for more details.\n */\nexport function Authenticated(props: AuthenticatedProps): JSX.Element | null;\n\nexport function Authenticated({\n  redirectOnFail = true,\n  appendCurrentPathToQuery = true,\n  children,\n  fallback: fallbackContent,\n  loading: loadingContent,\n  params,\n}: AuthenticatedProps | LegacyAuthenticatedProps): JSX.Element | null {\n  const activeAuthProvider = useActiveAuthProvider();\n  const routerType = useRouterType();\n\n  const hasAuthProvider = Boolean(activeAuthProvider?.isProvided);\n  const isLegacyAuth = Boolean(activeAuthProvider?.isLegacy);\n  const isLegacyRouter = routerType === \"legacy\";\n\n  const parsed = useParsed();\n  const go = useGo();\n  const { useLocation } = useRouterContext();\n  const legacyLocation = useLocation();\n\n  const {\n    isFetching,\n    isSuccess,\n    data: {\n      authenticated: isAuthenticatedStatus,\n      redirectTo: authenticatedRedirect,\n    } = {},\n  } = useIsAuthenticated({\n    v3LegacyAuthProviderCompatible: isLegacyAuth,\n    params,\n  });\n\n  // Authentication status\n  const isAuthenticated = hasAuthProvider\n    ? isLegacyAuth\n      ? isSuccess\n      : isAuthenticatedStatus\n    : true;\n\n  // when there is no auth provider\n  if (!hasAuthProvider) {\n    return <>{children ?? null}</>;\n  }\n\n  // when checking authentication status\n  if (isFetching) {\n    return <>{loadingContent ?? null}</>;\n  }\n\n  // when user is authenticated return children\n  if (isAuthenticated) {\n    return <>{children ?? null}</>;\n  }\n  // when user is not authenticated redirect or render fallbackContent\n\n  // render fallbackContent if it is exist\n  if (typeof fallbackContent !== \"undefined\") {\n    return <>{fallbackContent ?? null}</>;\n  }\n  // if there is no fallbackContent, redirect page\n\n  // Redirect url to use. use redirectOnFail if it is set.\n  // Otherwise use redirectTo property of the check function's response.\n  // If both are not set, use `/login` as the default redirect url. (only for legacy auth providers)\n  const appliedRedirect = isLegacyAuth\n    ? typeof redirectOnFail === \"string\"\n      ? redirectOnFail\n      : \"/login\"\n    : typeof redirectOnFail === \"string\"\n      ? redirectOnFail\n      : (authenticatedRedirect as string | undefined);\n\n  // Current pathname to append to the redirect url.\n  // User will be redirected to this url after successful mutation. (like login)\n  const pathname = `${\n    isLegacyRouter ? legacyLocation?.pathname : parsed.pathname\n  }`.replace(/(\\?.*|#.*)$/, \"\");\n  // Redirect if appliedRedirect is set, otherwise return null.\n  //  Uses `replace` for legacy router and `go` for new router.\n  if (appliedRedirect) {\n    if (isLegacyRouter) {\n      const toQuery = appendCurrentPathToQuery\n        ? `?to=${encodeURIComponent(pathname)}`\n        : \"\";\n      return <RedirectLegacy to={`${appliedRedirect}${toQuery}`} />;\n    }\n\n    const queryToValue: string | undefined = parsed.params?.to\n      ? parsed.params.to\n      : go({\n          to: pathname,\n          options: { keepQuery: true },\n          type: \"path\",\n        });\n\n    return (\n      <Redirect\n        config={{\n          to: appliedRedirect,\n          query:\n            appendCurrentPathToQuery && (queryToValue ?? \"\").length > 1\n              ? {\n                  to: queryToValue,\n                }\n              : undefined,\n          type: \"replace\",\n        }}\n      />\n    );\n  }\n\n  return null;\n}\n\nconst Redirect = ({ config }: { config: GoConfig }) => {\n  const go = useGo();\n\n  React.useEffect(() => {\n    go(config);\n  }, [go, config]);\n\n  return null;\n};\n\nconst RedirectLegacy = ({ to }: { to: string }) => {\n  const { replace } = useNavigation();\n\n  React.useEffect(() => {\n    replace(to);\n  }, [replace, to]);\n\n  return null;\n};\n", "import { useEffect } from \"react\";\nimport { useRouterContext } from \"@hooks\";\nimport { useLegacyAuthContext } from \"@contexts/auth\";\n\nexport const RouteChangeHandler: React.FC = () => {\n  const { useLocation } = useRouterContext();\n\n  const { checkAuth } = useLegacyAuthContext();\n  const location = useLocation();\n\n  useEffect(() => {\n    checkAuth?.().catch(() => false);\n  }, [location?.pathname]);\n\n  return null;\n};\n", "import React, { useEffect } from \"react\";\nimport type { UseQueryOptions } from \"@tanstack/react-query\";\n\nimport { useCan, useResourceParams } from \"@hooks\";\n\nimport type { CanReturnType } from \"../../contexts/accessControl/types\";\nimport type { BaseKey } from \"../../contexts/data/types\";\nimport type { IResourceItem, ITreeMenu } from \"../../contexts/resource/types\";\n\ntype CanParams = {\n  resource?: IResourceItem & { children?: ITreeMenu[] };\n  id?: BaseKey;\n  [key: string]: any;\n};\n\ntype OnUnauthorizedProps = {\n  resource?: string;\n  reason?: string;\n  action: string;\n  params: CanParams;\n};\n\ntype CanAccessBaseProps = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource?: string;\n  /**\n   * Intended action on resource\n   */\n  action: string;\n  /**\n   * Parameters associated with the resource\n   * @type { resource?: [IResourceItem](https://refine.dev/docs/api-reference/core/interfaceReferences/#canparams), id?: [BaseKey](https://refine.dev/docs/api-reference/core/interfaceReferences/#basekey), [key: string]: any }\n   */\n  params?: CanParams;\n  /**\n   * Content to show if access control returns `false`\n   */\n  fallback?: React.ReactNode;\n  /**\n   * Callback function to be called if access control returns `can: false`\n   */\n  onUnauthorized?: (props: OnUnauthorizedProps) => void;\n  children: React.ReactNode;\n  queryOptions?: UseQueryOptions<CanReturnType>;\n};\n\ntype CanAccessWithoutParamsProps = {\n  [key in Exclude<\n    keyof CanAccessBaseProps,\n    \"fallback\" | \"children\"\n  >]?: undefined;\n} & {\n  [key in \"fallback\" | \"children\"]?: CanAccessBaseProps[key];\n};\n\nexport type CanAccessProps = CanAccessBaseProps | CanAccessWithoutParamsProps;\n\nexport const CanAccess: React.FC<CanAccessProps> = ({\n  resource: resourceFromProp,\n  action: actionFromProp,\n  params: paramsFromProp,\n  fallback,\n  onUnauthorized,\n  children,\n  queryOptions: componentQueryOptions,\n  ...rest\n}) => {\n  const {\n    id,\n    resource,\n    action: fallbackAction = \"\",\n  } = useResourceParams({\n    resource: resourceFromProp,\n    id: paramsFromProp?.id,\n  });\n\n  const action = actionFromProp ?? fallbackAction;\n\n  const params = paramsFromProp ?? {\n    id,\n    resource,\n  };\n\n  const { data } = useCan({\n    resource: resource?.name,\n    action,\n    params,\n    queryOptions: componentQueryOptions,\n  });\n\n  useEffect(() => {\n    if (onUnauthorized && data?.can === false) {\n      onUnauthorized({\n        resource: resource?.name,\n        action,\n        reason: data?.reason,\n        params,\n      });\n    }\n  }, [data?.can]);\n\n  if (data?.can) {\n    if (React.isValidElement(children)) {\n      const Children = React.cloneElement(children, rest);\n      return Children;\n    }\n\n    return <>{children}</>;\n  }\n\n  if (data?.can === false) {\n    return <>{fallback ?? null}</>;\n  }\n\n  return null;\n};\n", "import React, { type CSSProperties, type SVGProps, useEffect } from \"react\";\nimport { CSSRules } from \"./styles\";\n\nconst text =\n  \"If you find Refine useful, you can contribute to its growth by giving it a star on GitHub\";\n\ntype Props = {\n  containerStyle?: CSSProperties;\n};\n\nexport const GitHubBanner = ({ containerStyle }: Props) => {\n  useEffect(() => {\n    const styleTag = document.createElement(\"style\");\n    document.head.appendChild(styleTag);\n    CSSRules.forEach((rule) =>\n      styleTag.sheet?.insertRule(rule, styleTag.sheet.cssRules.length),\n    );\n  }, []);\n\n  return (\n    <div\n      className=\"banner bg-top-announcement\"\n      style={{\n        width: \"100%\",\n        height: \"48px\",\n      }}\n    >\n      <div\n        style={{\n          position: \"relative\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          paddingLeft: \"200px\",\n          width: \"100%\",\n          maxWidth: \"100vw\",\n          height: \"100%\",\n          borderBottom: \"1px solid #47ebeb26\",\n          ...containerStyle,\n        }}\n      >\n        <div\n          className=\"top-announcement-mask\"\n          style={{\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            width: \"100%\",\n            height: \"100%\",\n            borderBottom: \"1px solid #47ebeb26\",\n          }}\n        >\n          <div\n            style={{\n              position: \"relative\",\n              width: \"960px\",\n              height: \"100%\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              margin: \"0 auto\",\n            }}\n          >\n            <div\n              style={{\n                width: \"calc(50% - 300px)\",\n                height: \"100%\",\n                position: \"relative\",\n              }}\n            >\n              <GlowSmall\n                style={{\n                  animationDelay: \"1.5s\",\n                  position: \"absolute\",\n                  top: \"2px\",\n                  right: \"220px\",\n                }}\n                id={\"1\"}\n              />\n              <GlowSmall\n                style={{\n                  animationDelay: \"1s\",\n                  position: \"absolute\",\n                  top: \"8px\",\n                  right: \"100px\",\n                  transform: \"rotate(180deg)\",\n                }}\n                id={\"2\"}\n              />\n              <GlowBig\n                style={{\n                  position: \"absolute\",\n                  right: \"10px\",\n                }}\n                id={\"3\"}\n              />\n            </div>\n\n            <div\n              style={{\n                width: \"calc(50% - 300px)\",\n                height: \"100%\",\n                position: \"relative\",\n              }}\n            >\n              <GlowSmall\n                style={{\n                  animationDelay: \"2s\",\n                  position: \"absolute\",\n                  top: \"6px\",\n                  right: \"180px\",\n                  transform: \"rotate(180deg)\",\n                }}\n                id={\"4\"}\n              />\n              <GlowSmall\n                style={{\n                  animationDelay: \"0.5s\",\n                  transitionDelay: \"1.3s\",\n                  position: \"absolute\",\n                  top: \"2px\",\n                  right: \"40px\",\n                }}\n                id={\"5\"}\n              />\n              <GlowBig\n                style={{\n                  position: \"absolute\",\n                  right: \"-70px\",\n                }}\n                id={\"6\"}\n              />\n            </div>\n          </div>\n        </div>\n        <Text text={text} />\n      </div>\n    </div>\n  );\n};\n\nconst Text = ({ text }: { text: string }) => {\n  return (\n    <a\n      className=\"gh-link\"\n      href=\"https://s.refine.dev/github-support\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      style={{\n        position: \"absolute\",\n        height: \"100%\",\n        padding: \"0 60px\",\n        display: \"flex\",\n        flexWrap: \"nowrap\",\n        whiteSpace: \"nowrap\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundImage:\n          \"linear-gradient(90deg, rgba(31, 63, 72, 0.00) 0%, #1F3F48 10%, #1F3F48 90%, rgba(31, 63, 72, 0.00) 100%)\",\n      }}\n    >\n      <div\n        style={{\n          color: \"#fff\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          gap: \"8px\",\n        }}\n      >\n        <span\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          ⭐️\n        </span>\n        <span\n          className=\"text\"\n          style={{\n            fontSize: \"16px\",\n            lineHeight: \"24px\",\n          }}\n        >\n          {text}\n        </span>\n        <span\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          ⭐️\n        </span>\n      </div>\n    </a>\n  );\n};\n\nconst GlowSmall = ({ style, ...props }: SVGProps<SVGSVGElement>) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={80}\n      height={40}\n      fill=\"none\"\n      style={{\n        opacity: 1,\n        animation: \"top-announcement-glow 1s ease-in-out infinite alternate\",\n        ...style,\n      }}\n    >\n      <circle cx={40} r={40} fill={`url(#${props.id}-a)`} fillOpacity={0.5} />\n      <defs>\n        <radialGradient\n          id={`${props.id}-a`}\n          cx={0}\n          cy={0}\n          r={1}\n          gradientTransform=\"matrix(0 40 -40 0 40 0)\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"#47EBEB\" />\n          <stop offset={1} stopColor=\"#47EBEB\" stopOpacity={0} />\n        </radialGradient>\n      </defs>\n    </svg>\n  );\n};\n\nconst GlowBig = ({ style, ...props }: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={120}\n    height={48}\n    fill=\"none\"\n    {...props}\n    style={{\n      opacity: 1,\n      animation: \"top-announcement-glow 1s ease-in-out infinite alternate\",\n      ...style,\n    }}\n  >\n    <circle\n      cx={60}\n      cy={24}\n      r={60}\n      fill={`url(#${props.id}-a)`}\n      fillOpacity={0.5}\n    />\n    <defs>\n      <radialGradient\n        id={`${props.id}-a`}\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"matrix(0 60 -60 0 60 24)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#47EBEB\" />\n        <stop offset={1} stopColor=\"#47EBEB\" stopOpacity={0} />\n      </radialGradient>\n    </defs>\n  </svg>\n);\n", "export const CSSRules = [\n  `\n    .bg-top-announcement {\n        border-bottom: 1px solid rgba(71, 235, 235, 0.15);\n        background: radial-gradient(\n                218.19% 111.8% at 0% 0%,\n                rgba(71, 235, 235, 0.1) 0%,\n                rgba(71, 235, 235, 0.2) 100%\n            ),\n            #14141f;\n    }\n    `,\n  `\n    .top-announcement-mask {\n        mask-image: url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/hexagon.svg);\n        -webkit-mask-image: url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/hexagon.svg);\n        mask-repeat: repeat;\n        -webkit-mask-repeat: repeat;\n        background: rgba(71, 235, 235, 0.25);\n    }\n    `,\n  `\n    .banner {\n        display: flex;\n        @media (max-width: 1000px) {\n            display: none;\n        }\n    }`,\n  `\n    .gh-link, .gh-link:hover, .gh-link:active, .gh-link:visited, .gh-link:focus {\n        text-decoration: none;\n        z-index: 9;\n    }\n    `,\n  `\n    @keyframes top-announcement-glow {\n        0% {\n            opacity: 1;\n        }\n\n        100% {\n            opacity: 0;\n        }\n    }\n    `,\n];\n", "import React from \"react\";\n\nimport { useTranslate } from \"@hooks/i18n\";\n\nimport type { BaseRecord, HttpError } from \"../../contexts/data/types\";\nimport type { AutoSaveIndicatorElements } from \"../../hooks/form/types\";\nimport type { UseUpdateReturnType } from \"../../hooks/data/useUpdate\";\n\nexport type AutoSaveIndicatorProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  /**\n   * The data returned by the update request.\n   */\n  data?: UseUpdateReturnType<TData, TError, TVariables>[\"data\"];\n  /**\n   * The error returned by the update request.\n   */\n  error?: UseUpdateReturnType<TData, TError, TVariables>[\"error\"];\n  /**\n   * The status of the update request.\n   */\n  status: UseUpdateReturnType<TData, TError, TVariables>[\"status\"];\n  /**\n   * The elements to display for each status.\n   */\n  elements?: AutoSaveIndicatorElements;\n};\n\nexport const AutoSaveIndicator: React.FC<AutoSaveIndicatorProps> = ({\n  status,\n  elements: {\n    success = (\n      <Message translationKey=\"autoSave.success\" defaultMessage=\"saved\" />\n    ),\n    error = (\n      <Message\n        translationKey=\"autoSave.error\"\n        defaultMessage=\"auto save failure\"\n      />\n    ),\n    loading = (\n      <Message translationKey=\"autoSave.loading\" defaultMessage=\"saving...\" />\n    ),\n    idle = (\n      <Message\n        translationKey=\"autoSave.idle\"\n        defaultMessage=\"waiting for changes\"\n      />\n    ),\n  } = {},\n}) => {\n  switch (status) {\n    case \"success\":\n      return <>{success}</>;\n    case \"error\":\n      return <>{error}</>;\n    case \"loading\":\n      return <>{loading}</>;\n    default:\n      return <>{idle}</>;\n  }\n};\n\nconst Message = ({\n  translationKey,\n  defaultMessage,\n}: {\n  translationKey: string;\n  defaultMessage: string;\n}) => {\n  const translate = useTranslate();\n\n  return <span>{translate(translationKey, defaultMessage)}</span>;\n};\n", "import ErrorStackParser from \"error-stack-parser\";\nimport { cleanStack } from \"./clean-stack\";\nimport { isRefineStack } from \"./is-refine-stack\";\nimport { getPackageNameFromFilename } from \"./get-package-name-from-filename\";\nimport type { TraceType } from \"@refinedev/devtools-shared\";\n\nexport function getTrace(excludeFromTrace?: string[]) {\n  if (__DEV_CONDITION__ !== \"development\") {\n    return [];\n  }\n  try {\n    const error = new Error();\n    const stack = ErrorStackParser.parse(error);\n    const clean = cleanStack(stack);\n    const traces = clean\n      .map(\n        (frame) =>\n          ({\n            file: frame.fileName,\n            line: frame.lineNumber,\n            column: frame.columnNumber,\n            function: frame.functionName,\n            isRefine: isRefineStack(frame.fileName),\n            packageName: getPackageNameFromFilename(frame.fileName),\n          }) as TraceType,\n      )\n      .filter((trace) => trace.function)\n      .filter((trace) => !excludeFromTrace?.includes(trace.function ?? \"\"));\n    return traces.slice(1);\n  } catch (error) {\n    return [];\n  }\n}\n", "import type { StackFrame } from \"error-stack-parser\";\n\nconst unrelatedFunctionName = \"renderWithHooks\";\n\nexport const cleanStack = (stack: StackFrame[]) => {\n  const firstUnrelatedIndex = stack.findIndex(\n    (frame) => frame.functionName === unrelatedFunctionName,\n  );\n\n  if (firstUnrelatedIndex !== -1) {\n    return stack.slice(0, firstUnrelatedIndex);\n  }\n\n  return stack;\n};\n", "export const REFINE_PACKAGE_FILEPATH_REGEXP =\n  __DEV_CONDITION__ !== \"development\"\n    ? /node_modules\\/refinedev\\/(?<name>.*?)\\//\n    : /\\/refine\\/packages\\/(?<name>.*?)\\//;\n", "import { REFINE_PACKAGE_FILEPATH_REGEXP } from \"./constants\";\n\nexport const isRefineStack = (filename?: string) => {\n  if (!filename) return false;\n\n  const match = filename.match(REFINE_PACKAGE_FILEPATH_REGEXP);\n\n  return !!match;\n};\n", "import { REFINE_PACKAGE_FILEPATH_REGEXP } from \"./constants\";\n\nexport const getPackageNameFromFilename = (filename?: string) => {\n  if (!filename) return;\n\n  const match = filename.match(REFINE_PACKAGE_FILEPATH_REGEXP);\n\n  const name = match?.groups?.name;\n\n  if (!name) return;\n\n  return `@refinedev/${name}`;\n};\n", "import {\n  type DevtoolsEvent,\n  type DevtoolsEventPayloads,\n  type RefineHook,\n  scopes,\n} from \"@refinedev/devtools-shared\";\n\nexport type Activity =\n  DevtoolsEventPayloads[DevtoolsEvent.DEVTOOLS_ACTIVITY_UPDATE][\"updatedActivities\"][number];\n\nexport const getResourcePath = (\n  hookName: RefineHook,\n  legacyKey: boolean,\n): string | null => {\n  if (scopes[hookName] === \"auth\") {\n    return null;\n  }\n  if (hookName === \"useCan\") {\n    if (legacyKey) {\n      return \"key[1].resource\";\n    }\n    return \"key[1]\";\n  }\n  if (scopes[hookName] === \"audit-log\") {\n    if (hookName === \"useLog\") {\n      return \"variables.resource\";\n    }\n    return \"key[1]\";\n  }\n  if (scopes[hookName] === \"data\") {\n    if (hookName === \"useCustom\" || hookName === \"useCustomMutation\") {\n      return null;\n    }\n    switch (hookName) {\n      case \"useList\":\n      case \"useInfiniteList\":\n      case \"useOne\":\n      case \"useMany\":\n        if (legacyKey) {\n          return \"key[1]\";\n        }\n        return \"key[2]\";\n      case \"useCreate\":\n      case \"useCreateMany\":\n      case \"useDelete\":\n      case \"useDeleteMany\":\n      case \"useUpdate\":\n      case \"useUpdateMany\":\n        return \"variables.resource\";\n    }\n  }\n  return null;\n};\n", "import type { RefineHook, TraceType } from \"@refinedev/devtools-shared\";\nimport { getTrace } from \"./get-trace\";\nimport { getResourcePath } from \"./get-resource-path\";\n\nexport type XRayResponse = {\n  hookName: string;\n  trace: TraceType[];\n  resourcePath: string | null;\n  legacyKey: boolean;\n  resourceName?: string;\n};\n\nexport function getXRay(\n  hookName: string,\n  legacyKey: boolean,\n  resourceName?: string,\n  excludeFromTrace?: string[],\n): XRayResponse {\n  if (__DEV_CONDITION__ !== \"development\") {\n    return {\n      hookName: \"\",\n      trace: [],\n      resourcePath: null,\n      legacyKey: false,\n    };\n  }\n  const trace = getTrace(excludeFromTrace).slice(1);\n\n  const resourcePath = getResourcePath(hookName as RefineHook, legacyKey);\n\n  return {\n    hookName,\n    trace,\n    resourcePath,\n    legacyKey,\n    resourceName,\n  };\n}\n", "import {\n  DevToolsContext,\n  DevtoolsEvent,\n  receive,\n} from \"@refinedev/devtools-shared\";\nimport type { QueryClient } from \"@tanstack/react-query\";\nimport React, { useContext } from \"react\";\nimport { createQueryListener, createMutationListener } from \"./listeners\";\n\nconst empty = {};\nconst noop = () => empty;\n\nexport const useQuerySubscription =\n  __DEV_CONDITION__ !== \"development\"\n    ? noop\n    : (queryClient: QueryClient) => {\n        const { ws } = useContext(DevToolsContext);\n        const queryCacheSubscription = React.useRef<() => void>();\n        const mutationCacheSubscription = React.useRef<() => void>();\n\n        React.useEffect(() => {\n          if (!ws) return () => 0;\n\n          const queryCache = queryClient.getQueryCache();\n\n          const queryListener = createQueryListener(ws);\n\n          queryCache.getAll().forEach(queryListener);\n\n          queryCacheSubscription.current = queryCache.subscribe(\n            ({ query, type }) =>\n              (type === \"added\" || type === \"updated\") && queryListener(query),\n          );\n\n          return () => {\n            queryCacheSubscription.current?.();\n          };\n        }, [ws, queryClient]);\n\n        React.useEffect(() => {\n          if (!ws) return () => 0;\n\n          const mutationCache = queryClient.getMutationCache();\n\n          const mutationListener = createMutationListener(ws);\n\n          mutationCache.getAll().forEach(mutationListener);\n\n          mutationCacheSubscription.current = mutationCache.subscribe(\n            ({ mutation, type }) =>\n              (type === \"added\" || type === \"updated\") &&\n              mutationListener(mutation),\n          );\n\n          return () => {\n            mutationCacheSubscription.current?.();\n          };\n        }, [ws, queryClient]);\n\n        React.useEffect(() => {\n          if (!ws) return () => 0;\n\n          const cb = receive(\n            ws,\n            DevtoolsEvent.DEVTOOLS_INVALIDATE_QUERY_ACTION,\n            ({ queryKey }) => {\n              if (queryKey) {\n                queryClient.invalidateQueries(queryKey);\n              }\n            },\n          );\n\n          return cb;\n        }, [ws, queryClient]);\n\n        return {};\n      };\n", "import { DevtoolsEvent, send } from \"@refinedev/devtools-shared\";\nimport type { Mutation, Query } from \"@tanstack/react-query\";\n\nimport { createIdentifier } from \"./create-identifier\";\nimport type { XRayResponse } from \"./get-xray\";\n\nexport const createMutationListener =\n  (ws: WebSocket) => (mutation?: Mutation) => {\n    if (!mutation?.meta?.trace) return;\n\n    const meta: XRayResponse = mutation?.meta as any;\n\n    new Promise<void>((resolve) => {\n      send(ws, DevtoolsEvent.ACTIVITY, {\n        type: \"mutation\",\n        identifier: createIdentifier(\n          mutation?.options.mutationKey,\n          mutation?.meta?.trace as any,\n        ),\n        key: mutation?.options.mutationKey as any,\n        status: mutation?.state.status,\n        state: mutation?.state,\n        variables: mutation?.state?.variables,\n        ...meta,\n      });\n      resolve();\n    });\n  };\n\nexport const createQueryListener = (ws: WebSocket) => (query: Query) => {\n  if (!query?.meta?.trace) return;\n\n  const meta: XRayResponse = query?.meta as any;\n\n  new Promise<void>((resolve) => {\n    send(ws, DevtoolsEvent.ACTIVITY, {\n      type: \"query\",\n      identifier: createIdentifier(query.queryKey, query.meta?.trace as any),\n      key: query.queryKey as any,\n      status: query.state.status,\n      state: query.state,\n      ...meta,\n    });\n    resolve();\n  });\n};\n", "import type { TraceType } from \"@refinedev/devtools-shared\";\nimport type { MutationKey, QueryKey } from \"@tanstack/react-query\";\n\nexport const createIdentifier = (\n  key?: QueryKey | MutationKey,\n  trace?: TraceType[],\n) => {\n  const simpleTrace = trace?.map(\n    (t) =>\n      `${t.file}:${t.line}:${t.column}#${t.function}-${t.packageName}-${\n        t.isRefine ? 1 : 0\n      }`,\n  );\n  const str = JSON.stringify([...(key ?? []), ...(simpleTrace ?? [])]);\n\n  return str;\n};\n", "type Listener = () => void\n\nexport class Subscribable<TListener extends Function = Listener> {\n  protected listeners: Set<{ listener: TListener }>\n\n  constructor() {\n    this.listeners = new Set()\n    this.subscribe = this.subscribe.bind(this)\n  }\n\n  subscribe(listener: TListener): () => void {\n    const identity = { listener }\n    this.listeners.add(identity)\n\n    this.onSubscribe()\n\n    return () => {\n      this.listeners.delete(identity)\n      this.onUnsubscribe()\n    }\n  }\n\n  hasListeners(): boolean {\n    return this.listeners.size > 0\n  }\n\n  protected onSubscribe(): void {\n    // Do nothing\n  }\n\n  protected onUnsubscribe(): void {\n    // Do nothing\n  }\n}\n", "import type { Mutation } from './mutation'\nimport type { Query } from './query'\nimport type {\n  FetchStatus,\n  MutationFunction,\n  MutationKey,\n  MutationOptions,\n  QueryFunction,\n  QueryKey,\n  QueryOptions,\n} from './types'\n\n// TYPES\n\nexport interface QueryFilters {\n  /**\n   * Filter to active queries, inactive queries or all queries\n   */\n  type?: QueryTypeFilter\n  /**\n   * Match query key exactly\n   */\n  exact?: boolean\n  /**\n   * Include queries matching this predicate function\n   */\n  predicate?: (query: Query) => boolean\n  /**\n   * Include queries matching this query key\n   */\n  queryKey?: QueryKey\n  /**\n   * Include or exclude stale queries\n   */\n  stale?: boolean\n  /**\n   * Include queries matching their fetchStatus\n   */\n  fetchStatus?: FetchStatus\n}\n\nexport interface MutationFilters {\n  /**\n   * Match mutation key exactly\n   */\n  exact?: boolean\n  /**\n   * Include mutations matching this predicate function\n   */\n  predicate?: (mutation: Mutation<any, any, any>) => boolean\n  /**\n   * Include mutations matching this mutation key\n   */\n  mutationKey?: MutationKey\n  /**\n   * Include or exclude fetching mutations\n   */\n  fetching?: boolean\n}\n\nexport type DataUpdateFunction<TInput, TOutput> = (input: TInput) => TOutput\n\nexport type Updater<TInput, TOutput> =\n  | TOutput\n  | DataUpdateFunction<TInput, TOutput>\n\nexport type QueryTypeFilter = 'all' | 'active' | 'inactive'\n\n// UTILS\n\nexport const isServer = typeof window === 'undefined' || 'Deno' in window\n\nexport function noop(): undefined {\n  return undefined\n}\n\nexport function functionalUpdate<TInput, TOutput>(\n  updater: Updater<TInput, TOutput>,\n  input: TInput,\n): TOutput {\n  return typeof updater === 'function'\n    ? (updater as DataUpdateFunction<TInput, TOutput>)(input)\n    : updater\n}\n\nexport function isValidTimeout(value: unknown): value is number {\n  return typeof value === 'number' && value >= 0 && value !== Infinity\n}\n\nexport function difference<T>(array1: T[], array2: T[]): T[] {\n  return array1.filter((x) => !array2.includes(x))\n}\n\nexport function replaceAt<T>(array: T[], index: number, value: T): T[] {\n  const copy = array.slice(0)\n  copy[index] = value\n  return copy\n}\n\nexport function timeUntilStale(updatedAt: number, staleTime?: number): number {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0)\n}\n\nexport function parseQueryArgs<\n  TOptions extends QueryOptions<any, any, any, TQueryKey>,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  arg1: TQueryKey | TOptions,\n  arg2?: QueryFunction<any, TQueryKey> | TOptions,\n  arg3?: TOptions,\n): TOptions {\n  if (!isQueryKey(arg1)) {\n    return arg1 as TOptions\n  }\n\n  if (typeof arg2 === 'function') {\n    return { ...arg3, queryKey: arg1, queryFn: arg2 } as TOptions\n  }\n\n  return { ...arg2, queryKey: arg1 } as TOptions\n}\n\nexport function parseMutationArgs<\n  TOptions extends MutationOptions<any, any, any, any>,\n>(\n  arg1: MutationKey | MutationFunction<any, any> | TOptions,\n  arg2?: MutationFunction<any, any> | TOptions,\n  arg3?: TOptions,\n): TOptions {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return { ...arg3, mutationKey: arg1, mutationFn: arg2 } as TOptions\n    }\n    return { ...arg2, mutationKey: arg1 } as TOptions\n  }\n\n  if (typeof arg1 === 'function') {\n    return { ...arg2, mutationFn: arg1 } as TOptions\n  }\n\n  return { ...arg1 } as TOptions\n}\n\nexport function parseFilterArgs<\n  TFilters extends QueryFilters,\n  TOptions = unknown,\n>(\n  arg1?: QueryKey | TFilters,\n  arg2?: TFilters | TOptions,\n  arg3?: TOptions,\n): [TFilters, TOptions | undefined] {\n  return (\n    isQueryKey(arg1) ? [{ ...arg2, queryKey: arg1 }, arg3] : [arg1 || {}, arg2]\n  ) as [TFilters, TOptions]\n}\n\nexport function parseMutationFilterArgs<\n  TFilters extends MutationFilters,\n  TOptions = unknown,\n>(\n  arg1?: QueryKey | TFilters,\n  arg2?: TFilters | TOptions,\n  arg3?: TOptions,\n): [TFilters, TOptions | undefined] {\n  return (\n    isQueryKey(arg1)\n      ? [{ ...arg2, mutationKey: arg1 }, arg3]\n      : [arg1 || {}, arg2]\n  ) as [TFilters, TOptions]\n}\n\nexport function matchQuery(\n  filters: QueryFilters,\n  query: Query<any, any, any, any>,\n): boolean {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale,\n  } = filters\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive()\n    if (type === 'active' && !isActive) {\n      return false\n    }\n    if (type === 'inactive' && isActive) {\n      return false\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false\n  }\n\n  if (\n    typeof fetchStatus !== 'undefined' &&\n    fetchStatus !== query.state.fetchStatus\n  ) {\n    return false\n  }\n\n  if (predicate && !predicate(query)) {\n    return false\n  }\n\n  return true\n}\n\nexport function matchMutation(\n  filters: MutationFilters,\n  mutation: Mutation<any, any>,\n): boolean {\n  const { exact, fetching, predicate, mutationKey } = filters\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false\n    }\n    if (exact) {\n      if (\n        hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)\n      ) {\n        return false\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false\n    }\n  }\n\n  if (\n    typeof fetching === 'boolean' &&\n    (mutation.state.status === 'loading') !== fetching\n  ) {\n    return false\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false\n  }\n\n  return true\n}\n\nexport function hashQueryKeyByOptions<TQueryKey extends QueryKey = QueryKey>(\n  queryKey: TQueryKey,\n  options?: QueryOptions<any, any, any, TQueryKey>,\n): string {\n  const hashFn = options?.queryKeyHashFn || hashQueryKey\n  return hashFn(queryKey)\n}\n\n/**\n * Default query keys hash function.\n * Hashes the value into a stable hash.\n */\nexport function hashQueryKey(queryKey: QueryKey): string {\n  return JSON.stringify(queryKey, (_, val) =>\n    isPlainObject(val)\n      ? Object.keys(val)\n          .sort()\n          .reduce((result, key) => {\n            result[key] = val[key]\n            return result\n          }, {} as any)\n      : val,\n  )\n}\n\n/**\n * Checks if key `b` partially matches with key `a`.\n */\nexport function partialMatchKey(a: QueryKey, b: QueryKey): boolean {\n  return partialDeepEqual(a, b)\n}\n\n/**\n * Checks if `b` partially matches with `a`.\n */\nexport function partialDeepEqual(a: any, b: any): boolean {\n  if (a === b) {\n    return true\n  }\n\n  if (typeof a !== typeof b) {\n    return false\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some((key) => !partialDeepEqual(a[key], b[key]))\n  }\n\n  return false\n}\n\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\nexport function replaceEqualDeep<T>(a: unknown, b: T): T\nexport function replaceEqualDeep(a: any, b: any): any {\n  if (a === b) {\n    return a\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b)\n\n  if (array || (isPlainObject(a) && isPlainObject(b))) {\n    const aSize = array ? a.length : Object.keys(a).length\n    const bItems = array ? b : Object.keys(b)\n    const bSize = bItems.length\n    const copy: any = array ? [] : {}\n\n    let equalItems = 0\n\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i]\n      copy[key] = replaceEqualDeep(a[key], b[key])\n      if (copy[key] === a[key]) {\n        equalItems++\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy\n  }\n\n  return b\n}\n\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\nexport function shallowEqualObjects<T>(a: T, b: T): boolean {\n  if ((a && !b) || (b && !a)) {\n    return false\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function isPlainArray(value: unknown) {\n  return Array.isArray(value) && value.length === Object.keys(value).length\n}\n\n// Copied from: https://github.com/jonschlinkert/is-plain-object\nexport function isPlainObject(o: any): o is Object {\n  if (!hasObjectPrototype(o)) {\n    return false\n  }\n\n  // If has modified constructor\n  const ctor = o.constructor\n  if (typeof ctor === 'undefined') {\n    return true\n  }\n\n  // If has modified prototype\n  const prot = ctor.prototype\n  if (!hasObjectPrototype(prot)) {\n    return false\n  }\n\n  // If constructor does not have an Object-specific method\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false\n  }\n\n  // Most likely a plain Object\n  return true\n}\n\nfunction hasObjectPrototype(o: any): boolean {\n  return Object.prototype.toString.call(o) === '[object Object]'\n}\n\nexport function isQueryKey(value: unknown): value is QueryKey {\n  return Array.isArray(value)\n}\n\nexport function isError(value: any): value is Error {\n  return value instanceof Error\n}\n\nexport function sleep(timeout: number): Promise<void> {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout)\n  })\n}\n\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\nexport function scheduleMicrotask(callback: () => void) {\n  sleep(0).then(callback)\n}\n\nexport function getAbortController(): AbortController | undefined {\n  if (typeof AbortController === 'function') {\n    return new AbortController()\n  }\n  return\n}\n\nexport function replaceData<\n  TData,\n  TOptions extends QueryOptions<any, any, any, any>,\n>(prevData: TData | undefined, data: TData, options: TOptions): TData {\n  // Use prev data if an isDataEqual function is defined and returns `true`\n  if (options.isDataEqual?.(prevData, data)) {\n    return prevData as TData\n  } else if (typeof options.structuralSharing === 'function') {\n    return options.structuralSharing(prevData, data)\n  } else if (options.structuralSharing !== false) {\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data)\n  }\n  return data\n}\n", "import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype SetupFn = (\n  setFocused: (focused?: boolean) => void,\n) => (() => void) | undefined\n\nexport class FocusManager extends Subscribable {\n  private focused?: boolean\n  private cleanup?: () => void\n\n  private setup: SetupFn\n\n  constructor() {\n    super()\n    this.setup = (onFocus) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus()\n        // Listen to visibillitychange and focus\n        window.addEventListener('visibilitychange', listener, false)\n        window.addEventListener('focus', listener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener)\n          window.removeEventListener('focus', listener)\n        }\n      }\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.cleanup?.()\n      this.cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.setup = setup\n    this.cleanup?.()\n    this.cleanup = setup((focused) => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused)\n      } else {\n        this.onFocus()\n      }\n    })\n  }\n\n  setFocused(focused?: boolean): void {\n    const changed = this.focused !== focused\n    if (changed) {\n      this.focused = focused\n      this.onFocus()\n    }\n  }\n\n  onFocus(): void {\n    this.listeners.forEach(({ listener }) => {\n      listener()\n    })\n  }\n\n  isFocused(): boolean {\n    if (typeof this.focused === 'boolean') {\n      return this.focused\n    }\n\n    // document global can be unavailable in react native\n    if (typeof document === 'undefined') {\n      return true\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(\n      document.visibilityState,\n    )\n  }\n}\n\nexport const focusManager = new FocusManager()\n", "import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype SetupFn = (\n  setOnline: (online?: boolean) => void,\n) => (() => void) | undefined\n\nconst onlineEvents = ['online', 'offline'] as const\n\nexport class OnlineManager extends Subscribable {\n  private online?: boolean\n  private cleanup?: () => void\n\n  private setup: SetupFn\n\n  constructor() {\n    super()\n    this.setup = (onOnline) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onOnline()\n        // Listen to online\n        onlineEvents.forEach((event) => {\n          window.addEventListener(event, listener, false)\n        })\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          onlineEvents.forEach((event) => {\n            window.removeEventListener(event, listener)\n          })\n        }\n      }\n\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.cleanup?.()\n      this.cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.setup = setup\n    this.cleanup?.()\n    this.cleanup = setup((online?: boolean) => {\n      if (typeof online === 'boolean') {\n        this.setOnline(online)\n      } else {\n        this.onOnline()\n      }\n    })\n  }\n\n  setOnline(online?: boolean): void {\n    const changed = this.online !== online\n\n    if (changed) {\n      this.online = online\n      this.onOnline()\n    }\n  }\n\n  onOnline(): void {\n    this.listeners.forEach(({ listener }) => {\n      listener()\n    })\n  }\n\n  isOnline(): boolean {\n    if (typeof this.online === 'boolean') {\n      return this.online\n    }\n\n    if (\n      typeof navigator === 'undefined' ||\n      typeof navigator.onLine === 'undefined'\n    ) {\n      return true\n    }\n\n    return navigator.onLine\n  }\n}\n\nexport const onlineManager = new OnlineManager()\n", "import { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { sleep } from './utils'\nimport type { CancelOptions, NetworkMode } from './types'\n\n// TYPES\n\ninterface RetryerConfig<TData = unknown, TError = unknown> {\n  fn: () => TData | Promise<TData>\n  abort?: () => void\n  onError?: (error: TError) => void\n  onSuccess?: (data: TData) => void\n  onFail?: (failureCount: number, error: TError) => void\n  onPause?: () => void\n  onContinue?: () => void\n  retry?: RetryValue<TError>\n  retryDelay?: RetryDelayValue<TError>\n  networkMode: NetworkMode | undefined\n}\n\nexport interface Retryer<TData = unknown> {\n  promise: Promise<TData>\n  cancel: (cancelOptions?: CancelOptions) => void\n  continue: () => Promise<unknown>\n  cancelRetry: () => void\n  continueRetry: () => void\n}\n\nexport type RetryValue<TError> = boolean | number | ShouldRetryFunction<TError>\n\ntype ShouldRetryFunction<TError> = (\n  failureCount: number,\n  error: TError,\n) => boolean\n\nexport type RetryDelayValue<TError> = number | RetryDelayFunction<TError>\n\ntype RetryDelayFunction<TError = unknown> = (\n  failureCount: number,\n  error: TError,\n) => number\n\nfunction defaultRetryDelay(failureCount: number) {\n  return Math.min(1000 * 2 ** failureCount, 30000)\n}\n\nexport function canFetch(networkMode: NetworkMode | undefined): boolean {\n  return (networkMode ?? 'online') === 'online'\n    ? onlineManager.isOnline()\n    : true\n}\n\nexport class CancelledError {\n  revert?: boolean\n  silent?: boolean\n  constructor(options?: CancelOptions) {\n    this.revert = options?.revert\n    this.silent = options?.silent\n  }\n}\n\nexport function isCancelledError(value: any): value is CancelledError {\n  return value instanceof CancelledError\n}\n\nexport function createRetryer<TData = unknown, TError = unknown>(\n  config: RetryerConfig<TData, TError>,\n): Retryer<TData> {\n  let isRetryCancelled = false\n  let failureCount = 0\n  let isResolved = false\n  let continueFn: ((value?: unknown) => boolean) | undefined\n  let promiseResolve: (data: TData) => void\n  let promiseReject: (error: TError) => void\n\n  const promise = new Promise<TData>((outerResolve, outerReject) => {\n    promiseResolve = outerResolve\n    promiseReject = outerReject\n  })\n\n  const cancel = (cancelOptions?: CancelOptions): void => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions))\n\n      config.abort?.()\n    }\n  }\n  const cancelRetry = () => {\n    isRetryCancelled = true\n  }\n\n  const continueRetry = () => {\n    isRetryCancelled = false\n  }\n\n  const shouldPause = () =>\n    !focusManager.isFocused() ||\n    (config.networkMode !== 'always' && !onlineManager.isOnline())\n\n  const resolve = (value: any) => {\n    if (!isResolved) {\n      isResolved = true\n      config.onSuccess?.(value)\n      continueFn?.()\n      promiseResolve(value)\n    }\n  }\n\n  const reject = (value: any) => {\n    if (!isResolved) {\n      isResolved = true\n      config.onError?.(value)\n      continueFn?.()\n      promiseReject(value)\n    }\n  }\n\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        const canContinue = isResolved || !shouldPause()\n        if (canContinue) {\n          continueResolve(value)\n        }\n        return canContinue\n      }\n      config.onPause?.()\n    }).then(() => {\n      continueFn = undefined\n      if (!isResolved) {\n        config.onContinue?.()\n      }\n    })\n  }\n\n  // Create loop function\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved) {\n      return\n    }\n\n    let promiseOrValue: any\n\n    // Execute query\n    try {\n      promiseOrValue = config.fn()\n    } catch (error) {\n      promiseOrValue = Promise.reject(error)\n    }\n\n    Promise.resolve(promiseOrValue)\n      .then(resolve)\n      .catch((error) => {\n        // Stop if the fetch is already resolved\n        if (isResolved) {\n          return\n        }\n\n        // Do we need to retry the request?\n        const retry = config.retry ?? 3\n        const retryDelay = config.retryDelay ?? defaultRetryDelay\n        const delay =\n          typeof retryDelay === 'function'\n            ? retryDelay(failureCount, error)\n            : retryDelay\n        const shouldRetry =\n          retry === true ||\n          (typeof retry === 'number' && failureCount < retry) ||\n          (typeof retry === 'function' && retry(failureCount, error))\n\n        if (isRetryCancelled || !shouldRetry) {\n          // We are done if the query does not need to be retried\n          reject(error)\n          return\n        }\n\n        failureCount++\n\n        // Notify on fail\n        config.onFail?.(failureCount, error)\n\n        // Delay\n        sleep(delay)\n          // Pause if the document is not visible or when the device is offline\n          .then(() => {\n            if (shouldPause()) {\n              return pause()\n            }\n            return\n          })\n          .then(() => {\n            if (isRetryCancelled) {\n              reject(error)\n            } else {\n              run()\n            }\n          })\n      })\n  }\n\n  // Start loop\n  if (canFetch(config.networkMode)) {\n    run()\n  } else {\n    pause().then(run)\n  }\n\n  return {\n    promise,\n    cancel,\n    continue: () => {\n      const didContinue = continueFn?.()\n      return didContinue ? promise : Promise.resolve()\n    },\n    cancelRetry,\n    continueRetry,\n  }\n}\n", "export interface Logger {\n  log: LogFunction\n  warn: LogFunction\n  error: LogFunction\n}\n\ntype LogFunction = (...args: any[]) => void\n\nexport const defaultLogger: Logger = console\n", "import { scheduleMicrotask } from './utils'\n\n// TYPES\n\ntype NotifyCallback = () => void\n\ntype NotifyFunction = (callback: () => void) => void\n\ntype BatchNotifyFunction = (callback: () => void) => void\n\ntype BatchCallsCallback<T extends unknown[]> = (...args: T) => void\n\nexport function createNotifyManager() {\n  let queue: NotifyCallback[] = []\n  let transactions = 0\n  let notifyFn: NotifyFunction = (callback) => {\n    callback()\n  }\n  let batchNotifyFn: BatchNotifyFunction = (callback: () => void) => {\n    callback()\n  }\n\n  const batch = <T>(callback: () => T): T => {\n    let result\n    transactions++\n    try {\n      result = callback()\n    } finally {\n      transactions--\n      if (!transactions) {\n        flush()\n      }\n    }\n    return result\n  }\n\n  const schedule = (callback: NotifyCallback): void => {\n    if (transactions) {\n      queue.push(callback)\n    } else {\n      scheduleMicrotask(() => {\n        notifyFn(callback)\n      })\n    }\n  }\n\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n  const batchCalls = <T extends unknown[]>(\n    callback: BatchCallsCallback<T>,\n  ): BatchCallsCallback<T> => {\n    return (...args) => {\n      schedule(() => {\n        callback(...args)\n      })\n    }\n  }\n\n  const flush = (): void => {\n    const originalQueue = queue\n    queue = []\n    if (originalQueue.length) {\n      scheduleMicrotask(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback)\n          })\n        })\n      })\n    }\n  }\n\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n  const setNotifyFunction = (fn: NotifyFunction) => {\n    notifyFn = fn\n  }\n\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n  const setBatchNotifyFunction = (fn: BatchNotifyFunction) => {\n    batchNotifyFn = fn\n  }\n\n  return {\n    batch,\n    batchCalls,\n    schedule,\n    setNotifyFunction,\n    setBatchNotifyFunction,\n  } as const\n}\n\n// SINGLETON\nexport const notifyManager = createNotifyManager()\n", "import { isServer, isValidTimeout } from './utils'\n\nexport abstract class Removable {\n  cacheTime!: number\n  private gcTimeout?: ReturnType<typeof setTimeout>\n\n  destroy(): void {\n    this.clearGcTimeout()\n  }\n\n  protected scheduleGc(): void {\n    this.clearGcTimeout()\n\n    if (isValidTimeout(this.cacheTime)) {\n      this.gcTimeout = setTimeout(() => {\n        this.optionalRemove()\n      }, this.cacheTime)\n    }\n  }\n\n  protected updateCacheTime(newCacheTime: number | undefined): void {\n    // Default to 5 minutes (Infinity for server-side) if no cache time is set\n    this.cacheTime = Math.max(\n      this.cacheTime || 0,\n      newCacheTime ?? (isServer ? Infinity : 5 * 60 * 1000),\n    )\n  }\n\n  protected clearGcTimeout() {\n    if (this.gcTimeout) {\n      clearTimeout(this.gcTimeout)\n      this.gcTimeout = undefined\n    }\n  }\n\n  protected abstract optionalRemove(): void\n}\n", "import { getAbortController, noop, replaceData, timeUntilStale } from './utils'\nimport { defaultLogger } from './logger'\nimport { notifyManager } from './notifyManager'\nimport { canFetch, createRetryer, isCancelledError } from './retryer'\nimport { Removable } from './removable'\nimport type {\n  CancelOptions,\n  FetchStatus,\n  InitialDataFunction,\n  QueryFunctionContext,\n  QueryKey,\n  QueryMeta,\n  QueryOptions,\n  QueryStatus,\n  SetDataOptions,\n} from './types'\nimport type { QueryCache } from './queryCache'\nimport type { QueryObserver } from './queryObserver'\nimport type { Logger } from './logger'\nimport type { Retryer } from './retryer'\n\n// TYPES\n\ninterface QueryConfig<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  cache: QueryCache\n  queryKey: TQueryKey\n  queryHash: string\n  logger?: Logger\n  options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  state?: QueryState<TData, TError>\n}\n\nexport interface QueryState<TData = unknown, TError = unknown> {\n  data: TData | undefined\n  dataUpdateCount: number\n  dataUpdatedAt: number\n  error: TError | null\n  errorUpdateCount: number\n  errorUpdatedAt: number\n  fetchFailureCount: number\n  fetchFailureReason: TError | null\n  fetchMeta: any\n  isInvalidated: boolean\n  status: QueryStatus\n  fetchStatus: FetchStatus\n}\n\nexport interface FetchContext<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  fetchFn: () => unknown | Promise<unknown>\n  fetchOptions?: FetchOptions\n  signal?: AbortSignal\n  options: QueryOptions<TQueryFnData, TError, TData, any>\n  queryKey: TQueryKey\n  state: QueryState<TData, TError>\n}\n\nexport interface QueryBehavior<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  onFetch: (\n    context: FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n  ) => void\n}\n\nexport interface FetchOptions {\n  cancelRefetch?: boolean\n  meta?: any\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError\n}\n\ninterface FetchAction {\n  type: 'fetch'\n  meta?: any\n}\n\ninterface SuccessAction<TData> {\n  data: TData | undefined\n  type: 'success'\n  dataUpdatedAt?: number\n  manual?: boolean\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface InvalidateAction {\n  type: 'invalidate'\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\ninterface SetStateAction<TData, TError> {\n  type: 'setState'\n  state: Partial<QueryState<TData, TError>>\n  setStateOptions?: SetStateOptions\n}\n\nexport type Action<TData, TError> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | FetchAction\n  | InvalidateAction\n  | PauseAction\n  | SetStateAction<TData, TError>\n  | SuccessAction<TData>\n\nexport interface SetStateOptions {\n  meta?: any\n}\n\n// CLASS\n\nexport class Query<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Removable {\n  queryKey: TQueryKey\n  queryHash: string\n  options!: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  initialState: QueryState<TData, TError>\n  revertState?: QueryState<TData, TError>\n  state: QueryState<TData, TError>\n  isFetchingOptimistic?: boolean\n\n  private cache: QueryCache\n  private logger: Logger\n  private promise?: Promise<TData>\n  private retryer?: Retryer<TData>\n  private observers: QueryObserver<any, any, any, any, any>[]\n  private defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  private abortSignalConsumed: boolean\n\n  constructor(config: QueryConfig<TQueryFnData, TError, TData, TQueryKey>) {\n    super()\n\n    this.abortSignalConsumed = false\n    this.defaultOptions = config.defaultOptions\n    this.setOptions(config.options)\n    this.observers = []\n    this.cache = config.cache\n    this.logger = config.logger || defaultLogger\n    this.queryKey = config.queryKey\n    this.queryHash = config.queryHash\n    this.initialState = config.state || getDefaultState(this.options)\n    this.state = this.initialState\n    this.scheduleGc()\n  }\n\n  get meta(): QueryMeta | undefined {\n    return this.options.meta\n  }\n\n  private setOptions(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): void {\n    this.options = { ...this.defaultOptions, ...options }\n\n    this.updateCacheTime(this.options.cacheTime)\n  }\n\n  protected optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === 'idle') {\n      this.cache.remove(this)\n    }\n  }\n\n  setData(\n    newData: TData,\n    options?: SetDataOptions & { manual: boolean },\n  ): TData {\n    const data = replaceData(this.state.data, newData, this.options)\n\n    // Set data and mark it as cached\n    this.dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual,\n    })\n\n    return data\n  }\n\n  setState(\n    state: Partial<QueryState<TData, TError>>,\n    setStateOptions?: SetStateOptions,\n  ): void {\n    this.dispatch({ type: 'setState', state, setStateOptions })\n  }\n\n  cancel(options?: CancelOptions): Promise<void> {\n    const promise = this.promise\n    this.retryer?.cancel(options)\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve()\n  }\n\n  destroy(): void {\n    super.destroy()\n\n    this.cancel({ silent: true })\n  }\n\n  reset(): void {\n    this.destroy()\n    this.setState(this.initialState)\n  }\n\n  isActive(): boolean {\n    return this.observers.some((observer) => observer.options.enabled !== false)\n  }\n\n  isDisabled(): boolean {\n    return this.getObserversCount() > 0 && !this.isActive()\n  }\n\n  isStale(): boolean {\n    return (\n      this.state.isInvalidated ||\n      !this.state.dataUpdatedAt ||\n      this.observers.some((observer) => observer.getCurrentResult().isStale)\n    )\n  }\n\n  isStaleByTime(staleTime = 0): boolean {\n    return (\n      this.state.isInvalidated ||\n      !this.state.dataUpdatedAt ||\n      !timeUntilStale(this.state.dataUpdatedAt, staleTime)\n    )\n  }\n\n  onFocus(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus())\n\n    if (observer) {\n      observer.refetch({ cancelRefetch: false })\n    }\n\n    // Continue fetch if currently paused\n    this.retryer?.continue()\n  }\n\n  onOnline(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect())\n\n    if (observer) {\n      observer.refetch({ cancelRefetch: false })\n    }\n\n    // Continue fetch if currently paused\n    this.retryer?.continue()\n  }\n\n  addObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer)\n\n      // Stop the query from being garbage collected\n      this.clearGcTimeout()\n\n      this.cache.notify({ type: 'observerAdded', query: this, observer })\n    }\n  }\n\n  removeObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer)\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.abortSignalConsumed) {\n            this.retryer.cancel({ revert: true })\n          } else {\n            this.retryer.cancelRetry()\n          }\n        }\n\n        this.scheduleGc()\n      }\n\n      this.cache.notify({ type: 'observerRemoved', query: this, observer })\n    }\n  }\n\n  getObserversCount(): number {\n    return this.observers.length\n  }\n\n  invalidate(): void {\n    if (!this.state.isInvalidated) {\n      this.dispatch({ type: 'invalidate' })\n    }\n  }\n\n  fetch(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    fetchOptions?: FetchOptions,\n  ): Promise<TData> {\n    if (this.state.fetchStatus !== 'idle') {\n      if (this.state.dataUpdatedAt && fetchOptions?.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({ silent: true })\n      } else if (this.promise) {\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        this.retryer?.continueRetry()\n        // Return current promise if we are already fetching\n        return this.promise\n      }\n    }\n\n    // Update config if passed, otherwise the config from the last execution is used\n    if (options) {\n      this.setOptions(options)\n    }\n\n    // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn)\n      if (observer) {\n        this.setOptions(observer.options)\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!Array.isArray(this.options.queryKey)) {\n        this.logger.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`,\n        )\n      }\n    }\n\n    const abortController = getAbortController()\n\n    // Create query function context\n    const queryFnContext: QueryFunctionContext<TQueryKey> = {\n      queryKey: this.queryKey,\n      pageParam: undefined,\n      meta: this.meta,\n    }\n\n    // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n    const addSignalProperty = (object: unknown) => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          if (abortController) {\n            this.abortSignalConsumed = true\n            return abortController.signal\n          }\n          return undefined\n        },\n      })\n    }\n\n    addSignalProperty(queryFnContext)\n\n    // Create fetch function\n    const fetchFn = () => {\n      if (!this.options.queryFn) {\n        return Promise.reject(\n          `Missing queryFn for queryKey '${this.options.queryHash}'`,\n        )\n      }\n      this.abortSignalConsumed = false\n      return this.options.queryFn(queryFnContext)\n    }\n\n    // Trigger behavior hook\n    const context: FetchContext<TQueryFnData, TError, TData, TQueryKey> = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn,\n    }\n\n    addSignalProperty(context)\n\n    this.options.behavior?.onFetch(context)\n\n    // Store state in case the current fetch needs to be reverted\n    this.revertState = this.state\n\n    // Set to fetching state if not already in it\n    if (\n      this.state.fetchStatus === 'idle' ||\n      this.state.fetchMeta !== context.fetchOptions?.meta\n    ) {\n      this.dispatch({ type: 'fetch', meta: context.fetchOptions?.meta })\n    }\n\n    const onError = (error: TError | { silent?: boolean }) => {\n      // Optimistically update state if needed\n      if (!(isCancelledError(error) && error.silent)) {\n        this.dispatch({\n          type: 'error',\n          error: error as TError,\n        })\n      }\n\n      if (!isCancelledError(error)) {\n        // Notify cache callback\n        this.cache.config.onError?.(error, this as Query<any, any, any, any>)\n        this.cache.config.onSettled?.(\n          this.state.data,\n          error,\n          this as Query<any, any, any, any>,\n        )\n\n        if (process.env.NODE_ENV !== 'production') {\n          this.logger.error(error)\n        }\n      }\n\n      if (!this.isFetchingOptimistic) {\n        // Schedule query gc after fetching\n        this.scheduleGc()\n      }\n      this.isFetchingOptimistic = false\n    }\n\n    // Try to fetch the data\n    this.retryer = createRetryer({\n      fn: context.fetchFn as () => TData,\n      abort: abortController?.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (typeof data === 'undefined') {\n          if (process.env.NODE_ENV !== 'production') {\n            this.logger.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`,\n            )\n          }\n          onError(new Error(`${this.queryHash} data is undefined`) as any)\n          return\n        }\n\n        this.setData(data as TData)\n\n        // Notify cache callback\n        this.cache.config.onSuccess?.(data, this as Query<any, any, any, any>)\n        this.cache.config.onSettled?.(\n          data,\n          this.state.error,\n          this as Query<any, any, any, any>,\n        )\n\n        if (!this.isFetchingOptimistic) {\n          // Schedule query gc after fetching\n          this.scheduleGc()\n        }\n        this.isFetchingOptimistic = false\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.dispatch({ type: 'failed', failureCount, error })\n      },\n      onPause: () => {\n        this.dispatch({ type: 'pause' })\n      },\n      onContinue: () => {\n        this.dispatch({ type: 'continue' })\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n    })\n\n    this.promise = this.retryer.promise\n\n    return this.promise\n  }\n\n  private dispatch(action: Action<TData, TError>): void {\n    const reducer = (\n      state: QueryState<TData, TError>,\n    ): QueryState<TData, TError> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            fetchStatus: 'paused',\n          }\n        case 'continue':\n          return {\n            ...state,\n            fetchStatus: 'fetching',\n          }\n        case 'fetch':\n          return {\n            ...state,\n            fetchFailureCount: 0,\n            fetchFailureReason: null,\n            fetchMeta: action.meta ?? null,\n            fetchStatus: canFetch(this.options.networkMode)\n              ? 'fetching'\n              : 'paused',\n            ...(!state.dataUpdatedAt && {\n              error: null,\n              status: 'loading',\n            }),\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success',\n            ...(!action.manual && {\n              fetchStatus: 'idle',\n              fetchFailureCount: 0,\n              fetchFailureReason: null,\n            }),\n          }\n        case 'error':\n          const error = action.error as unknown\n\n          if (isCancelledError(error) && error.revert && this.revertState) {\n            return { ...this.revertState, fetchStatus: 'idle' }\n          }\n\n          return {\n            ...state,\n            error: error as TError,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error as TError,\n            fetchStatus: 'idle',\n            status: 'error',\n          }\n        case 'invalidate':\n          return {\n            ...state,\n            isInvalidated: true,\n          }\n        case 'setState':\n          return {\n            ...state,\n            ...action.state,\n          }\n      }\n    }\n\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate(action)\n      })\n\n      this.cache.notify({ query: this, type: 'updated', action })\n    })\n  }\n}\n\nfunction getDefaultState<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey,\n>(\n  options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): QueryState<TData, TError> {\n  const data =\n    typeof options.initialData === 'function'\n      ? (options.initialData as InitialDataFunction<TData>)()\n      : options.initialData\n\n  const hasData = typeof data !== 'undefined'\n\n  const initialDataUpdatedAt = hasData\n    ? typeof options.initialDataUpdatedAt === 'function'\n      ? (options.initialDataUpdatedAt as () => number | undefined)()\n      : options.initialDataUpdatedAt\n    : 0\n\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'loading',\n    fetchStatus: 'idle',\n  }\n}\n", "import { hashQueryKeyByOptions, matchQuery, parseFilterArgs } from './utils'\nimport { Query } from './query'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport type { QueryFilters } from './utils'\nimport type { Action, QueryState } from './query'\nimport type { NotifyEvent, QueryKey, QueryOptions } from './types'\nimport type { QueryClient } from './queryClient'\nimport type { QueryObserver } from './queryObserver'\n\n// TYPES\n\ninterface QueryCacheConfig {\n  onError?: (error: unknown, query: Query<unknown, unknown, unknown>) => void\n  onSuccess?: (data: unknown, query: Query<unknown, unknown, unknown>) => void\n  onSettled?: (\n    data: unknown | undefined,\n    error: unknown | null,\n    query: Query<unknown, unknown, unknown>,\n  ) => void\n}\n\ninterface QueryHashMap {\n  [hash: string]: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryAdded extends NotifyEvent {\n  type: 'added'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryRemoved extends NotifyEvent {\n  type: 'removed'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryUpdated extends NotifyEvent {\n  type: 'updated'\n  query: Query<any, any, any, any>\n  action: Action<any, any>\n}\n\ninterface NotifyEventQueryObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverResultsUpdated extends NotifyEvent {\n  type: 'observerResultsUpdated'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\nexport type QueryCacheNotifyEvent =\n  | NotifyEventQueryAdded\n  | NotifyEventQueryRemoved\n  | NotifyEventQueryUpdated\n  | NotifyEventQueryObserverAdded\n  | NotifyEventQueryObserverRemoved\n  | NotifyEventQueryObserverResultsUpdated\n  | NotifyEventQueryObserverOptionsUpdated\n\ntype QueryCacheListener = (event: QueryCacheNotifyEvent) => void\n\n// CLASS\n\nexport class QueryCache extends Subscribable<QueryCacheListener> {\n  config: QueryCacheConfig\n\n  private queries: Query<any, any, any, any>[]\n  private queriesMap: QueryHashMap\n\n  constructor(config?: QueryCacheConfig) {\n    super()\n    this.config = config || {}\n    this.queries = []\n    this.queriesMap = {}\n  }\n\n  build<TQueryFnData, TError, TData, TQueryKey extends QueryKey>(\n    client: QueryClient,\n    options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    state?: QueryState<TData, TError>,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> {\n    const queryKey = options.queryKey!\n    const queryHash =\n      options.queryHash ?? hashQueryKeyByOptions(queryKey, options)\n    let query = this.get<TQueryFnData, TError, TData, TQueryKey>(queryHash)\n\n    if (!query) {\n      query = new Query({\n        cache: this,\n        logger: client.getLogger(),\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey),\n      })\n      this.add(query)\n    }\n\n    return query\n  }\n\n  add(query: Query<any, any, any, any>): void {\n    if (!this.queriesMap[query.queryHash]) {\n      this.queriesMap[query.queryHash] = query\n      this.queries.push(query)\n      this.notify({\n        type: 'added',\n        query,\n      })\n    }\n  }\n\n  remove(query: Query<any, any, any, any>): void {\n    const queryInMap = this.queriesMap[query.queryHash]\n\n    if (queryInMap) {\n      query.destroy()\n\n      this.queries = this.queries.filter((x) => x !== query)\n\n      if (queryInMap === query) {\n        delete this.queriesMap[query.queryHash]\n      }\n\n      this.notify({ type: 'removed', query })\n    }\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.queries.forEach((query) => {\n        this.remove(query)\n      })\n    })\n  }\n\n  get<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryHash: string,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> | undefined {\n    return this.queriesMap[queryHash]\n  }\n\n  getAll(): Query[] {\n    return this.queries\n  }\n\n  find<TQueryFnData = unknown, TError = unknown, TData = TQueryFnData>(\n    arg1: QueryKey,\n    arg2?: QueryFilters,\n  ): Query<TQueryFnData, TError, TData> | undefined {\n    const [filters] = parseFilterArgs(arg1, arg2)\n\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true\n    }\n\n    return this.queries.find((query) => matchQuery(filters, query))\n  }\n\n  findAll(queryKey?: QueryKey, filters?: QueryFilters): Query[]\n  findAll(filters?: QueryFilters): Query[]\n  findAll(arg1?: QueryKey | QueryFilters, arg2?: QueryFilters): Query[]\n  findAll(arg1?: QueryKey | QueryFilters, arg2?: QueryFilters): Query[] {\n    const [filters] = parseFilterArgs(arg1, arg2)\n    return Object.keys(filters).length > 0\n      ? this.queries.filter((query) => matchQuery(filters, query))\n      : this.queries\n  }\n\n  notify(event: QueryCacheNotifyEvent) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(({ listener }) => {\n        listener(event)\n      })\n    })\n  }\n\n  onFocus(): void {\n    notifyManager.batch(() => {\n      this.queries.forEach((query) => {\n        query.onFocus()\n      })\n    })\n  }\n\n  onOnline(): void {\n    notifyManager.batch(() => {\n      this.queries.forEach((query) => {\n        query.onOnline()\n      })\n    })\n  }\n}\n", "import { defaultLogger } from './logger'\nimport { notifyManager } from './notifyManager'\nimport { Removable } from './removable'\nimport { canFetch, createRetryer } from './retryer'\nimport type { MutationMeta, MutationOptions, MutationStatus } from './types'\nimport type { MutationCache } from './mutationCache'\nimport type { MutationObserver } from './mutationObserver'\nimport type { Logger } from './logger'\nimport type { Retryer } from './retryer'\n\n// TYPES\n\ninterface MutationConfig<TData, TError, TVariables, TContext> {\n  mutationId: number\n  mutationCache: MutationCache\n  options: MutationOptions<TData, TError, TVariables, TContext>\n  logger?: Logger\n  defaultOptions?: MutationOptions<TData, TError, TVariables, TContext>\n  state?: MutationState<TData, TError, TVariables, TContext>\n  meta?: MutationMeta\n}\n\nexport interface MutationState<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> {\n  context: TContext | undefined\n  data: TData | undefined\n  error: TError | null\n  failureCount: number\n  failureReason: TError | null\n  isPaused: boolean\n  status: MutationStatus\n  variables: TVariables | undefined\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError | null\n}\n\ninterface LoadingAction<TVariables, TContext> {\n  type: 'loading'\n  variables?: TVariables\n  context?: TContext\n}\n\ninterface SuccessAction<TData> {\n  type: 'success'\n  data: TData\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\ninterface SetStateAction<TData, TError, TVariables, TContext> {\n  type: 'setState'\n  state: MutationState<TData, TError, TVariables, TContext>\n}\n\nexport type Action<TData, TError, TVariables, TContext> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | LoadingAction<TVariables, TContext>\n  | PauseAction\n  | SetStateAction<TData, TError, TVariables, TContext>\n  | SuccessAction<TData>\n\n// CLASS\n\nexport class Mutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> extends Removable {\n  state: MutationState<TData, TError, TVariables, TContext>\n  options!: MutationOptions<TData, TError, TVariables, TContext>\n  mutationId: number\n\n  private observers: MutationObserver<TData, TError, TVariables, TContext>[]\n  private defaultOptions?: MutationOptions<TData, TError, TVariables, TContext>\n  private mutationCache: MutationCache\n  private logger: Logger\n  private retryer?: Retryer<TData>\n\n  constructor(config: MutationConfig<TData, TError, TVariables, TContext>) {\n    super()\n\n    this.defaultOptions = config.defaultOptions\n    this.mutationId = config.mutationId\n    this.mutationCache = config.mutationCache\n    this.logger = config.logger || defaultLogger\n    this.observers = []\n    this.state = config.state || getDefaultState()\n\n    this.setOptions(config.options)\n    this.scheduleGc()\n  }\n\n  setOptions(\n    options?: MutationOptions<TData, TError, TVariables, TContext>,\n  ): void {\n    this.options = { ...this.defaultOptions, ...options }\n\n    this.updateCacheTime(this.options.cacheTime)\n  }\n\n  get meta(): MutationMeta | undefined {\n    return this.options.meta\n  }\n\n  setState(state: MutationState<TData, TError, TVariables, TContext>): void {\n    this.dispatch({ type: 'setState', state })\n  }\n\n  addObserver(observer: MutationObserver<any, any, any, any>): void {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer)\n\n      // Stop the mutation from being garbage collected\n      this.clearGcTimeout()\n\n      this.mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer,\n      })\n    }\n  }\n\n  removeObserver(observer: MutationObserver<any, any, any, any>): void {\n    this.observers = this.observers.filter((x) => x !== observer)\n\n    this.scheduleGc()\n\n    this.mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer,\n    })\n  }\n\n  protected optionalRemove() {\n    if (!this.observers.length) {\n      if (this.state.status === 'loading') {\n        this.scheduleGc()\n      } else {\n        this.mutationCache.remove(this)\n      }\n    }\n  }\n\n  continue(): Promise<unknown> {\n    return this.retryer?.continue() ?? this.execute()\n  }\n\n  async execute(): Promise<TData> {\n    const executeMutation = () => {\n      this.retryer = createRetryer({\n        fn: () => {\n          if (!this.options.mutationFn) {\n            return Promise.reject('No mutationFn found')\n          }\n          return this.options.mutationFn(this.state.variables!)\n        },\n        onFail: (failureCount, error) => {\n          this.dispatch({ type: 'failed', failureCount, error })\n        },\n        onPause: () => {\n          this.dispatch({ type: 'pause' })\n        },\n        onContinue: () => {\n          this.dispatch({ type: 'continue' })\n        },\n        retry: this.options.retry ?? 0,\n        retryDelay: this.options.retryDelay,\n        networkMode: this.options.networkMode,\n      })\n\n      return this.retryer.promise\n    }\n\n    const restored = this.state.status === 'loading'\n    try {\n      if (!restored) {\n        this.dispatch({ type: 'loading', variables: this.options.variables! })\n        // Notify cache callback\n        await this.mutationCache.config.onMutate?.(\n          this.state.variables,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n        const context = await this.options.onMutate?.(this.state.variables!)\n        if (context !== this.state.context) {\n          this.dispatch({\n            type: 'loading',\n            context,\n            variables: this.state.variables,\n          })\n        }\n      }\n      const data = await executeMutation()\n\n      // Notify cache callback\n      await this.mutationCache.config.onSuccess?.(\n        data,\n        this.state.variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n      )\n\n      await this.options.onSuccess?.(\n        data,\n        this.state.variables!,\n        this.state.context!,\n      )\n\n      // Notify cache callback\n      await this.mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n      )\n\n      await this.options.onSettled?.(\n        data,\n        null,\n        this.state.variables!,\n        this.state.context,\n      )\n\n      this.dispatch({ type: 'success', data })\n      return data\n    } catch (error) {\n      try {\n        // Notify cache callback\n        await this.mutationCache.config.onError?.(\n          error,\n          this.state.variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n\n        if (process.env.NODE_ENV !== 'production') {\n          this.logger.error(error)\n        }\n\n        await this.options.onError?.(\n          error as TError,\n          this.state.variables!,\n          this.state.context,\n        )\n\n        // Notify cache callback\n        await this.mutationCache.config.onSettled?.(\n          undefined,\n          error,\n          this.state.variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n\n        await this.options.onSettled?.(\n          undefined,\n          error as TError,\n          this.state.variables!,\n          this.state.context,\n        )\n        throw error\n      } finally {\n        this.dispatch({ type: 'error', error: error as TError })\n      }\n    }\n  }\n\n  private dispatch(action: Action<TData, TError, TVariables, TContext>): void {\n    const reducer = (\n      state: MutationState<TData, TError, TVariables, TContext>,\n    ): MutationState<TData, TError, TVariables, TContext> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            isPaused: true,\n          }\n        case 'continue':\n          return {\n            ...state,\n            isPaused: false,\n          }\n        case 'loading':\n          return {\n            ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: !canFetch(this.options.networkMode),\n            status: 'loading',\n            variables: action.variables,\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false,\n          }\n        case 'error':\n          return {\n            ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error',\n          }\n        case 'setState':\n          return {\n            ...state,\n            ...action.state,\n          }\n      }\n    }\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onMutationUpdate(action)\n      })\n      this.mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action,\n      })\n    })\n  }\n}\n\nexport function getDefaultState<\n  TData,\n  TError,\n  TVariables,\n  TContext,\n>(): MutationState<TData, TError, TVariables, TContext> {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined,\n  }\n}\n", "import { notifyManager } from './notifyManager'\nimport { Mutation } from './mutation'\nimport { matchMutation, noop } from './utils'\nimport { Subscribable } from './subscribable'\nimport type { MutationObserver } from './mutationObserver'\nimport type { MutationOptions, NotifyEvent } from './types'\nimport type { QueryClient } from './queryClient'\nimport type { Action, MutationState } from './mutation'\nimport type { MutationFilters } from './utils'\n\n// TYPES\n\ninterface MutationCacheConfig {\n  onError?: (\n    error: unknown,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSuccess?: (\n    data: unknown,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onMutate?: (\n    variables: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSettled?: (\n    data: unknown | undefined,\n    error: unknown | null,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n}\n\ninterface NotifyEventMutationAdded extends NotifyEvent {\n  type: 'added'\n  mutation: Mutation<any, any, any, any>\n}\ninterface NotifyEventMutationRemoved extends NotifyEvent {\n  type: 'removed'\n  mutation: Mutation<any, any, any, any>\n}\n\ninterface NotifyEventMutationObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  mutation?: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any, any>\n}\n\ninterface NotifyEventMutationUpdated extends NotifyEvent {\n  type: 'updated'\n  mutation: Mutation<any, any, any, any>\n  action: Action<any, any, any, any>\n}\n\ntype MutationCacheNotifyEvent =\n  | NotifyEventMutationAdded\n  | NotifyEventMutationRemoved\n  | NotifyEventMutationObserverAdded\n  | NotifyEventMutationObserverRemoved\n  | NotifyEventMutationObserverOptionsUpdated\n  | NotifyEventMutationUpdated\n\ntype MutationCacheListener = (event: MutationCacheNotifyEvent) => void\n\n// CLASS\n\nexport class MutationCache extends Subscribable<MutationCacheListener> {\n  config: MutationCacheConfig\n\n  private mutations: Mutation<any, any, any, any>[]\n  private mutationId: number\n  private resuming: Promise<unknown> | undefined\n\n  constructor(config?: MutationCacheConfig) {\n    super()\n    this.config = config || {}\n    this.mutations = []\n    this.mutationId = 0\n  }\n\n  build<TData, TError, TVariables, TContext>(\n    client: QueryClient,\n    options: MutationOptions<TData, TError, TVariables, TContext>,\n    state?: MutationState<TData, TError, TVariables, TContext>,\n  ): Mutation<TData, TError, TVariables, TContext> {\n    const mutation = new Mutation({\n      mutationCache: this,\n      logger: client.getLogger(),\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n      defaultOptions: options.mutationKey\n        ? client.getMutationDefaults(options.mutationKey)\n        : undefined,\n    })\n\n    this.add(mutation)\n\n    return mutation\n  }\n\n  add(mutation: Mutation<any, any, any, any>): void {\n    this.mutations.push(mutation)\n    this.notify({ type: 'added', mutation })\n  }\n\n  remove(mutation: Mutation<any, any, any, any>): void {\n    this.mutations = this.mutations.filter((x) => x !== mutation)\n    this.notify({ type: 'removed', mutation })\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.mutations.forEach((mutation) => {\n        this.remove(mutation)\n      })\n    })\n  }\n\n  getAll(): Mutation[] {\n    return this.mutations\n  }\n\n  find<TData = unknown, TError = unknown, TVariables = any, TContext = unknown>(\n    filters: MutationFilters,\n  ): Mutation<TData, TError, TVariables, TContext> | undefined {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true\n    }\n\n    return this.mutations.find((mutation) => matchMutation(filters, mutation))\n  }\n\n  findAll(filters: MutationFilters): Mutation[] {\n    return this.mutations.filter((mutation) => matchMutation(filters, mutation))\n  }\n\n  notify(event: MutationCacheNotifyEvent) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(({ listener }) => {\n        listener(event)\n      })\n    })\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    this.resuming = (this.resuming ?? Promise.resolve())\n      .then(() => {\n        const pausedMutations = this.mutations.filter((x) => x.state.isPaused)\n        return notifyManager.batch(() =>\n          pausedMutations.reduce(\n            (promise, mutation) =>\n              promise.then(() => mutation.continue().catch(noop)),\n            Promise.resolve() as Promise<unknown>,\n          ),\n        )\n      })\n      .then(() => {\n        this.resuming = undefined\n      })\n\n    return this.resuming\n  }\n}\n", "import type { QueryBehavior } from './query'\n\nimport type {\n  InfiniteData,\n  QueryFunctionContext,\n  QueryOptions,\n  RefetchQueryFilters,\n} from './types'\n\nexport function infiniteQueryBehavior<\n  TQueryFnData,\n  TError,\n  TData,\n>(): QueryBehavior<TQueryFnData, TError, InfiniteData<TData>> {\n  return {\n    onFetch: (context) => {\n      context.fetchFn = () => {\n        const refetchPage: RefetchQueryFilters['refetchPage'] | undefined =\n          context.fetchOptions?.meta?.refetchPage\n        const fetchMore = context.fetchOptions?.meta?.fetchMore\n        const pageParam = fetchMore?.pageParam\n        const isFetchingNextPage = fetchMore?.direction === 'forward'\n        const isFetchingPreviousPage = fetchMore?.direction === 'backward'\n        const oldPages = context.state.data?.pages || []\n        const oldPageParams = context.state.data?.pageParams || []\n        let newPageParams = oldPageParams\n        let cancelled = false\n\n        const addSignalProperty = (object: unknown) => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              if (context.signal?.aborted) {\n                cancelled = true\n              } else {\n                context.signal?.addEventListener('abort', () => {\n                  cancelled = true\n                })\n              }\n              return context.signal\n            },\n          })\n        }\n\n        // Get query function\n        const queryFn =\n          context.options.queryFn ||\n          (() =>\n            Promise.reject(\n              `Missing queryFn for queryKey '${context.options.queryHash}'`,\n            ))\n\n        const buildNewPages = (\n          pages: unknown[],\n          param: unknown,\n          page: unknown,\n          previous?: boolean,\n        ) => {\n          newPageParams = previous\n            ? [param, ...newPageParams]\n            : [...newPageParams, param]\n          return previous ? [page, ...pages] : [...pages, page]\n        }\n\n        // Create function to fetch a page\n        const fetchPage = (\n          pages: unknown[],\n          manual?: boolean,\n          param?: unknown,\n          previous?: boolean,\n        ): Promise<unknown[]> => {\n          if (cancelled) {\n            return Promise.reject('Cancelled')\n          }\n\n          if (typeof param === 'undefined' && !manual && pages.length) {\n            return Promise.resolve(pages)\n          }\n\n          const queryFnContext: QueryFunctionContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            meta: context.options.meta,\n          }\n\n          addSignalProperty(queryFnContext)\n\n          const queryFnResult = queryFn(queryFnContext)\n\n          const promise = Promise.resolve(queryFnResult).then((page) =>\n            buildNewPages(pages, param, page, previous),\n          )\n\n          return promise\n        }\n\n        let promise: Promise<unknown[]>\n\n        // Fetch first page?\n        if (!oldPages.length) {\n          promise = fetchPage([])\n        }\n\n        // Fetch next page?\n        else if (isFetchingNextPage) {\n          const manual = typeof pageParam !== 'undefined'\n          const param = manual\n            ? pageParam\n            : getNextPageParam(context.options, oldPages)\n          promise = fetchPage(oldPages, manual, param)\n        }\n\n        // Fetch previous page?\n        else if (isFetchingPreviousPage) {\n          const manual = typeof pageParam !== 'undefined'\n          const param = manual\n            ? pageParam\n            : getPreviousPageParam(context.options, oldPages)\n          promise = fetchPage(oldPages, manual, param, true)\n        }\n\n        // Refetch pages\n        else {\n          newPageParams = []\n\n          const manual = typeof context.options.getNextPageParam === 'undefined'\n\n          const shouldFetchFirstPage =\n            refetchPage && oldPages[0]\n              ? refetchPage(oldPages[0], 0, oldPages)\n              : true\n\n          // Fetch first page\n          promise = shouldFetchFirstPage\n            ? fetchPage([], manual, oldPageParams[0])\n            : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0]))\n\n          // Fetch remaining pages\n          for (let i = 1; i < oldPages.length; i++) {\n            promise = promise.then((pages) => {\n              const shouldFetchNextPage =\n                refetchPage && oldPages[i]\n                  ? refetchPage(oldPages[i], i, oldPages)\n                  : true\n\n              if (shouldFetchNextPage) {\n                const param = manual\n                  ? oldPageParams[i]\n                  : getNextPageParam(context.options, pages)\n                return fetchPage(pages, manual, param)\n              }\n              return Promise.resolve(\n                buildNewPages(pages, oldPageParams[i], oldPages[i]),\n              )\n            })\n          }\n        }\n\n        const finalPromise = promise.then((pages) => ({\n          pages,\n          pageParams: newPageParams,\n        }))\n\n        return finalPromise\n      }\n    },\n  }\n}\n\nexport function getNextPageParam(\n  options: QueryOptions<any, any>,\n  pages: unknown[],\n): unknown | undefined {\n  return options.getNextPageParam?.(pages[pages.length - 1], pages)\n}\n\nexport function getPreviousPageParam(\n  options: QueryOptions<any, any>,\n  pages: unknown[],\n): unknown | undefined {\n  return options.getPreviousPageParam?.(pages[0], pages)\n}\n\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\nexport function hasNextPage(\n  options: QueryOptions<any, any, any, any>,\n  pages?: unknown,\n): boolean | undefined {\n  if (options.getNextPageParam && Array.isArray(pages)) {\n    const nextPageParam = getNextPageParam(options, pages)\n    return (\n      typeof nextPageParam !== 'undefined' &&\n      nextPageParam !== null &&\n      nextPageParam !== false\n    )\n  }\n  return\n}\n\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\nexport function hasPreviousPage(\n  options: QueryOptions<any, any, any, any>,\n  pages?: unknown,\n): boolean | undefined {\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\n    const previousPageParam = getPreviousPageParam(options, pages)\n    return (\n      typeof previousPageParam !== 'undefined' &&\n      previousPageParam !== null &&\n      previousPageParam !== false\n    )\n  }\n  return\n}\n", "import {\n  functionalUpdate,\n  hashQueryKey,\n  hashQueryKeyByOptions,\n  noop,\n  parseFilterArgs,\n  parseQueryArgs,\n  partialMatchKey,\n} from './utils'\nimport { QueryCache } from './queryCache'\nimport { MutationCache } from './mutationCache'\nimport { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { notifyManager } from './notifyManager'\nimport { infiniteQueryBehavior } from './infiniteQueryBehavior'\nimport { defaultLogger } from './logger'\nimport type { CancelOptions, DefaultedQueryObserverOptions } from './types'\nimport type { Logger } from './logger'\nimport type { QueryState } from './query'\nimport type {\n  DefaultOptions,\n  FetchInfiniteQueryOptions,\n  FetchQueryOptions,\n  InfiniteData,\n  InvalidateOptions,\n  InvalidateQueryFilters,\n  MutationKey,\n  MutationObserverOptions,\n  MutationOptions,\n  QueryClientConfig,\n  QueryFunction,\n  QueryKey,\n  QueryObserverOptions,\n  QueryOptions,\n  RefetchOptions,\n  RefetchQueryFilters,\n  ResetOptions,\n  ResetQueryFilters,\n  SetDataOptions,\n  WithRequired,\n} from './types'\nimport type { MutationFilters, QueryFilters, Updater } from './utils'\n\n// TYPES\n\ninterface QueryDefaults {\n  queryKey: QueryKey\n  defaultOptions: QueryOptions<any, any, any>\n}\n\ninterface MutationDefaults {\n  mutationKey: MutationKey\n  defaultOptions: MutationOptions<any, any, any, any>\n}\n\n// CLASS\n\nexport class QueryClient {\n  private queryCache: QueryCache\n  private mutationCache: MutationCache\n  private logger: Logger\n  private defaultOptions: DefaultOptions\n  private queryDefaults: QueryDefaults[]\n  private mutationDefaults: MutationDefaults[]\n  private mountCount: number\n  private unsubscribeFocus?: () => void\n  private unsubscribeOnline?: () => void\n\n  constructor(config: QueryClientConfig = {}) {\n    this.queryCache = config.queryCache || new QueryCache()\n    this.mutationCache = config.mutationCache || new MutationCache()\n    this.logger = config.logger || defaultLogger\n    this.defaultOptions = config.defaultOptions || {}\n    this.queryDefaults = []\n    this.mutationDefaults = []\n    this.mountCount = 0\n\n    if (process.env.NODE_ENV !== 'production' && config.logger) {\n      this.logger.error(\n        `Passing a custom logger has been deprecated and will be removed in the next major version.`,\n      )\n    }\n  }\n\n  mount(): void {\n    this.mountCount++\n    if (this.mountCount !== 1) return\n\n    this.unsubscribeFocus = focusManager.subscribe(() => {\n      if (focusManager.isFocused()) {\n        this.resumePausedMutations()\n        this.queryCache.onFocus()\n      }\n    })\n    this.unsubscribeOnline = onlineManager.subscribe(() => {\n      if (onlineManager.isOnline()) {\n        this.resumePausedMutations()\n        this.queryCache.onOnline()\n      }\n    })\n  }\n\n  unmount(): void {\n    this.mountCount--\n    if (this.mountCount !== 0) return\n\n    this.unsubscribeFocus?.()\n    this.unsubscribeFocus = undefined\n\n    this.unsubscribeOnline?.()\n    this.unsubscribeOnline = undefined\n  }\n\n  isFetching(filters?: QueryFilters): number\n  isFetching(queryKey?: QueryKey, filters?: QueryFilters): number\n  isFetching(arg1?: QueryKey | QueryFilters, arg2?: QueryFilters): number {\n    const [filters] = parseFilterArgs(arg1, arg2)\n    filters.fetchStatus = 'fetching'\n    return this.queryCache.findAll(filters).length\n  }\n\n  isMutating(filters?: MutationFilters): number {\n    return this.mutationCache.findAll({ ...filters, fetching: true }).length\n  }\n\n  getQueryData<TQueryFnData = unknown>(\n    queryKey: QueryKey,\n    filters?: QueryFilters,\n  ): TQueryFnData | undefined {\n    return this.queryCache.find<TQueryFnData>(queryKey, filters)?.state.data\n  }\n\n  ensureQueryData<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: WithRequired<\n      FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey'\n    >,\n  ): Promise<TData>\n  ensureQueryData<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: Omit<\n      FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey'\n    >,\n  ): Promise<TData>\n  ensureQueryData<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: Omit<\n      FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey' | 'queryFn'\n    >,\n  ): Promise<TData>\n  ensureQueryData<\n    TQueryFnData,\n    TError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1:\n      | TQueryKey\n      | WithRequired<\n          FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n          'queryKey'\n        >,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData> {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n    const cachedData = this.getQueryData<TData>(parsedOptions.queryKey!)\n\n    return cachedData\n      ? Promise.resolve(cachedData)\n      : this.fetchQuery(parsedOptions)\n  }\n\n  getQueriesData<TQueryFnData = unknown>(\n    queryKey: QueryKey,\n  ): [QueryKey, TQueryFnData | undefined][]\n  getQueriesData<TQueryFnData = unknown>(\n    filters: QueryFilters,\n  ): [QueryKey, TQueryFnData | undefined][]\n  getQueriesData<TQueryFnData = unknown>(\n    queryKeyOrFilters: QueryKey | QueryFilters,\n  ): [QueryKey, TQueryFnData | undefined][] {\n    return this.getQueryCache()\n      .findAll(queryKeyOrFilters)\n      .map(({ queryKey, state }) => {\n        const data = state.data as TQueryFnData | undefined\n        return [queryKey, data]\n      })\n  }\n\n  setQueryData<TQueryFnData>(\n    queryKey: QueryKey,\n    updater: Updater<TQueryFnData | undefined, TQueryFnData | undefined>,\n    options?: SetDataOptions,\n  ): TQueryFnData | undefined {\n    const query = this.queryCache.find<TQueryFnData>(queryKey)\n    const prevData = query?.state.data\n    const data = functionalUpdate(updater, prevData)\n\n    if (typeof data === 'undefined') {\n      return undefined\n    }\n\n    const parsedOptions = parseQueryArgs(queryKey)\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions)\n    return this.queryCache\n      .build(this, defaultedOptions)\n      .setData(data, { ...options, manual: true })\n  }\n\n  setQueriesData<TQueryFnData>(\n    queryKey: QueryKey,\n    updater: Updater<TQueryFnData | undefined, TQueryFnData | undefined>,\n    options?: SetDataOptions,\n  ): [QueryKey, TQueryFnData | undefined][]\n\n  setQueriesData<TQueryFnData>(\n    filters: QueryFilters,\n    updater: Updater<TQueryFnData | undefined, TQueryFnData | undefined>,\n    options?: SetDataOptions,\n  ): [QueryKey, TQueryFnData | undefined][]\n\n  setQueriesData<TQueryFnData>(\n    queryKeyOrFilters: QueryKey | QueryFilters,\n    updater: Updater<TQueryFnData | undefined, TQueryFnData | undefined>,\n    options?: SetDataOptions,\n  ): [QueryKey, TQueryFnData | undefined][] {\n    return notifyManager.batch(() =>\n      this.getQueryCache()\n        .findAll(queryKeyOrFilters)\n        .map(({ queryKey }) => [\n          queryKey,\n          this.setQueryData<TQueryFnData>(queryKey, updater, options),\n        ]),\n    )\n  }\n\n  getQueryState<TQueryFnData = unknown, TError = undefined>(\n    queryKey: QueryKey,\n    filters?: QueryFilters,\n  ): QueryState<TQueryFnData, TError> | undefined {\n    return this.queryCache.find<TQueryFnData, TError>(queryKey, filters)?.state\n  }\n\n  removeQueries(filters?: QueryFilters): void\n  removeQueries(queryKey?: QueryKey, filters?: QueryFilters): void\n  removeQueries(arg1?: QueryKey | QueryFilters, arg2?: QueryFilters): void {\n    const [filters] = parseFilterArgs(arg1, arg2)\n    const queryCache = this.queryCache\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query)\n      })\n    })\n  }\n\n  resetQueries<TPageData = unknown>(\n    filters?: ResetQueryFilters<TPageData>,\n    options?: ResetOptions,\n  ): Promise<void>\n  resetQueries<TPageData = unknown>(\n    queryKey?: QueryKey,\n    filters?: ResetQueryFilters<TPageData>,\n    options?: ResetOptions,\n  ): Promise<void>\n  resetQueries(\n    arg1?: QueryKey | ResetQueryFilters,\n    arg2?: ResetQueryFilters | ResetOptions,\n    arg3?: ResetOptions,\n  ): Promise<void> {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3)\n    const queryCache = this.queryCache\n\n    const refetchFilters: RefetchQueryFilters = {\n      type: 'active',\n      ...filters,\n    }\n\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset()\n      })\n      return this.refetchQueries(refetchFilters, options)\n    })\n  }\n\n  cancelQueries(filters?: QueryFilters, options?: CancelOptions): Promise<void>\n  cancelQueries(\n    queryKey?: QueryKey,\n    filters?: QueryFilters,\n    options?: CancelOptions,\n  ): Promise<void>\n  cancelQueries(\n    arg1?: QueryKey | QueryFilters,\n    arg2?: QueryFilters | CancelOptions,\n    arg3?: CancelOptions,\n  ): Promise<void> {\n    const [filters, cancelOptions = {}] = parseFilterArgs(arg1, arg2, arg3)\n\n    if (typeof cancelOptions.revert === 'undefined') {\n      cancelOptions.revert = true\n    }\n\n    const promises = notifyManager.batch(() =>\n      this.queryCache\n        .findAll(filters)\n        .map((query) => query.cancel(cancelOptions)),\n    )\n\n    return Promise.all(promises).then(noop).catch(noop)\n  }\n\n  invalidateQueries<TPageData = unknown>(\n    filters?: InvalidateQueryFilters<TPageData>,\n    options?: InvalidateOptions,\n  ): Promise<void>\n  invalidateQueries<TPageData = unknown>(\n    queryKey?: QueryKey,\n    filters?: InvalidateQueryFilters<TPageData>,\n    options?: InvalidateOptions,\n  ): Promise<void>\n  invalidateQueries(\n    arg1?: QueryKey | InvalidateQueryFilters,\n    arg2?: InvalidateQueryFilters | InvalidateOptions,\n    arg3?: InvalidateOptions,\n  ): Promise<void> {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3)\n\n    return notifyManager.batch(() => {\n      this.queryCache.findAll(filters).forEach((query) => {\n        query.invalidate()\n      })\n\n      if (filters.refetchType === 'none') {\n        return Promise.resolve()\n      }\n      const refetchFilters: RefetchQueryFilters = {\n        ...filters,\n        type: filters.refetchType ?? filters.type ?? 'active',\n      }\n      return this.refetchQueries(refetchFilters, options)\n    })\n  }\n\n  refetchQueries<TPageData = unknown>(\n    filters?: RefetchQueryFilters<TPageData>,\n    options?: RefetchOptions,\n  ): Promise<void>\n  refetchQueries<TPageData = unknown>(\n    queryKey?: QueryKey,\n    filters?: RefetchQueryFilters<TPageData>,\n    options?: RefetchOptions,\n  ): Promise<void>\n  refetchQueries(\n    arg1?: QueryKey | RefetchQueryFilters,\n    arg2?: RefetchQueryFilters | RefetchOptions,\n    arg3?: RefetchOptions,\n  ): Promise<void> {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3)\n\n    const promises = notifyManager.batch(() =>\n      this.queryCache\n        .findAll(filters)\n        .filter((query) => !query.isDisabled())\n        .map((query) =>\n          query.fetch(undefined, {\n            ...options,\n            cancelRefetch: options?.cancelRefetch ?? true,\n            meta: { refetchPage: filters.refetchPage },\n          }),\n        ),\n    )\n\n    let promise = Promise.all(promises).then(noop)\n\n    if (!options?.throwOnError) {\n      promise = promise.catch(noop)\n    }\n\n    return promise\n  }\n\n  fetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData>\n  fetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData>\n  fetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData>\n  fetchQuery<\n    TQueryFnData,\n    TError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1: TQueryKey | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData> {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions)\n\n    // https://github.com/tannerlinsley/react-query/issues/652\n    if (typeof defaultedOptions.retry === 'undefined') {\n      defaultedOptions.retry = false\n    }\n\n    const query = this.queryCache.build(this, defaultedOptions)\n\n    return query.isStaleByTime(defaultedOptions.staleTime)\n      ? query.fetch(defaultedOptions)\n      : Promise.resolve(query.state.data as TData)\n  }\n\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1: TQueryKey | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void> {\n    return this.fetchQuery(arg1 as any, arg2 as any, arg3)\n      .then(noop)\n      .catch(noop)\n  }\n\n  fetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<InfiniteData<TData>>\n  fetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<InfiniteData<TData>>\n  fetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<InfiniteData<TData>>\n  fetchInfiniteQuery<\n    TQueryFnData,\n    TError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1:\n      | TQueryKey\n      | FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<InfiniteData<TData>> {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n    parsedOptions.behavior = infiniteQueryBehavior<\n      TQueryFnData,\n      TError,\n      TData\n    >()\n    return this.fetchQuery(parsedOptions)\n  }\n\n  prefetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchInfiniteQuery<\n    TQueryFnData,\n    TError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1:\n      | TQueryKey\n      | FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void> {\n    return this.fetchInfiniteQuery(arg1 as any, arg2 as any, arg3)\n      .then(noop)\n      .catch(noop)\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    return this.mutationCache.resumePausedMutations()\n  }\n\n  getQueryCache(): QueryCache {\n    return this.queryCache\n  }\n\n  getMutationCache(): MutationCache {\n    return this.mutationCache\n  }\n\n  getLogger(): Logger {\n    return this.logger\n  }\n\n  getDefaultOptions(): DefaultOptions {\n    return this.defaultOptions\n  }\n\n  setDefaultOptions(options: DefaultOptions): void {\n    this.defaultOptions = options\n  }\n\n  setQueryDefaults(\n    queryKey: QueryKey,\n    options: QueryObserverOptions<unknown, any, any, any>,\n  ): void {\n    const result = this.queryDefaults.find(\n      (x) => hashQueryKey(queryKey) === hashQueryKey(x.queryKey),\n    )\n    if (result) {\n      result.defaultOptions = options\n    } else {\n      this.queryDefaults.push({ queryKey, defaultOptions: options })\n    }\n  }\n\n  getQueryDefaults(\n    queryKey?: QueryKey,\n  ): QueryObserverOptions<any, any, any, any, any> | undefined {\n    if (!queryKey) {\n      return undefined\n    }\n\n    // Get the first matching defaults\n    const firstMatchingDefaults = this.queryDefaults.find((x) =>\n      partialMatchKey(queryKey, x.queryKey),\n    )\n\n    // Additional checks and error in dev mode\n    if (process.env.NODE_ENV !== 'production') {\n      // Retrieve all matching defaults for the given key\n      const matchingDefaults = this.queryDefaults.filter((x) =>\n        partialMatchKey(queryKey, x.queryKey),\n      )\n      // It is ok not having defaults, but it is error prone to have more than 1 default for a given key\n      if (matchingDefaults.length > 1) {\n        this.logger.error(\n          `[QueryClient] Several query defaults match with key '${JSON.stringify(\n            queryKey,\n          )}'. The first matching query defaults are used. Please check how query defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetquerydefaults.`,\n        )\n      }\n    }\n\n    return firstMatchingDefaults?.defaultOptions\n  }\n\n  setMutationDefaults(\n    mutationKey: MutationKey,\n    options: MutationObserverOptions<any, any, any, any>,\n  ): void {\n    const result = this.mutationDefaults.find(\n      (x) => hashQueryKey(mutationKey) === hashQueryKey(x.mutationKey),\n    )\n    if (result) {\n      result.defaultOptions = options\n    } else {\n      this.mutationDefaults.push({ mutationKey, defaultOptions: options })\n    }\n  }\n\n  getMutationDefaults(\n    mutationKey?: MutationKey,\n  ): MutationObserverOptions<any, any, any, any> | undefined {\n    if (!mutationKey) {\n      return undefined\n    }\n\n    // Get the first matching defaults\n    const firstMatchingDefaults = this.mutationDefaults.find((x) =>\n      partialMatchKey(mutationKey, x.mutationKey),\n    )\n\n    // Additional checks and error in dev mode\n    if (process.env.NODE_ENV !== 'production') {\n      // Retrieve all matching defaults for the given key\n      const matchingDefaults = this.mutationDefaults.filter((x) =>\n        partialMatchKey(mutationKey, x.mutationKey),\n      )\n      // It is ok not having defaults, but it is error prone to have more than 1 default for a given key\n      if (matchingDefaults.length > 1) {\n        this.logger.error(\n          `[QueryClient] Several mutation defaults match with key '${JSON.stringify(\n            mutationKey,\n          )}'. The first matching mutation defaults are used. Please check how mutation defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetmutationdefaults.`,\n        )\n      }\n    }\n\n    return firstMatchingDefaults?.defaultOptions\n  }\n\n  defaultQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey extends QueryKey,\n  >(\n    options?:\n      | QueryObserverOptions<TQueryFnData, TError, TData, TQueryData, TQueryKey>\n      | DefaultedQueryObserverOptions<\n          TQueryFnData,\n          TError,\n          TData,\n          TQueryData,\n          TQueryKey\n        >,\n  ): DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  > {\n    if (options?._defaulted) {\n      return options as DefaultedQueryObserverOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryData,\n        TQueryKey\n      >\n    }\n\n    const defaultedOptions = {\n      ...this.defaultOptions.queries,\n      ...this.getQueryDefaults(options?.queryKey),\n      ...options,\n      _defaulted: true,\n    }\n\n    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions,\n      )\n    }\n\n    // dependent default values\n    if (typeof defaultedOptions.refetchOnReconnect === 'undefined') {\n      defaultedOptions.refetchOnReconnect =\n        defaultedOptions.networkMode !== 'always'\n    }\n    if (typeof defaultedOptions.useErrorBoundary === 'undefined') {\n      defaultedOptions.useErrorBoundary = !!defaultedOptions.suspense\n    }\n\n    return defaultedOptions as DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >\n  }\n\n  defaultMutationOptions<T extends MutationOptions<any, any, any, any>>(\n    options?: T,\n  ): T {\n    if (options?._defaulted) {\n      return options\n    }\n    return {\n      ...this.defaultOptions.mutations,\n      ...this.getMutationDefaults(options?.mutationKey),\n      ...options,\n      _defaulted: true,\n    } as T\n  }\n\n  clear(): void {\n    this.queryCache.clear()\n    this.mutationCache.clear()\n  }\n}\n", "import {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  shallowEqualObjects,\n  timeUntilStale,\n} from './utils'\nimport { notifyManager } from './notifyManager'\nimport { focusManager } from './focusManager'\nimport { Subscribable } from './subscribable'\nimport { canFetch, isCancelledError } from './retryer'\nimport type {\n  PlaceholderDataFunction,\n  QueryKey,\n  QueryObserverBaseResult,\n  QueryObserverOptions,\n  QueryObserverResult,\n  QueryOptions,\n  RefetchOptions,\n} from './types'\nimport type { Action, FetchOptions, Query, QueryState } from './query'\nimport type { QueryClient } from './queryClient'\nimport type { DefaultedQueryObserverOptions, RefetchPageFilters } from './types'\n\ntype QueryObserverListener<TData, TError> = (\n  result: QueryObserverResult<TData, TError>,\n) => void\n\nexport interface NotifyOptions {\n  cache?: boolean\n  listeners?: boolean\n  onError?: boolean\n  onSuccess?: boolean\n}\n\nexport interface ObserverFetchOptions extends FetchOptions {\n  throwOnError?: boolean\n}\n\nexport class QueryObserver<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Subscribable<QueryObserverListener<TData, TError>> {\n  options: QueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >\n\n  private client: QueryClient\n  private currentQuery!: Query<TQueryFnData, TError, TQueryData, TQueryKey>\n  private currentQueryInitialState!: QueryState<TQueryData, TError>\n  private currentResult!: QueryObserverResult<TData, TError>\n  private currentResultState?: QueryState<TQueryData, TError>\n  private currentResultOptions?: QueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >\n  private previousQueryResult?: QueryObserverResult<TData, TError>\n  private selectError: TError | null\n  private selectFn?: (data: TQueryData) => TData\n  private selectResult?: TData\n  private staleTimeoutId?: ReturnType<typeof setTimeout>\n  private refetchIntervalId?: ReturnType<typeof setInterval>\n  private currentRefetchInterval?: number | false\n  private trackedProps!: Set<keyof QueryObserverResult>\n\n  constructor(\n    client: QueryClient,\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ) {\n    super()\n\n    this.client = client\n    this.options = options\n    this.trackedProps = new Set()\n    this.selectError = null\n    this.bindMethods()\n    this.setOptions(options)\n  }\n\n  protected bindMethods(): void {\n    this.remove = this.remove.bind(this)\n    this.refetch = this.refetch.bind(this)\n  }\n\n  protected onSubscribe(): void {\n    if (this.listeners.size === 1) {\n      this.currentQuery.addObserver(this)\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch()\n      }\n\n      this.updateTimers()\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.destroy()\n    }\n  }\n\n  shouldFetchOnReconnect(): boolean {\n    return shouldFetchOn(\n      this.currentQuery,\n      this.options,\n      this.options.refetchOnReconnect,\n    )\n  }\n\n  shouldFetchOnWindowFocus(): boolean {\n    return shouldFetchOn(\n      this.currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus,\n    )\n  }\n\n  destroy(): void {\n    this.listeners = new Set()\n    this.clearStaleTimeout()\n    this.clearRefetchInterval()\n    this.currentQuery.removeObserver(this)\n  }\n\n  setOptions(\n    options?: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n    notifyOptions?: NotifyOptions,\n  ): void {\n    const prevOptions = this.options\n    const prevQuery = this.currentQuery\n\n    this.options = this.client.defaultQueryOptions(options)\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      typeof options?.isDataEqual !== 'undefined'\n    ) {\n      this.client\n        .getLogger()\n        .error(\n          `The isDataEqual option has been deprecated and will be removed in the next major version. You can achieve the same functionality by passing a function as the structuralSharing option`,\n        )\n    }\n\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.currentQuery,\n        observer: this,\n      })\n    }\n\n    if (\n      typeof this.options.enabled !== 'undefined' &&\n      typeof this.options.enabled !== 'boolean'\n    ) {\n      throw new Error('Expected enabled to be a boolean')\n    }\n\n    // Keep previous query key if the user does not supply one\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey\n    }\n\n    this.updateQuery()\n\n    const mounted = this.hasListeners()\n\n    // Fetch if there are subscribers\n    if (\n      mounted &&\n      shouldFetchOptionally(\n        this.currentQuery,\n        prevQuery,\n        this.options,\n        prevOptions,\n      )\n    ) {\n      this.executeFetch()\n    }\n\n    // Update result\n    this.updateResult(notifyOptions)\n\n    // Update stale interval if needed\n    if (\n      mounted &&\n      (this.currentQuery !== prevQuery ||\n        this.options.enabled !== prevOptions.enabled ||\n        this.options.staleTime !== prevOptions.staleTime)\n    ) {\n      this.updateStaleTimeout()\n    }\n\n    const nextRefetchInterval = this.computeRefetchInterval()\n\n    // Update refetch interval if needed\n    if (\n      mounted &&\n      (this.currentQuery !== prevQuery ||\n        this.options.enabled !== prevOptions.enabled ||\n        nextRefetchInterval !== this.currentRefetchInterval)\n    ) {\n      this.updateRefetchInterval(nextRefetchInterval)\n    }\n  }\n\n  getOptimisticResult(\n    options: DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const query = this.client.getQueryCache().build(this.client, options)\n\n    const result = this.createResult(query, options)\n\n    if (shouldAssignObserverCurrentProperties(this, result, options)) {\n      // this assigns the optimistic result to the current Observer\n      // because if the query function changes, useQuery will be performing\n      // an effect where it would fetch again.\n      // When the fetch finishes, we perform a deep data cloning in order\n      // to reuse objects references. This deep data clone is performed against\n      // the `observer.currentResult.data` property\n      // When QueryKey changes, we refresh the query and get new `optimistic`\n      // result, while we leave the `observer.currentResult`, so when new data\n      // arrives, it finds the old `observer.currentResult` which is related\n      // to the old QueryKey. Which means that currentResult and selectData are\n      // out of sync already.\n      // To solve this, we move the cursor of the currentResult everytime\n      // an observer reads an optimistic value.\n\n      // When keeping the previous data, the result doesn't change until new\n      // data arrives.\n      this.currentResult = result\n      this.currentResultOptions = this.options\n      this.currentResultState = this.currentQuery.state\n    }\n    return result\n  }\n\n  getCurrentResult(): QueryObserverResult<TData, TError> {\n    return this.currentResult\n  }\n\n  trackResult(\n    result: QueryObserverResult<TData, TError>,\n  ): QueryObserverResult<TData, TError> {\n    const trackedResult = {} as QueryObserverResult<TData, TError>\n\n    Object.keys(result).forEach((key) => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackedProps.add(key as keyof QueryObserverResult)\n          return result[key as keyof QueryObserverResult]\n        },\n      })\n    })\n\n    return trackedResult\n  }\n\n  getCurrentQuery(): Query<TQueryFnData, TError, TQueryData, TQueryKey> {\n    return this.currentQuery\n  }\n\n  remove(): void {\n    this.client.getQueryCache().remove(this.currentQuery)\n  }\n\n  refetch<TPageData>({\n    refetchPage,\n    ...options\n  }: RefetchOptions & RefetchPageFilters<TPageData> = {}): Promise<\n    QueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n      meta: { refetchPage },\n    })\n  }\n\n  fetchOptimistic(\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    const defaultedOptions = this.client.defaultQueryOptions(options)\n\n    const query = this.client\n      .getQueryCache()\n      .build(this.client, defaultedOptions)\n    query.isFetchingOptimistic = true\n\n    return query.fetch().then(() => this.createResult(query, defaultedOptions))\n  }\n\n  protected fetch(\n    fetchOptions: ObserverFetchOptions,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    return this.executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true,\n    }).then(() => {\n      this.updateResult()\n      return this.currentResult\n    })\n  }\n\n  private executeFetch(\n    fetchOptions?: ObserverFetchOptions,\n  ): Promise<TQueryData | undefined> {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery()\n\n    // Fetch\n    let promise: Promise<TQueryData | undefined> = this.currentQuery.fetch(\n      this.options as QueryOptions<TQueryFnData, TError, TQueryData, TQueryKey>,\n      fetchOptions,\n    )\n\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop)\n    }\n\n    return promise\n  }\n\n  private updateStaleTimeout(): void {\n    this.clearStaleTimeout()\n\n    if (\n      isServer ||\n      this.currentResult.isStale ||\n      !isValidTimeout(this.options.staleTime)\n    ) {\n      return\n    }\n\n    const time = timeUntilStale(\n      this.currentResult.dataUpdatedAt,\n      this.options.staleTime,\n    )\n\n    // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n    const timeout = time + 1\n\n    this.staleTimeoutId = setTimeout(() => {\n      if (!this.currentResult.isStale) {\n        this.updateResult()\n      }\n    }, timeout)\n  }\n\n  private computeRefetchInterval() {\n    return typeof this.options.refetchInterval === 'function'\n      ? this.options.refetchInterval(this.currentResult.data, this.currentQuery)\n      : this.options.refetchInterval ?? false\n  }\n\n  private updateRefetchInterval(nextInterval: number | false): void {\n    this.clearRefetchInterval()\n\n    this.currentRefetchInterval = nextInterval\n\n    if (\n      isServer ||\n      this.options.enabled === false ||\n      !isValidTimeout(this.currentRefetchInterval) ||\n      this.currentRefetchInterval === 0\n    ) {\n      return\n    }\n\n    this.refetchIntervalId = setInterval(() => {\n      if (\n        this.options.refetchIntervalInBackground ||\n        focusManager.isFocused()\n      ) {\n        this.executeFetch()\n      }\n    }, this.currentRefetchInterval)\n  }\n\n  private updateTimers(): void {\n    this.updateStaleTimeout()\n    this.updateRefetchInterval(this.computeRefetchInterval())\n  }\n\n  private clearStaleTimeout(): void {\n    if (this.staleTimeoutId) {\n      clearTimeout(this.staleTimeoutId)\n      this.staleTimeoutId = undefined\n    }\n  }\n\n  private clearRefetchInterval(): void {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId)\n      this.refetchIntervalId = undefined\n    }\n  }\n\n  protected createResult(\n    query: Query<TQueryFnData, TError, TQueryData, TQueryKey>,\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const prevQuery = this.currentQuery\n    const prevOptions = this.options\n    const prevResult = this.currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n    const prevResultState = this.currentResultState\n    const prevResultOptions = this.currentResultOptions\n    const queryChange = query !== prevQuery\n    const queryInitialState = queryChange\n      ? query.state\n      : this.currentQueryInitialState\n    const prevQueryResult = queryChange\n      ? this.currentResult\n      : this.previousQueryResult\n\n    const { state } = query\n    let { dataUpdatedAt, error, errorUpdatedAt, fetchStatus, status } = state\n    let isPreviousData = false\n    let isPlaceholderData = false\n    let data: TData | undefined\n\n    // Optimistically set result in fetching state if needed\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners()\n\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options)\n\n      const fetchOptionally =\n        mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions)\n\n      if (fetchOnMount || fetchOptionally) {\n        fetchStatus = canFetch(query.options.networkMode)\n          ? 'fetching'\n          : 'paused'\n        if (!dataUpdatedAt) {\n          status = 'loading'\n        }\n      }\n      if (options._optimisticResults === 'isRestoring') {\n        fetchStatus = 'idle'\n      }\n    }\n\n    // Keep previous data if needed\n    if (\n      options.keepPreviousData &&\n      !state.dataUpdatedAt &&\n      prevQueryResult?.isSuccess &&\n      status !== 'error'\n    ) {\n      data = prevQueryResult.data\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt\n      status = prevQueryResult.status\n      isPreviousData = true\n    }\n    // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n      // Memoize select result\n      if (\n        prevResult &&\n        state.data === prevResultState?.data &&\n        options.select === this.selectFn\n      ) {\n        data = this.selectResult\n      } else {\n        try {\n          this.selectFn = options.select\n          data = options.select(state.data)\n          data = replaceData(prevResult?.data, data, options)\n          this.selectResult = data\n          this.selectError = null\n        } catch (selectError) {\n          if (process.env.NODE_ENV !== 'production') {\n            this.client.getLogger().error(selectError)\n          }\n          this.selectError = selectError as TError\n        }\n      }\n    }\n    // Use query data\n    else {\n      data = state.data as unknown as TData\n    }\n\n    // Show placeholder data if needed\n    if (\n      typeof options.placeholderData !== 'undefined' &&\n      typeof data === 'undefined' &&\n      status === 'loading'\n    ) {\n      let placeholderData\n\n      // Memoize placeholder data\n      if (\n        prevResult?.isPlaceholderData &&\n        options.placeholderData === prevResultOptions?.placeholderData\n      ) {\n        placeholderData = prevResult.data\n      } else {\n        placeholderData =\n          typeof options.placeholderData === 'function'\n            ? (options.placeholderData as PlaceholderDataFunction<TQueryData>)()\n            : options.placeholderData\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData)\n            this.selectError = null\n          } catch (selectError) {\n            if (process.env.NODE_ENV !== 'production') {\n              this.client.getLogger().error(selectError)\n            }\n            this.selectError = selectError as TError\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success'\n        data = replaceData(prevResult?.data, placeholderData, options) as TData\n        isPlaceholderData = true\n      }\n    }\n\n    if (this.selectError) {\n      error = this.selectError as any\n      data = this.selectResult\n      errorUpdatedAt = Date.now()\n      status = 'error'\n    }\n\n    const isFetching = fetchStatus === 'fetching'\n    const isLoading = status === 'loading'\n    const isError = status === 'error'\n\n    const result: QueryObserverBaseResult<TData, TError> = {\n      status,\n      fetchStatus,\n      isLoading,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading && isFetching,\n      data,\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      failureReason: state.fetchFailureReason,\n      errorUpdateCount: state.errorUpdateCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount:\n        state.dataUpdateCount > queryInitialState.dataUpdateCount ||\n        state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isLoading,\n      isLoadingError: isError && state.dataUpdatedAt === 0,\n      isPaused: fetchStatus === 'paused',\n      isPlaceholderData,\n      isPreviousData,\n      isRefetchError: isError && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove,\n    }\n\n    return result as QueryObserverResult<TData, TError>\n  }\n\n  updateResult(notifyOptions?: NotifyOptions): void {\n    const prevResult = this.currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n\n    const nextResult = this.createResult(this.currentQuery, this.options)\n    this.currentResultState = this.currentQuery.state\n    this.currentResultOptions = this.options\n\n    // Only notify and update result if something has changed\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return\n    }\n\n    this.currentResult = nextResult\n\n    // Determine which callbacks to trigger\n    const defaultNotifyOptions: NotifyOptions = { cache: true }\n\n    const shouldNotifyListeners = (): boolean => {\n      if (!prevResult) {\n        return true\n      }\n\n      const { notifyOnChangeProps } = this.options\n      const notifyOnChangePropsValue =\n        typeof notifyOnChangeProps === 'function'\n          ? notifyOnChangeProps()\n          : notifyOnChangeProps\n\n      if (\n        notifyOnChangePropsValue === 'all' ||\n        (!notifyOnChangePropsValue && !this.trackedProps.size)\n      ) {\n        return true\n      }\n\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.trackedProps,\n      )\n\n      if (this.options.useErrorBoundary) {\n        includedProps.add('error')\n      }\n\n      return Object.keys(this.currentResult).some((key) => {\n        const typedKey = key as keyof QueryObserverResult\n        const changed = this.currentResult[typedKey] !== prevResult[typedKey]\n        return changed && includedProps.has(typedKey)\n      })\n    }\n\n    if (notifyOptions?.listeners !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true\n    }\n\n    this.notify({ ...defaultNotifyOptions, ...notifyOptions })\n  }\n\n  private updateQuery(): void {\n    const query = this.client.getQueryCache().build(this.client, this.options)\n\n    if (query === this.currentQuery) {\n      return\n    }\n\n    const prevQuery = this.currentQuery as\n      | Query<TQueryFnData, TError, TQueryData, TQueryKey>\n      | undefined\n    this.currentQuery = query\n    this.currentQueryInitialState = query.state\n    this.previousQueryResult = this.currentResult\n\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this)\n      query.addObserver(this)\n    }\n  }\n\n  onQueryUpdate(action: Action<TData, TError>): void {\n    const notifyOptions: NotifyOptions = {}\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = !action.manual\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true\n    }\n\n    this.updateResult(notifyOptions)\n\n    if (this.hasListeners()) {\n      this.updateTimers()\n    }\n  }\n\n  private notify(notifyOptions: NotifyOptions): void {\n    notifyManager.batch(() => {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        this.options.onSuccess?.(this.currentResult.data!)\n        this.options.onSettled?.(this.currentResult.data!, null)\n      } else if (notifyOptions.onError) {\n        this.options.onError?.(this.currentResult.error!)\n        this.options.onSettled?.(undefined, this.currentResult.error!)\n      }\n\n      // Then trigger the listeners\n      if (notifyOptions.listeners) {\n        this.listeners.forEach(({ listener }) => {\n          listener(this.currentResult)\n        })\n      }\n\n      // Then the cache listeners\n      if (notifyOptions.cache) {\n        this.client.getQueryCache().notify({\n          query: this.currentQuery,\n          type: 'observerResultsUpdated',\n        })\n      }\n    })\n  }\n}\n\nfunction shouldLoadOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any>,\n): boolean {\n  return (\n    options.enabled !== false &&\n    !query.state.dataUpdatedAt &&\n    !(query.state.status === 'error' && options.retryOnMount === false)\n  )\n}\n\nfunction shouldFetchOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    shouldLoadOnMount(query, options) ||\n    (query.state.dataUpdatedAt > 0 &&\n      shouldFetchOn(query, options, options.refetchOnMount))\n  )\n}\n\nfunction shouldFetchOn(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  field: typeof options['refetchOnMount'] &\n    typeof options['refetchOnWindowFocus'] &\n    typeof options['refetchOnReconnect'],\n) {\n  if (options.enabled !== false) {\n    const value = typeof field === 'function' ? field(query) : field\n\n    return value === 'always' || (value !== false && isStale(query, options))\n  }\n  return false\n}\n\nfunction shouldFetchOptionally(\n  query: Query<any, any, any, any>,\n  prevQuery: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  prevOptions: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    options.enabled !== false &&\n    (query !== prevQuery || prevOptions.enabled === false) &&\n    (!options.suspense || query.state.status !== 'error') &&\n    isStale(query, options)\n  )\n}\n\nfunction isStale(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return query.isStaleByTime(options.staleTime)\n}\n\n// this function would decide if we will update the observer's 'current'\n// properties after an optimistic reading via getOptimisticResult\nfunction shouldAssignObserverCurrentProperties<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  optimisticResult: QueryObserverResult<TData, TError>,\n  options: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n) {\n  // it is important to keep this condition like this for three reasons:\n  // 1. It will get removed in the v5\n  // 2. it reads: don't update the properties if we want to keep the previous\n  // data.\n  // 3. The opposite condition (!options.keepPreviousData) would fallthrough\n  // and will result in a bad decision\n  if (options.keepPreviousData) {\n    return false\n  }\n\n  // this means we want to put some placeholder data when pending and queryKey\n  // changed.\n  if (options.placeholderData !== undefined) {\n    // re-assign properties only if current data is placeholder data\n    // which means that data did not arrive yet, so, if there is some cached data\n    // we need to \"prepare\" to receive it\n    return optimisticResult.isPlaceholderData\n  }\n\n  // if the newly created result isn't what the observer is holding as current,\n  // then we'll need to update the properties as well\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true\n  }\n\n  // basically, just keep previous properties if nothing changed\n  return false\n}\n", "import { QueryObserver } from './queryObserver'\nimport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior,\n} from './infiniteQueryBehavior'\nimport type {\n  DefaultedInfiniteQueryObserverOptions,\n  FetchNextPageOptions,\n  FetchPreviousPageOptions,\n  InfiniteData,\n  InfiniteQueryObserverOptions,\n  InfiniteQueryObserverResult,\n  QueryKey,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { NotifyOptions, ObserverFetchOptions } from './queryObserver'\nimport type { Query } from './query'\n\ntype InfiniteQueryObserverListener<TData, TError> = (\n  result: InfiniteQueryObserverResult<TData, TError>,\n) => void\n\nexport class InfiniteQueryObserver<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends QueryObserver<\n  TQueryFnData,\n  TError,\n  InfiniteData<TData>,\n  InfiniteData<TQueryData>,\n  TQueryKey\n> {\n  // Type override\n  subscribe!: (\n    listener?: InfiniteQueryObserverListener<TData, TError>,\n  ) => () => void\n\n  // Type override\n  getCurrentResult!: () => InfiniteQueryObserverResult<TData, TError>\n\n  // Type override\n  protected fetch!: (\n    fetchOptions: ObserverFetchOptions,\n  ) => Promise<InfiniteQueryObserverResult<TData, TError>>\n\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(\n    client: QueryClient,\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ) {\n    super(client, options)\n  }\n\n  protected bindMethods(): void {\n    super.bindMethods()\n    this.fetchNextPage = this.fetchNextPage.bind(this)\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this)\n  }\n\n  setOptions(\n    options?: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n    notifyOptions?: NotifyOptions,\n  ): void {\n    super.setOptions(\n      {\n        ...options,\n        behavior: infiniteQueryBehavior(),\n      },\n      notifyOptions,\n    )\n  }\n\n  getOptimisticResult(\n    options: DefaultedInfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): InfiniteQueryObserverResult<TData, TError> {\n    options.behavior = infiniteQueryBehavior()\n    return super.getOptimisticResult(options) as InfiniteQueryObserverResult<\n      TData,\n      TError\n    >\n  }\n\n  fetchNextPage({ pageParam, ...options }: FetchNextPageOptions = {}): Promise<\n    InfiniteQueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: 'forward', pageParam },\n      },\n    })\n  }\n\n  fetchPreviousPage({\n    pageParam,\n    ...options\n  }: FetchPreviousPageOptions = {}): Promise<\n    InfiniteQueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: 'backward', pageParam },\n      },\n    })\n  }\n\n  protected createResult(\n    query: Query<TQueryFnData, TError, InfiniteData<TQueryData>, TQueryKey>,\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): InfiniteQueryObserverResult<TData, TError> {\n    const { state } = query\n    const result = super.createResult(query, options)\n\n    const { isFetching, isRefetching } = result\n\n    const isFetchingNextPage =\n      isFetching && state.fetchMeta?.fetchMore?.direction === 'forward'\n\n    const isFetchingPreviousPage =\n      isFetching && state.fetchMeta?.fetchMore?.direction === 'backward'\n\n    return {\n      ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, state.data?.pages),\n      hasPreviousPage: hasPreviousPage(options, state.data?.pages),\n      isFetchingNextPage,\n      isFetchingPreviousPage,\n      isRefetching:\n        isRefetching && !isFetchingNextPage && !isFetchingPreviousPage,\n    }\n  }\n}\n", "import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  MutateOptions,\n  MutationObserverBaseResult,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\ninterface NotifyOptions {\n  listeners?: boolean\n  onError?: boolean\n  onSuccess?: boolean\n}\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  private client: QueryClient\n  private currentResult!: MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  >\n  private currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  private mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options?: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options\n    this.options = this.client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.currentMutation,\n        observer: this,\n      })\n    }\n    this.currentMutation?.setOptions(this.options)\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.updateResult()\n\n    // Determine which callbacks to trigger\n    const notifyOptions: NotifyOptions = {\n      listeners: true,\n    }\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true\n    }\n\n    this.notify(notifyOptions)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.currentResult\n  }\n\n  reset(): void {\n    this.currentMutation = undefined\n    this.updateResult()\n    this.notify({ listeners: true })\n  }\n\n  mutate(\n    variables?: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.mutateOptions = options\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this)\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, {\n      ...this.options,\n      variables:\n        typeof variables !== 'undefined' ? variables : this.options.variables,\n    })\n\n    this.currentMutation.addObserver(this)\n\n    return this.currentMutation.execute()\n  }\n\n  private updateResult(): void {\n    const state = this.currentMutation\n      ? this.currentMutation.state\n      : getDefaultState<TData, TError, TVariables, TContext>()\n\n    const result: MutationObserverBaseResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    > = {\n      ...state,\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    }\n\n    this.currentResult = result as MutationObserverResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    >\n  }\n\n  private notify(options: NotifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions && this.hasListeners()) {\n        if (options.onSuccess) {\n          this.mutateOptions.onSuccess?.(\n            this.currentResult.data!,\n            this.currentResult.variables!,\n            this.currentResult.context!,\n          )\n          this.mutateOptions.onSettled?.(\n            this.currentResult.data!,\n            null,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        } else if (options.onError) {\n          this.mutateOptions.onError?.(\n            this.currentResult.error!,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n          this.mutateOptions.onSettled?.(\n            undefined,\n            this.currentResult.error,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      if (options.listeners) {\n        this.listeners.forEach(({ listener }) => {\n          listener(this.currentResult)\n        })\n      }\n    })\n  }\n}\n", "'use client'\nimport * as ReactDOM from 'react-dom'\n\nexport const unstable_batchedUpdates = ReactDOM.unstable_batchedUpdates\n", "import { notifyManager } from '@tanstack/query-core'\nimport { unstable_batchedUpdates } from './reactBatchedUpdates'\n\nnotifyManager.setBatchNotifyFunction(unstable_batchedUpdates)\n", "'use client'\n// Temporary workaround due to an issue with react-native uSES - https://github.com/TanStack/query/pull/3601\nimport { useSyncExternalStore as uSES } from 'use-sync-external-store/shim/index.js'\n\nexport const useSyncExternalStore = uSES\n", "'use client'\nimport * as React from 'react'\n\nimport type { QueryClient } from '@tanstack/query-core'\nimport type { ContextOptions } from './types'\n\ndeclare global {\n  interface Window {\n    ReactQueryClientContext?: React.Context<QueryClient | undefined>\n  }\n}\n\nexport const defaultContext = React.createContext<QueryClient | undefined>(\n  undefined,\n)\nconst QueryClientSharingContext = React.createContext<boolean>(false)\n\n// If we are given a context, we will use it.\n// Otherwise, if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\nfunction getQueryClientContext(\n  context: React.Context<QueryClient | undefined> | undefined,\n  contextSharing: boolean,\n) {\n  if (context) {\n    return context\n  }\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext\n    }\n\n    return window.ReactQueryClientContext\n  }\n\n  return defaultContext\n}\n\nexport const useQueryClient = ({ context }: ContextOptions = {}) => {\n  const queryClient = React.useContext(\n    getQueryClientContext(context, React.useContext(QueryClientSharingContext)),\n  )\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one')\n  }\n\n  return queryClient\n}\n\ntype QueryClientProviderPropsBase = {\n  client: QueryClient\n  children?: React.ReactNode\n}\ntype QueryClientProviderPropsWithContext = ContextOptions & {\n  contextSharing?: never\n} & QueryClientProviderPropsBase\ntype QueryClientProviderPropsWithContextSharing = {\n  context?: never\n  contextSharing?: boolean\n} & QueryClientProviderPropsBase\n\nexport type QueryClientProviderProps =\n  | QueryClientProviderPropsWithContext\n  | QueryClientProviderPropsWithContextSharing\n\nexport const QueryClientProvider = ({\n  client,\n  children,\n  context,\n  contextSharing = false,\n}: QueryClientProviderProps): JSX.Element => {\n  React.useEffect(() => {\n    client.mount()\n    return () => {\n      client.unmount()\n    }\n  }, [client])\n\n  if (process.env.NODE_ENV !== 'production' && contextSharing) {\n    client\n      .getLogger()\n      .error(\n        `The contextSharing option has been deprecated and will be removed in the next major version`,\n      )\n  }\n\n  const Context = getQueryClientContext(context, contextSharing)\n\n  return (\n    <QueryClientSharingContext.Provider value={!context && contextSharing}>\n      <Context.Provider value={client}>{children}</Context.Provider>\n    </QueryClientSharingContext.Provider>\n  )\n}\n", "'use client'\nimport * as React from 'react'\n\nconst IsRestoringContext = React.createContext(false)\n\nexport const useIsRestoring = () => React.useContext(IsRestoringContext)\nexport const IsRestoringProvider = IsRestoringContext.Provider\n", "'use client'\nimport * as React from 'react'\n\n// CONTEXT\n\nexport interface QueryErrorResetBoundaryValue {\n  clearReset: () => void\n  isReset: () => boolean\n  reset: () => void\n}\n\nfunction createValue(): QueryErrorResetBoundaryValue {\n  let isReset = false\n  return {\n    clearReset: () => {\n      isReset = false\n    },\n    reset: () => {\n      isReset = true\n    },\n    isReset: () => {\n      return isReset\n    },\n  }\n}\n\nconst QueryErrorResetBoundaryContext = React.createContext(createValue())\n\n// HOOK\n\nexport const useQueryErrorResetBoundary = () =>\n  React.useContext(QueryErrorResetBoundaryContext)\n\n// COMPONENT\n\nexport interface QueryErrorResetBoundaryProps {\n  children:\n    | ((value: QueryErrorResetBoundaryValue) => React.ReactNode)\n    | React.ReactNode\n}\n\nexport const QueryErrorResetBoundary = ({\n  children,\n}: QueryErrorResetBoundaryProps) => {\n  const [value] = React.useState(() => createValue())\n  return (\n    <QueryErrorResetBoundaryContext.Provider value={value}>\n      {typeof children === 'function'\n        ? (children as Function)(value)\n        : children}\n    </QueryErrorResetBoundaryContext.Provider>\n  )\n}\n", "export function shouldThrowError<T extends (...args: any[]) => boolean>(\n  _useErrorBoundary: boolean | T | undefined,\n  params: Parameters<T>,\n): boolean {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params)\n  }\n\n  return !!_useErrorBoundary\n}\n", "'use client'\nimport * as React from 'react'\nimport { shouldThrowError } from './utils'\nimport type {\n  DefaultedQueryObserverOptions,\n  Query,\n  QueryKey,\n  QueryObserverResult,\n  UseErrorBoundary,\n} from '@tanstack/query-core'\nimport type { QueryErrorResetBoundaryValue } from './QueryErrorResetBoundary'\n\nexport const ensurePreventErrorBoundaryRetry = <\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) => {\n  if (options.suspense || options.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false\n    }\n  }\n}\n\nexport const useClearResetErrorBoundary = (\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset()\n  }, [errorResetBoundary])\n}\n\nexport const getHasError = <\n  TData,\n  TError,\n  TQueryFnData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>({\n  result,\n  errorResetBoundary,\n  useErrorBoundary,\n  query,\n}: {\n  result: QueryObserverResult<TData, TError>\n  errorResetBoundary: QueryErrorResetBoundaryValue\n  useErrorBoundary: UseErrorBoundary<\n    TQueryFnData,\n    TError,\n    TQueryData,\n    TQueryKey\n  >\n  query: Query<TQueryFnData, TError, TQueryData, TQueryKey>\n}) => {\n  return (\n    result.isError &&\n    !errorResetBoundary.isReset() &&\n    !result.isFetching &&\n    shouldThrowError(useErrorBoundary, [result.error, query])\n  )\n}\n", "import type { DefaultedQueryObserverOptions } from '@tanstack/query-core'\nimport type { QueryObserver } from '@tanstack/query-core'\nimport type { QueryErrorResetBoundaryValue } from './QueryErrorResetBoundary'\nimport type { QueryObserverResult } from '@tanstack/query-core'\nimport type { QueryKey } from '@tanstack/query-core'\n\nexport const ensureStaleTime = (\n  defaultedOptions: DefaultedQueryObserverOptions<any, any, any, any, any>,\n) => {\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000\n    }\n  }\n}\n\nexport const willFetch = (\n  result: QueryObserverResult<any, any>,\n  isRestoring: boolean,\n) => result.isLoading && result.isFetching && !isRestoring\n\nexport const shouldSuspend = (\n  defaultedOptions:\n    | DefaultedQueryObserverOptions<any, any, any, any, any>\n    | undefined,\n  result: QueryObserverResult<any, any>,\n  isRestoring: boolean,\n) => defaultedOptions?.suspense && willFetch(result, isRestoring)\n\nexport const fetchOptimistic = <\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  defaultedOptions: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) =>\n  observer\n    .fetchOptimistic(defaultedOptions)\n    .then(({ data }) => {\n      defaultedOptions.onSuccess?.(data as TData)\n      defaultedOptions.onSettled?.(data, null)\n    })\n    .catch((error) => {\n      errorResetBoundary.clearReset()\n      defaultedOptions.onError?.(error)\n      defaultedOptions.onSettled?.(undefined, error)\n    })\n", "'use client'\nimport * as React from 'react'\n\nimport { notifyManager } from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary'\nimport { useQueryClient } from './QueryClientProvider'\nimport { useIsRestoring } from './isRestoring'\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary,\n} from './errorBoundaryUtils'\nimport { ensureStaleTime, fetchOptimistic, shouldSuspend } from './suspense'\nimport type { QueryKey, QueryObserver } from '@tanstack/query-core'\nimport type { UseBaseQueryOptions } from './types'\n\nexport function useBaseQuery<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: UseBaseQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  Observer: typeof QueryObserver,\n) {\n  const queryClient = useQueryClient({ context: options.context })\n  const isRestoring = useIsRestoring()\n  const errorResetBoundary = useQueryErrorResetBoundary()\n  const defaultedOptions = queryClient.defaultQueryOptions(options)\n\n  // Make sure results are optimistically set in fetching state before subscribing or updating options\n  defaultedOptions._optimisticResults = isRestoring\n    ? 'isRestoring'\n    : 'optimistic'\n\n  // Include callbacks in batch renders\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(\n      defaultedOptions.onError,\n    )\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(\n      defaultedOptions.onSuccess,\n    )\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(\n      defaultedOptions.onSettled,\n    )\n  }\n\n  ensureStaleTime(defaultedOptions)\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary)\n\n  useClearResetErrorBoundary(errorResetBoundary)\n\n  const [observer] = React.useState(\n    () =>\n      new Observer<TQueryFnData, TError, TData, TQueryData, TQueryKey>(\n        queryClient,\n        defaultedOptions,\n      ),\n  )\n\n  const result = observer.getOptimisticResult(defaultedOptions)\n\n  useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = isRestoring\n          ? () => undefined\n          : observer.subscribe(notifyManager.batchCalls(onStoreChange))\n\n        // Update result to make sure we did not miss any query updates\n        // between creating the observer and subscribing to it.\n        observer.updateResult()\n\n        return unsubscribe\n      },\n      [observer, isRestoring],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, { listeners: false })\n  }, [defaultedOptions, observer])\n\n  // Handle suspense\n  if (shouldSuspend(defaultedOptions, result, isRestoring)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n  }\n\n  // Handle error boundary\n  if (\n    getHasError({\n      result,\n      errorResetBoundary,\n      useErrorBoundary: defaultedOptions.useErrorBoundary,\n      query: observer.getCurrentQuery(),\n    })\n  ) {\n    throw result.error\n  }\n\n  // Handle result property usage tracking\n  return !defaultedOptions.notifyOnChangeProps\n    ? observer.trackResult(result)\n    : result\n}\n", "'use client'\nimport { QueryObserver, parseQueryArgs } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type { QueryFunction, QueryKey } from '@tanstack/query-core'\nimport type {\n  DefinedUseQueryResult,\n  UseQueryOptions,\n  UseQueryResult,\n} from './types'\n\n// HOOK\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey'\n  >,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn' | 'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn' | 'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn'\n  >,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData,\n  TError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  arg1: TQueryKey | UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  arg2?:\n    | QueryFunction<TQueryFnData, TQueryKey>\n    | UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  arg3?: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): UseQueryResult<TData, TError> {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n  return useBaseQuery(parsedOptions, QueryObserver)\n}\n", "'use client'\nimport * as React from 'react'\nimport {\n  MutationObserver,\n  notifyManager,\n  parseMutationArgs,\n} from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport { useQueryClient } from './QueryClientProvider'\nimport { shouldThrowError } from './utils'\nimport type { MutationFunction, MutationKey } from '@tanstack/query-core'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationFn: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  mutationFn?: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey' | 'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  arg1:\n    | MutationKey\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg2?:\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg3?: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const options = parseMutationArgs(arg1, arg2, arg3)\n  const queryClient = useQueryClient({ context: options.context })\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        queryClient,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.useErrorBoundary, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n", "'use client'\nimport { InfiniteQueryObserver, parseQueryArgs } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type {\n  QueryFunction,\n  QueryKey,\n  QueryObserver,\n} from '@tanstack/query-core'\nimport type { UseInfiniteQueryOptions, UseInfiniteQueryResult } from './types'\n\n// HOOK\n\nexport function useInfiniteQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseInfiniteQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryFnData,\n    TQueryKey\n  >,\n): UseInfiniteQueryResult<TData, TError>\nexport function useInfiniteQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryFnData,\n      TQueryKey\n    >,\n    'queryKey'\n  >,\n): UseInfiniteQueryResult<TData, TError>\nexport function useInfiniteQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryFnData,\n      TQueryKey\n    >,\n    'queryKey' | 'queryFn'\n  >,\n): UseInfiniteQueryResult<TData, TError>\nexport function useInfiniteQuery<\n  TQueryFnData,\n  TError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  arg1:\n    | TQueryKey\n    | UseInfiniteQueryOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryFnData,\n        TQueryKey\n      >,\n  arg2?:\n    | QueryFunction<TQueryFnData, TQueryKey>\n    | UseInfiniteQueryOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryFnData,\n        TQueryKey\n      >,\n  arg3?: UseInfiniteQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryFnData,\n    TQueryKey\n  >,\n): UseInfiniteQueryResult<TData, TError> {\n  const options = parseQueryArgs(arg1, arg2, arg3)\n  return useBaseQuery(\n    options,\n    InfiniteQueryObserver as typeof QueryObserver,\n  ) as UseInfiniteQueryResult<TData, TError>\n}\n"],
  "mappings": "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",
  "names": ["p", "i", "k", "i", "is", "y", "React", "useState", "useEffect", "useSyncExternalStore$1", "i", "isError", "ys", "isPlainObject", "f", "m", "l", "c", "k", "isNaN", "_", "concatty", "i", "slicy", "Empty", "undefined", "doEval", "fn", "stringToPath", "getBaseIntrinsic", "i", "i", "compactQueue", "arrayToObject", "merge", "encode", "c", "compact", "isRegExp", "isBuffer", "combine", "maybeMap", "fn", "isNonNullishPrimitive", "stringify", "value", "normalizeStringifyOptions", "i", "i", "normalizeParseOptions", "d", "o", "e", "i", "r", "f", "y", "l", "n", "c", "p", "m", "s", "a", "h", "u", "g", "k", "_", "t", "E", "C", "I", "A", "T", "z", "R", "v", "b", "import_react", "unrelatedFunctionName", "cleanStack", "stack", "firstUnrelatedIndex", "frame", "REFINE_PACKAGE_FILEPATH_REGEXP", "isRefineStack", "filename", "getPackageNameFromFilename", "_a", "match", "name", "getTrace", "excludeFromTrace", "error", "ErrorStackParser", "trace", "getResourcePath", "hookName", "legacyKey", "scopes", "getXRay", "resourceName", "resourcePath", "createIdentifier", "key", "simpleTrace", "t", "createMutationListener", "ws", "mutation", "meta", "resolve", "_b", "send", "DevtoolsEvent", "createQueryListener", "query", "useQuerySubscription", "noop", "queryClient", "ws", "useContext", "DevToolsContext", "queryCacheSubscription", "React", "mutationCacheSubscription", "queryCache", "queryListener", "createQueryListener", "query", "type", "_a", "mutationCache", "mutationListener", "createMutationListener", "mutation", "receive", "DevtoolsEvent", "queryKey", "Subscribable", "constructor", "listeners", "Set", "subscribe", "bind", "listener", "identity", "add", "onSubscribe", "delete", "onUnsubscribe", "hasListeners", "size", "isServer", "window", "noop", "undefined", "functionalUpdate", "updater", "input", "isValidTimeout", "value", "Infinity", "timeUntilStale", "updatedAt", "staleTime", "Math", "max", "Date", "now", "parseQueryArgs", "arg1", "arg2", "arg3", "isQueryKey", "queryKey", "queryFn", "parseMutationArgs", "mutationKey", "mutationFn", "parseFilterArgs", "matchQuery", "filters", "query", "type", "exact", "fetchStatus", "predicate", "queryKey", "stale", "isQueryKey", "queryHash", "hashQueryKeyByOptions", "options", "partialMatchKey", "isActive", "isStale", "state", "matchMutation", "mutation", "fetching", "mutationKey", "hashQueryKey", "status", "hashFn", "queryKeyHashFn", "JSON", "stringify", "_", "val", "isPlainObject", "Object", "keys", "sort", "reduce", "result", "key", "a", "b", "partialDeepEqual", "some", "replaceEqualDeep", "array", "isPlainArray", "aSize", "length", "bItems", "bSize", "copy", "equalItems", "i", "shallowEqualObjects", "value", "Array", "isArray", "o", "hasObjectPrototype", "ctor", "constructor", "prot", "prototype", "hasOwnProperty", "toString", "call", "sleep", "timeout", "Promise", "resolve", "setTimeout", "scheduleMicrotask", "callback", "then", "getAbortController", "AbortController", "replaceData", "prevData", "data", "options", "isDataEqual", "structuralSharing", "replaceEqualDeep", "FocusManager", "Subscribable", "constructor", "setup", "onFocus", "isServer", "window", "addEventListener", "listener", "removeEventListener", "onSubscribe", "cleanup", "setEventListener", "onUnsubscribe", "hasListeners", "undefined", "focused", "setFocused", "changed", "listeners", "forEach", "isFocused", "document", "includes", "visibilityState", "focusManager", "onlineEvents", "OnlineManager", "Subscribable", "constructor", "setup", "onOnline", "isServer", "window", "addEventListener", "listener", "forEach", "event", "removeEventListener", "onSubscribe", "cleanup", "setEventListener", "onUnsubscribe", "hasListeners", "undefined", "online", "setOnline", "changed", "listeners", "isOnline", "navigator", "onLine", "onlineManager", "defaultRetryDelay", "failureCount", "Math", "min", "canFetch", "networkMode", "onlineManager", "isOnline", "CancelledError", "constructor", "options", "revert", "silent", "isCancelledError", "value", "createRetryer", "config", "isRetryCancelled", "isResolved", "continueFn", "promiseResolve", "promiseReject", "promise", "Promise", "outerResolve", "outerReject", "cancel", "cancelOptions", "reject", "abort", "cancelRetry", "continueRetry", "shouldPause", "focusManager", "isFocused", "resolve", "onSuccess", "onError", "pause", "continueResolve", "canContinue", "onPause", "then", "undefined", "onContinue", "run", "promiseOrValue", "fn", "error", "catch", "retry", "retryDelay", "delay", "shouldRetry", "onFail", "sleep", "continue", "didContinue", "defaultLogger", "console", "createNotifyManager", "queue", "transactions", "notifyFn", "callback", "batchNotifyFn", "batch", "result", "flush", "schedule", "push", "scheduleMicrotask", "batchCalls", "args", "originalQueue", "length", "forEach", "setNotifyFunction", "fn", "setBatchNotifyFunction", "notifyManager", "Removable", "destroy", "clearGcTimeout", "scheduleGc", "isValidTimeout", "cacheTime", "gcTimeout", "setTimeout", "optionalRemove", "updateCacheTime", "newCacheTime", "Math", "max", "isServer", "Infinity", "clearTimeout", "undefined", "Query", "Removable", "constructor", "config", "abortSignalConsumed", "defaultOptions", "setOptions", "options", "observers", "cache", "logger", "defaultLogger", "queryKey", "queryHash", "initialState", "state", "getDefaultState", "scheduleGc", "meta", "updateCacheTime", "cacheTime", "optionalRemove", "length", "fetchStatus", "remove", "setData", "newData", "data", "replaceData", "dispatch", "type", "dataUpdatedAt", "updatedAt", "manual", "setState", "setStateOptions", "cancel", "promise", "retryer", "then", "noop", "catch", "Promise", "resolve", "destroy", "silent", "reset", "isActive", "some", "observer", "enabled", "isDisabled", "getObserversCount", "isStale", "isInvalidated", "getCurrentResult", "isStaleByTime", "staleTime", "timeUntilStale", "onFocus", "find", "x", "shouldFetchOnWindowFocus", "refetch", "cancelRefetch", "continue", "onOnline", "shouldFetchOnReconnect", "addObserver", "includes", "push", "clearGcTimeout", "notify", "query", "removeObserver", "filter", "revert", "cancelRetry", "invalidate", "fetch", "fetchOptions", "continueRetry", "queryFn", "process", "Array", "isArray", "error", "abortController", "getAbortController", "queryFnContext", "pageParam", "undefined", "addSignalProperty", "object", "Object", "defineProperty", "enumerable", "get", "signal", "fetchFn", "reject", "context", "behavior", "onFetch", "revertState", "fetchMeta", "onError", "isCancelledError", "onSettled", "isFetchingOptimistic", "createRetryer", "fn", "abort", "bind", "onSuccess", "Error", "onFail", "failureCount", "onPause", "onContinue", "retry", "retryDelay", "networkMode", "action", "reducer", "fetchFailureCount", "fetchFailureReason", "canFetch", "status", "dataUpdateCount", "Date", "now", "errorUpdateCount", "errorUpdatedAt", "notifyManager", "batch", "forEach", "onQueryUpdate", "initialData", "hasData", "initialDataUpdatedAt", "QueryCache", "Subscribable", "constructor", "config", "queries", "queriesMap", "build", "client", "options", "state", "queryKey", "queryHash", "hashQueryKeyByOptions", "query", "get", "Query", "cache", "logger", "getLogger", "defaultQueryOptions", "defaultOptions", "getQueryDefaults", "add", "push", "notify", "type", "remove", "queryInMap", "destroy", "filter", "x", "clear", "notifyManager", "batch", "forEach", "getAll", "find", "arg1", "arg2", "filters", "parseFilterArgs", "exact", "matchQuery", "findAll", "Object", "keys", "length", "event", "listeners", "listener", "onFocus", "onOnline", "Mutation", "Removable", "constructor", "config", "defaultOptions", "mutationId", "mutationCache", "logger", "defaultLogger", "observers", "state", "getDefaultState", "setOptions", "options", "scheduleGc", "updateCacheTime", "cacheTime", "meta", "setState", "dispatch", "type", "addObserver", "observer", "includes", "push", "clearGcTimeout", "notify", "mutation", "removeObserver", "filter", "x", "optionalRemove", "length", "status", "remove", "continue", "retryer", "execute", "executeMutation", "createRetryer", "fn", "mutationFn", "Promise", "reject", "variables", "onFail", "failureCount", "error", "onPause", "onContinue", "retry", "retryDelay", "networkMode", "promise", "restored", "onMutate", "context", "data", "onSuccess", "onSettled", "onError", "process", "undefined", "action", "reducer", "failureReason", "isPaused", "canFetch", "notifyManager", "batch", "forEach", "onMutationUpdate", "MutationCache", "Subscribable", "constructor", "config", "mutations", "mutationId", "build", "client", "options", "state", "mutation", "Mutation", "mutationCache", "logger", "getLogger", "defaultMutationOptions", "defaultOptions", "mutationKey", "getMutationDefaults", "undefined", "add", "push", "notify", "type", "remove", "filter", "x", "clear", "notifyManager", "batch", "forEach", "getAll", "find", "filters", "exact", "matchMutation", "findAll", "event", "listeners", "listener", "resumePausedMutations", "resuming", "Promise", "resolve", "then", "pausedMutations", "isPaused", "reduce", "promise", "continue", "catch", "noop", "infiniteQueryBehavior", "onFetch", "context", "fetchFn", "refetchPage", "fetchOptions", "meta", "fetchMore", "pageParam", "isFetchingNextPage", "direction", "isFetchingPreviousPage", "oldPages", "state", "data", "pages", "oldPageParams", "pageParams", "newPageParams", "cancelled", "addSignalProperty", "object", "Object", "defineProperty", "enumerable", "get", "signal", "aborted", "addEventListener", "queryFn", "options", "Promise", "reject", "queryHash", "buildNewPages", "param", "page", "previous", "fetchPage", "manual", "length", "resolve", "queryFnContext", "queryKey", "queryFnResult", "promise", "then", "getNextPageParam", "getPreviousPageParam", "shouldFetchFirstPage", "i", "shouldFetchNextPage", "finalPromise", "hasNextPage", "Array", "isArray", "nextPageParam", "hasPreviousPage", "previousPageParam", "QueryClient", "constructor", "config", "queryCache", "QueryCache", "mutationCache", "MutationCache", "logger", "defaultLogger", "defaultOptions", "queryDefaults", "mutationDefaults", "mountCount", "error", "mount", "unsubscribeFocus", "focusManager", "subscribe", "isFocused", "resumePausedMutations", "onFocus", "unsubscribeOnline", "onlineManager", "isOnline", "onOnline", "unmount", "undefined", "isFetching", "arg1", "arg2", "filters", "parseFilterArgs", "fetchStatus", "findAll", "length", "isMutating", "fetching", "getQueryData", "queryKey", "find", "state", "data", "ensureQueryData", "arg3", "parsedOptions", "parseQueryArgs", "cachedData", "Promise", "resolve", "fetchQuery", "getQueriesData", "queryKeyOrFilters", "getQueryCache", "map", "setQueryData", "updater", "options", "query", "prevData", "functionalUpdate", "defaultedOptions", "defaultQueryOptions", "build", "setData", "manual", "setQueriesData", "notifyManager", "batch", "getQueryState", "removeQueries", "forEach", "remove", "resetQueries", "refetchFilters", "type", "reset", "refetchQueries", "cancelQueries", "cancelOptions", "revert", "promises", "cancel", "all", "then", "noop", "catch", "invalidateQueries", "invalidate", "refetchType", "filter", "isDisabled", "fetch", "cancelRefetch", "meta", "refetchPage", "promise", "throwOnError", "retry", "isStaleByTime", "staleTime", "prefetchQuery", "fetchInfiniteQuery", "behavior", "infiniteQueryBehavior", "prefetchInfiniteQuery", "getMutationCache", "getLogger", "getDefaultOptions", "setDefaultOptions", "setQueryDefaults", "result", "x", "hashQueryKey", "push", "getQueryDefaults", "firstMatchingDefaults", "partialMatchKey", "process", "matchingDefaults", "JSON", "stringify", "setMutationDefaults", "mutationKey", "getMutationDefaults", "_defaulted", "queries", "queryHash", "hashQueryKeyByOptions", "refetchOnReconnect", "networkMode", "useErrorBoundary", "suspense", "defaultMutationOptions", "mutations", "clear", "QueryObserver", "Subscribable", "constructor", "client", "options", "trackedProps", "Set", "selectError", "bindMethods", "setOptions", "remove", "bind", "refetch", "onSubscribe", "listeners", "size", "currentQuery", "addObserver", "shouldFetchOnMount", "executeFetch", "updateTimers", "onUnsubscribe", "hasListeners", "destroy", "shouldFetchOnReconnect", "shouldFetchOn", "refetchOnReconnect", "shouldFetchOnWindowFocus", "refetchOnWindowFocus", "clearStaleTimeout", "clearRefetchInterval", "removeObserver", "notifyOptions", "prevOptions", "prevQuery", "defaultQueryOptions", "isDataEqual", "getLogger", "error", "shallowEqualObjects", "getQueryCache", "notify", "type", "query", "observer", "enabled", "Error", "queryKey", "updateQuery", "mounted", "shouldFetchOptionally", "updateResult", "staleTime", "updateStaleTimeout", "nextRefetchInterval", "computeRefetchInterval", "currentRefetchInterval", "updateRefetchInterval", "getOptimisticResult", "build", "result", "createResult", "shouldAssignObserverCurrentProperties", "currentResult", "currentResultOptions", "currentResultState", "state", "getCurrentResult", "trackResult", "trackedResult", "Object", "keys", "forEach", "key", "defineProperty", "configurable", "enumerable", "get", "add", "getCurrentQuery", "refetchPage", "fetch", "meta", "fetchOptimistic", "defaultedOptions", "isFetchingOptimistic", "then", "fetchOptions", "cancelRefetch", "promise", "throwOnError", "catch", "noop", "isServer", "isStale", "isValidTimeout", "time", "timeUntilStale", "dataUpdatedAt", "timeout", "staleTimeoutId", "setTimeout", "refetchInterval", "data", "nextInterval", "refetchIntervalId", "setInterval", "refetchIntervalInBackground", "focusManager", "isFocused", "clearTimeout", "undefined", "clearInterval", "prevResult", "prevResultState", "prevResultOptions", "queryChange", "queryInitialState", "currentQueryInitialState", "prevQueryResult", "previousQueryResult", "errorUpdatedAt", "fetchStatus", "status", "isPreviousData", "isPlaceholderData", "_optimisticResults", "fetchOnMount", "fetchOptionally", "canFetch", "networkMode", "keepPreviousData", "isSuccess", "select", "selectFn", "selectResult", "replaceData", "process", "placeholderData", "Date", "now", "isFetching", "isLoading", "isError", "isInitialLoading", "failureCount", "fetchFailureCount", "failureReason", "fetchFailureReason", "errorUpdateCount", "isFetched", "dataUpdateCount", "isFetchedAfterMount", "isRefetching", "isLoadingError", "isPaused", "isRefetchError", "nextResult", "defaultNotifyOptions", "cache", "shouldNotifyListeners", "notifyOnChangeProps", "notifyOnChangePropsValue", "includedProps", "useErrorBoundary", "some", "typedKey", "changed", "has", "onQueryUpdate", "action", "onSuccess", "manual", "isCancelledError", "onError", "notifyManager", "batch", "onSettled", "listener", "shouldLoadOnMount", "retryOnMount", "refetchOnMount", "field", "value", "suspense", "isStaleByTime", "optimisticResult", "InfiniteQueryObserver", "QueryObserver", "constructor", "client", "options", "bindMethods", "fetchNextPage", "bind", "fetchPreviousPage", "setOptions", "notifyOptions", "behavior", "infiniteQueryBehavior", "getOptimisticResult", "pageParam", "fetch", "meta", "fetchMore", "direction", "createResult", "query", "state", "result", "isFetching", "isRefetching", "isFetchingNextPage", "fetchMeta", "isFetchingPreviousPage", "hasNextPage", "data", "pages", "hasPreviousPage", "MutationObserver", "Subscribable", "constructor", "client", "options", "setOptions", "bindMethods", "updateResult", "mutate", "bind", "reset", "prevOptions", "defaultMutationOptions", "shallowEqualObjects", "getMutationCache", "notify", "type", "mutation", "currentMutation", "observer", "onUnsubscribe", "hasListeners", "removeObserver", "onMutationUpdate", "action", "notifyOptions", "listeners", "onSuccess", "onError", "getCurrentResult", "currentResult", "undefined", "variables", "mutateOptions", "build", "addObserver", "execute", "state", "getDefaultState", "result", "isLoading", "status", "isSuccess", "isError", "isIdle", "notifyManager", "batch", "data", "context", "onSettled", "error", "forEach", "listener", "unstable_batchedUpdates", "notifyManager", "setBatchNotifyFunction", "unstable_batchedUpdates", "useSyncExternalStore$1", "context", "contextSharing", "client", "IsRestoringProvider", "clearReset", "isReset", "reset", "shouldThrowError", "_useErrorBoundary", "params", "useClearResetErrorBoundary", "errorResetBoundary", "query", "ensureStaleTime", "defaultedOptions", "suspense", "staleTime", "willFetch", "result", "isRestoring", "isLoading", "isFetching", "shouldSuspend", "fetchOptimistic", "observer", "errorResetBoundary", "then", "data", "onSuccess", "onSettled", "catch", "error", "clearReset", "onError", "undefined", "ensurePreventErrorBoundaryRetry", "useSyncExternalStore", "observer", "listeners", "noop", "import_react", "import_react", "import_pluralize", "import_react", "import_qs", "import_react", "import_qs", "import_react", "import_warn_once", "import_react", "import_react", "import_react", "import_react", "import_react", "import_warn_once", "import_papaparse", "import_react", "import_warn_once", "import_react", "import_react", "import_qs", "import_warn_once", "import_react", "import_react", "import_react", "import_warn_once", "import_react", "import_react", "LegacyAuthContext", "React", "LegacyAuthContextProvider", "__name", "children", "isProvided", "authOperations", "replace", "useNavigation", "loginFunc", "params", "_a", "error", "registerFunc", "logoutFunc", "checkAuthFunc", "AuthBindingsContext", "AuthBindingsContextProvider", "authBindings", "handleLogin", "handleRegister", "handleLogout", "handleCheck", "result", "handleForgotPassword", "handleUpdatePassword", "useLegacyAuthContext", "useAuthBindingsContext", "userFriendlySecond", "miliseconds", "importCSVMapper", "data", "mapData", "item", "headers", "body", "entry", "fromPairs", "zip", "index", "array", "userFriendlyResourceName", "resource", "type", "humanizeResource", "humanizeString", "pluralize", "handleUseParams", "arrayFindIndex", "slice", "sliceItem", "sliceIndex", "convertToLegacy", "segments", "newSegments", "newParams", "BaseKeyBuilder", "legacy", "ParamsKeyBuilder", "paramsValue", "DataIdRequiringKeyBuilder", "idValue", "DataIdsRequiringKeyBuilder", "idsValue", "el", "DataResourceKeyBuilder", "actionType", "DataKeyBuilder", "resourceName", "mutationName", "AuthKeyBuilder", "AccessResourceKeyBuilder", "AccessKeyBuilder", "AuditActionKeyBuilder", "AuditKeyBuilder", "KeyBuilder", "name", "keys", "pickNotDeprecated", "args", "arg", "queryKeys", "dataProviderName", "meta", "metaData", "providerName", "config", "ids", "id", "queryKeysReplacement", "preferLegacyKeys", "hasPermission", "permissions", "action", "i", "isParameter", "segment", "splitToSegments", "path", "isSegmentCountsSame", "route", "resourceRoute", "routeSegments", "resourceRouteSegments", "removeLeadingTrailingSlashes", "checkBySegments", "stdRoute", "stdResourceRoute", "getDefaultActionPath", "parentPrefix", "cleanParentPrefix", "getParentResource", "resources", "_b", "parentName", "getParentPrefixForResource", "parents", "parent", "v", "getActionRoutesFromResource", "actions", "actionList", "pickMatchedRoute", "routes", "sanitizedRoutes", "segmentsCount", "eligibleRoutes", "nonParametrizedRoutes", "matchResourceFromRoute", "allFound", "actionRoute", "mostEligible", "routeGenerator", "resourcesFromProps", "createTreeView", "tree", "resourcesRouteObject", "resourcesNameObject", "child", "text", "DefaultLayout", "defaultTitle", "defaultRefineOptions", "RefineContext", "RefineContextProvider", "hasDashboard", "mutationMode", "warnWhenUnsavedChanges", "syncWithLocation", "undoableTimeout", "DashboardPage", "Title", "Layout", "Header", "Sider", "Footer", "OffLayoutArea", "LoginPage", "catchAll", "liveMode", "onLiveEvent", "options", "handleRefineOptions", "disableTelemetry", "reactQueryClientConfig", "reactQueryDevtoolConfig", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "_k", "_l", "optionsWithDefaults", "disableTelemetryWithDefault", "reactQueryWithDefaults", "redirectPage", "redirectFromProps", "redirectOptions", "sequentialPromises", "promises", "onEachResolve", "onEachReject", "results", "promise", "pickResource", "identifier", "resourceByRoute", "r", "pickDataProvider", "handleMultiple", "res", "getNextPageParam", "lastPage", "pagination", "cursor", "current", "pageSize", "totalPages", "getPreviousPageParam", "legacyResourceTransform", "_resources", "pickRouteParams", "s", "prepareRouteParams", "routeParams", "acc", "key", "value", "composeRoute", "designatedRoute", "resourceMeta", "parsed", "preparedRouteParams", "match", "fromParams", "useActiveAuthProvider", "legacyAuthProvider", "authProvider", "handlePaginationParams", "hasPagination", "configPagination", "hasPaginationString", "mode", "useMediaQuery", "query", "matches", "setMatches", "useState", "useEffect", "media", "listener", "safeTranslate", "translate", "defaultMessage", "translated", "fallback", "generateDefaultDocumentTitle", "actionPrefixMatcher", "resourceNameFallback", "resourceNameWithFallback", "suffix", "autoGeneratedTitle", "useMutationMode", "preferredMutationMode", "preferredUndoableTimeout", "useContext", "UnsavedWarnContext", "UnsavedWarnContextProvider", "warnWhen", "setWarnWhen", "useWarnAboutChange", "useSyncWithLocation", "useTitle", "useRefineContext", "__initialized", "useUserFriendlyName", "textTransformers", "humanizeName", "isNested", "obj", "isArray", "flattenObjectKeys", "prefix", "currentPrefix", "propertyPathToArray", "propertyPath", "downloadInBrowser", "filename", "content", "blob", "link", "blobUrl", "deferExecution", "fn", "asyncDebounce", "func", "wait", "cancelReason", "callbacks", "cancelPrevious", "cb", "debouncedFunc", "debounce", "resolve", "reject", "runner", "prepareQueryContext", "context", "queryContext", "parseTableParams", "url", "sorter", "sorters", "filters", "qs", "parseTableParamsFromQuery", "stringifyTableParams", "rest", "compareFilters", "left", "right", "compareSorters", "unionFilters", "permanentFilter", "newFilters", "prevFilters", "f", "warnOnce", "unionWith", "crudFilter", "unionSorters", "permanentSorter", "newSorters", "crudSorter", "setInitialFilters", "defaultFilter", "differenceWith", "setInitialSorters", "defaultSorter", "getDefaultSortOrder", "columnName", "sortItem", "getDefaultFilter", "operatorType", "filter", "operator", "field", "file2Base64", "file", "reader", "resultHandler", "useKeys", "useNewQueryKeys", "usePermissions", "v3LegacyAuthProviderCompatible", "legacyGetPermission", "getPermissions", "queryResponse", "useQuery", "getXRay", "legacyQueryResponse", "useGetIdentity", "queryOptions", "legacyGetUserIdentity", "getIdentity", "useInvalidateAuthStore", "queryClient", "useQueryClient", "useLogout", "mutationOptions", "invalidateAuthStore", "routerType", "useRouterType", "go", "useGo", "push", "open", "close", "useNotification", "legacyLogoutFromContext", "logoutFromContext", "mutation", "useMutation", "variables", "success", "redirectTo", "successNotification", "redirectPath", "redirect", "buildSuccessNotification", "buildNotification", "v3LegacyAuthProviderCompatibleMutation", "useLogin", "useParsed", "useLocation", "useRouterContext", "search", "legacyLoginFromContext", "loginFromContext", "to", "redirectPathFromAuth", "useRegister", "legacyRegisterFromContext", "registerFromContext", "useForgotPassword", "v3LegacyAuthProviderCompatibleForgotPasswordFromContext", "forgotPasswordFromContext", "useUpdatePassword", "legacyUpdatePasswordFromContext", "updatePasswordFromContext", "useIsAuthenticated", "checkAuth", "check", "useAuthenticated", "useOnError", "legacyCheckErrorFromContext", "onErrorFromContext", "legacyLogout", "logout", "shouldLogout", "useCheckError", "useIsExistAuthentication", "legacyIsProvided", "useLoadingOvertime", "enabledProp", "isLoading", "intervalProp", "onIntervalProp", "elapsedTime", "setElapsedTime", "overtime", "interval", "onInterval", "enabled", "intervalFn", "prevElapsedTime", "useList", "resourceFromProp", "errorNotification", "liveParams", "overtimeOptions", "useResource", "dataProvider", "useDataProvider", "useTranslate", "checkError", "handleNotification", "useHandleNotification", "getMeta", "useMeta", "pickedDataProvider", "preferredMeta", "prefferedFilters", "prefferedSorters", "prefferedHasPagination", "prefferedPagination", "isServerPagination", "combinedMeta", "notificationValues", "isEnabled", "getList", "useResourceSubscription", "rawData", "notificationConfig", "err", "useOne", "getOne", "useMany", "getMany", "hasIds", "hasResource", "manuallyEnabled", "idsWarningMessage", "resourceWarningMessage", "ActionTypes", "useUpdate", "idFromProps", "resourceFromProps", "valuesFromProps", "dataProviderNameFromProps", "successNotificationFromProps", "errorNotificationFromProps", "metaFromProps", "metaDataFromProps", "mutationModeFromProps", "undoableTimeoutFromProps", "onCancelFromProps", "optimisticUpdateMapFromProps", "invalidatesFromProps", "select", "mutationModeContext", "undoableTimeoutContext", "publish", "usePublish", "log", "useLog", "notificationDispatch", "useCancelNotification", "invalidateStore", "useInvalidate", "mutationResult", "values", "onCancel", "missingIdError", "missingValuesError", "missingResourceError", "mutationModePropOrContext", "undoableTimeoutPropOrContext", "doMutation", "cancelMutation", "optimisticUpdateMap", "_", "__", "queryKey", "resourceKeys", "previousQueries", "previous", "record", "invalidates", "dataProviderNameFromProp", "resourceSingular", "previousData", "queryData", "_fields", "_operation", "_variables", "mutate", "mutateAsync", "useCreate", "successNotificationFromProp", "errorNotificationFromProp", "useDelete", "_data", "_error", "useCreateMany", "selectedDataProvider", "val", "response", "resourcePlural", "useUpdateMany", "idsFromProps", "mutationFn", "useDeleteMany", "useApiUrl", "getApiUrl", "useCustom", "method", "custom", "useCustomMutation", "defaultDataProvider", "DataContext", "DataContextProvider", "providerValue", "useCallback", "useInfiniteList", "useInfiniteQuery", "paginationProperties", "total", "LiveContext", "LiveContextProvider", "liveProvider", "invalidationFilters", "invalidationOptions", "dp", "useMemoized", "ref", "useRef", "isEqual", "useDeepMemo", "dependencies", "memoizedDependencies", "useMemo", "ResourceContext", "ResourceContextProvider", "providedResources", "RouterPickerContext", "RouterPickerProvider", "defaultRouterProvider", "RouterContext", "createContext", "RouterContextProvider", "router", "useParse", "routerContext", "parse", "oldProps", "force", "pickedResource", "resourceWithRoute", "useResourceWithRoute", "useParams", "legacyParams", "resourceKeyToCheck", "legacyResource", "legacyId", "legacyAction", "legacyResourceName", "legacyIdentifier", "pickedFromProps", "picked", "channel", "types", "liveModeFromProp", "liveModeFromContext", "onLiveEventContextCallback", "invalidate", "subscription", "callback", "event", "useLiveMode", "useSubscription", "UndoableQueueContext", "initialState", "undoableQueueReducer", "state", "notificationItem", "UndoableQueueContextProvider", "notifications", "useReducer", "notificationData", "notification", "UndoableQueue", "NotificationContext", "NotificationContextProvider", "fallbackNotification", "I18nContext", "I18nContextProvider", "i18nProvider", "useSetLocale", "lang", "useGetLocale", "useTranslation", "changeLocale", "getLocale", "useExport", "maxItemCount", "exportOptions", "unparseConfig", "onError", "download", "setIsLoading", "preparingData", "hasUnparseConfig", "csv", "papaparse", "fileExtension", "fileType", "downloadFilename", "useForm", "props", "defaultRedirect", "useRefineOptions", "defaultMutationMode", "handleSubmitWithRedirect", "useRedirectionAfterSubmission", "pickedMeta", "setId", "useResourceParams", "autosaved", "setAutosaved", "isEdit", "isClone", "isCreate", "isIdRequired", "isIdDefined", "isQueryDisabled", "idWarningMessage", "redirectAction", "redirectId", "queryResult", "createMutation", "updateMutation", "formLoading", "onFinish", "isAutosave", "isPessimistic", "onSuccessRedirect", "autosaveOnNonEditError", "onFinishAutoSave", "autoSaveProps", "show", "edit", "list", "create", "useBack", "useGetToPath", "resourceFromRoute", "selectedResource", "resourceSelect", "getToPath", "goFromRouter", "handleResourceErrors", "newTo", "useHistory", "history", "back", "handleUrl", "createUrl", "resourceItem", "createActionRoute", "editUrl", "encodedId", "editActionRoute", "cloneUrl", "cloneActionRoute", "showUrl", "showActionRoute", "listUrl", "listActionRoute", "useShow", "useOneProps", "showId", "setShowId", "useImport", "paparseOptions", "batchSize", "onProgress", "processedAmount", "setProcessedAmount", "totalAmount", "setTotalAmount", "createMany", "handleCleanup", "handleFinish", "createdValues", "handleChange", "valueFns", "currentAmount", "chunks", "chunk", "chunkedFns", "chunkedValues", "currentBatchLength", "useModal", "defaultVisible", "visible", "setVisible", "useToPath", "LinkComponent", "LinkFromContext", "goFunction", "resolvedTo", "Link", "forwardRef", "useLink", "defaultProvider", "LegacyRouterContext", "LegacyRouterContextProvider", "Prompt", "routerContextValues", "AccessControlContext", "AccessControlContextProvider", "can", "sanitizeResource", "icon", "clone", "restResource", "_metaIcon", "restMeta", "_optionsIcon", "restOptions", "useCan", "hookQueryOptions", "globalOptions", "globalQueryOptions", "mergedQueryOptions", "_resource", "paramsRest", "sanitizedResource", "useCanWithoutCache", "canFromContext", "useSelect", "setSearch", "setOptions", "selectedOptions", "setSelectedOptions", "sort", "optionLabel", "optionValue", "searchField", "debounceValue", "defaultValueQueryOptionsFromProps", "fetchSize", "defaultValue", "selectedOptionsOrder", "onSearchFromProp", "getOptionLabel", "get", "getOptionValue", "defaultValues", "defaultValueQueryOnSuccess", "defaultValueQueryOptions", "defaultValueQueryResult", "defaultQueryOnSuccess", "combinedOptions", "uniqBy", "onSearchFromPropRef", "onSearch", "defaultPermanentFilter", "defaultPermanentSorter", "useTable", "initialCurrent", "initialPageSize", "initialSorter", "defaultSetFilterBehavior", "initialFilter", "filtersFromProp", "sortersFromProp", "syncWithLocationProp", "syncWithLocationContext", "pathname", "parsedParams", "isServerSideFilteringEnabled", "isServerSideSortingEnabled", "isPaginationEnabled", "prefferedCurrent", "prefferedPageSize", "parsedCurrent", "parsedPageSize", "parsedSorter", "parsedFilters", "preferredInitialFilters", "preferredPermanentFilters", "preferredInitialSorters", "preferredPermanentSorters", "prefferedFilterBehavior", "defaultCurrent", "defaultPageSize", "setSorters", "setFilters", "setCurrent", "setPageSize", "getCurrentQueryParams", "createLinkForSyncWithLocation", "currentQueryParams", "stringifyParams", "queryParams", "setFiltersAsMerge", "setFiltersAsReplace", "setFiltersWithSetter", "setter", "prev", "setFiltersFn", "setterOrFilters", "behavior", "setSortWithUnion", "newSorter", "AuditLogContext", "AuditLogContextProvider", "update", "logMutationOptions", "renameMutationOptions", "auditLogContext", "identityData", "refetch", "logPermissions", "authorData", "rename", "useLogList", "author", "useBreadcrumb", "breadcrumbs", "addBreadcrumb", "parentResource", "grandParentName", "listActionOfResource", "hrefRaw", "href", "actionLabel", "createResourceKey", "currentParentResource", "createTree", "root", "currentParent", "currentTree", "flatten", "items", "itemKey", "getCleanPath", "useMenu", "hideOnMissingParameter", "legacyPath", "getFriendlyName", "cleanRoute", "selectedKey", "defaultOpenKeys", "prepareItem", "composed", "treeItems", "treeMenuItems", "prepare", "preparedNodes", "newItem", "MetaContext", "MetaContextProvider", "currentValue", "useMetaContext", "metaContext", "metaFromProp", "_filters", "_sorters", "_current", "_pageSize", "additionalParams", "useId", "inferredId", "useAction", "inferredAction", "inferredIdentifier", "resourceToCheck", "isSameResource", "defaultId", "formAction", "useActionableButton", "humanize", "useButtonCanAccess", "accessControlContext", "accessControlEnabled", "hideIfUnauthorized", "canAccess", "title", "hidden", "disabled", "useNavigationButton", "navigation", "LegacyLink", "getUserFriendlyName", "label", "useDeleteButton", "confirmOkLabel", "confirmTitle", "cancelLabel", "loading", "useRefreshButton", "onClick", "useShowButton", "useEditButton", "useCloneButton", "useCreateButton", "useListButton", "useSaveButton", "useExportButton", "useImportButton", "ErrorComponent", "errorMessage", "setErrorMessage", "username", "setUsername", "password", "setPassword", "login", "e", "providers", "registerLink", "forgotPasswordLink", "rememberMe", "contentProps", "wrapperProps", "renderContent", "formProps", "hideForm", "mutationVariables", "ActiveLink", "email", "setEmail", "remember", "setRemember", "renderLink", "renderProviders", "provider", "RegisterPage", "loginLink", "register", "ForgotPasswordPage", "forgotPassword", "UpdatePasswordPage", "updatePassword", "newPassword", "setNewPassword", "confirmPassword", "setConfirmPassword", "AuthPage", "ReadyPage", "cards", "ConfigSuccessPage", "isTablet", "isMobile", "getGridTemplateColumns", "getHeaderFontSize", "getSubHeaderFontSize", "card", "Card", "description", "iconUrl", "isHover", "setIsHover", "ConfigErrorPage", "ErrorGradient", "ErrorIcon", "ExampleImplementation", "WelcomePage", "REFINE_VERSION", "useTelemetryData", "auth", "dataContext", "notificationContext", "refineOptions", "auditLog", "live", "i18n", "accessControl", "projectId", "encode", "payload", "stringifiedPayload", "throughImage", "src", "img", "throughFetch", "transport", "Telemetry", "sent", "encoded", "checkRouterPropMisuse", "bindings", "otherProps", "useRouterMisuseWarning", "warned", "Refine", "legacyRouterProvider", "routerProvider", "notificationProvider", "accessControlProvider", "auditLogProvider", "QueryClient", "useQuerySubscription", "notificationProviderContextValues", "RouterComponent", "QueryClientProvider", "RouteChangeHandler", "timeoutId", "setTimeoutId", "cancelNotification", "newTimeoutId", "LayoutWrapper", "LayoutFromProps", "SiderFromProps", "HeaderFromProps", "TitleFromProps", "FooterFromProps", "OffLayoutAreaFromProps", "UnsavedPrompt", "warnWhenListener", "Authenticated", "redirectOnFail", "appendCurrentPathToQuery", "fallbackContent", "loadingContent", "activeAuthProvider", "hasAuthProvider", "isLegacyAuth", "isLegacyRouter", "legacyLocation", "isFetching", "isSuccess", "isAuthenticatedStatus", "authenticatedRedirect", "isAuthenticated", "appliedRedirect", "toQuery", "RedirectLegacy", "queryToValue", "Redirect", "location", "CanAccess", "actionFromProp", "paramsFromProp", "onUnauthorized", "componentQueryOptions", "fallbackAction", "CSSRules", "GitHubBanner", "containerStyle", "styleTag", "rule", "GlowSmall", "GlowBig", "Text", "style", "AutoSaveIndicator", "status", "Message", "idle", "translationKey"]
}
