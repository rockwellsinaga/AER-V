{
  "version": 3,
  "sources": ["../../@refinedev/devtools-shared/src/event-types.ts", "../../@refinedev/devtools-shared/src/scopes.ts", "../../@refinedev/devtools-shared/src/context.tsx", "../../@refinedev/devtools-shared/src/send.ts", "../../@refinedev/devtools-shared/src/receive.ts"],
  "sourcesContent": ["import type {\n  Mutation,\n  MutationKey,\n  MutationStatus,\n  QueryKey,\n  QueryState,\n  QueryStatus,\n} from \"@tanstack/react-query\";\nimport type { TraceType } from \"./trace\";\n\nexport enum DevtoolsEvent {\n  RELOAD = \"devtools:reload\",\n  DEVTOOLS_INIT = \"devtools:init\",\n  DEVTOOLS_ALREADY_CONNECTED = \"devtools:already-connected\",\n  ACTIVITY = \"devtools:send-activity\",\n  DEVTOOLS_ACTIVITY_UPDATE = \"devtools:activity-update\",\n  DEVTOOLS_CONNECTED_APP = \"devtools:connected-app\",\n  DEVTOOLS_DISCONNECTED_APP = \"devtools:disconnected-app\",\n  DEVTOOLS_HIGHLIGHT_IN_MONITOR = \"devtools:highlight-in-monitor\",\n  DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION = \"devtools:highlight-in-monitor-action\",\n  DEVTOOLS_LOGIN_SUCCESS = \"devtools:login-success\",\n  DEVTOOLS_DISPLAY_LOGIN_FAILURE = \"devtools:display-login-failure\",\n  DEVTOOLS_LOGIN_FAILURE = \"devtools:login-failure\",\n  DEVTOOLS_RELOAD_AFTER_LOGIN = \"devtools:reload-after-login\",\n  DEVTOOLS_INVALIDATE_QUERY = \"devtools:invalidate-query\",\n  DEVTOOLS_INVALIDATE_QUERY_ACTION = \"devtools:invalidate-query-action\",\n}\n\ntype Timestamps = {\n  createdAt: number;\n  updatedAt: number;\n};\n\ntype ActivityPayload =\n  | {\n      type: \"mutation\";\n      identifier: string;\n      key?: MutationKey;\n      status?: MutationStatus;\n      trace?: TraceType[];\n      state: Mutation<any, any, any, any>[\"state\"];\n      variables?: Mutation<any, any, any, any>[\"state\"][\"variables\"];\n      hookName: string;\n      resourcePath: string | null;\n      resourceName?: string;\n      legacyKey: boolean;\n    }\n  | {\n      type: \"query\";\n      identifier: string;\n      key?: QueryKey;\n      status?: QueryStatus;\n      trace?: TraceType[];\n      state: QueryState<any, any>;\n      hookName: string;\n      resourcePath: string | null;\n      resourceName?: string;\n      legacyKey: boolean;\n    };\n\nexport type DevtoolsEventPayloads = {\n  [DevtoolsEvent.RELOAD]: {};\n  [DevtoolsEvent.DEVTOOLS_INIT]: { url: string };\n  [DevtoolsEvent.DEVTOOLS_ALREADY_CONNECTED]: { url: string };\n  [DevtoolsEvent.ACTIVITY]: ActivityPayload;\n  [DevtoolsEvent.DEVTOOLS_ACTIVITY_UPDATE]: {\n    updatedActivities: (ActivityPayload & Timestamps)[];\n  };\n  [DevtoolsEvent.DEVTOOLS_CONNECTED_APP]: { url: string | null };\n  [DevtoolsEvent.DEVTOOLS_DISCONNECTED_APP]: {};\n  [DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR]: { name: string };\n  [DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION]: { name: string };\n  [DevtoolsEvent.DEVTOOLS_LOGIN_SUCCESS]: {};\n  [DevtoolsEvent.DEVTOOLS_LOGIN_FAILURE]: {\n    error: string | null;\n    code: string | null;\n  };\n  [DevtoolsEvent.DEVTOOLS_DISPLAY_LOGIN_FAILURE]: {\n    error: string | null;\n    code: string | null;\n  };\n  [DevtoolsEvent.DEVTOOLS_RELOAD_AFTER_LOGIN]: {};\n  [DevtoolsEvent.DEVTOOLS_INVALIDATE_QUERY]: { queryKey: QueryKey };\n  [DevtoolsEvent.DEVTOOLS_INVALIDATE_QUERY_ACTION]: { queryKey: QueryKey };\n};\n", "export type RefineHook =\n  | \"useCan\"\n  | \"useLog\"\n  | \"useLogList\"\n  | \"useCreate\"\n  | \"useCreateMany\"\n  | \"useCustom\"\n  | \"useCustomMutation\"\n  | \"useDelete\"\n  | \"useDeleteMany\"\n  | \"useInfiniteList\"\n  | \"useList\"\n  | \"useMany\"\n  | \"useOne\"\n  | \"useUpdate\"\n  | \"useUpdateMany\"\n  | \"useForgotPassword\"\n  | \"useGetIdentity\"\n  | \"useIsAuthenticated\"\n  | \"useLogin\"\n  | \"useLogout\"\n  | \"useOnError\"\n  | \"usePermissions\"\n  | \"useRegister\"\n  | \"useUpdatePassword\";\n\nexport type Scopes = \"data\" | \"audit-log\" | \"access-control\" | \"auth\";\n\nexport const scopes: Record<RefineHook, Scopes> = {\n  useCan: \"access-control\",\n  useLog: \"audit-log\",\n  useLogList: \"audit-log\",\n  useCreate: \"data\",\n  useCreateMany: \"data\",\n  useCustom: \"data\",\n  useCustomMutation: \"data\",\n  useDelete: \"data\",\n  useDeleteMany: \"data\",\n  useInfiniteList: \"data\",\n  useList: \"data\",\n  useMany: \"data\",\n  useOne: \"data\",\n  useUpdate: \"data\",\n  useUpdateMany: \"data\",\n  useForgotPassword: \"auth\",\n  useGetIdentity: \"auth\",\n  useIsAuthenticated: \"auth\",\n  useLogin: \"auth\",\n  useLogout: \"auth\",\n  useOnError: \"auth\",\n  usePermissions: \"auth\",\n  useRegister: \"auth\",\n  useUpdatePassword: \"auth\",\n};\n\nexport const hooksByScope = Object.entries(scopes).reduce(\n  (acc, [hook, scope]) => {\n    if (!acc[scope]) {\n      acc[scope] = [];\n    }\n\n    acc[scope].push(hook as RefineHook);\n\n    return acc;\n  },\n  {} as Record<Scopes, RefineHook[]>,\n);\n", "import React from \"react\";\nimport { DevtoolsEvent } from \"./event-types\";\nimport { send } from \"./send\";\nimport { receive } from \"./receive\";\n\ntype DevtoolsContextValue = {\n  __devtools: boolean;\n  httpUrl: string;\n  wsUrl: string;\n  ws: WebSocket | null;\n};\n\nexport const DevToolsContext = React.createContext<DevtoolsContextValue>({\n  __devtools: false,\n  httpUrl: \"http://localhost:5001\",\n  wsUrl: \"ws://localhost:5001\",\n  ws: null,\n});\n\ntype Props = React.PropsWithChildren<{\n  __devtools?: boolean;\n  url?: string | [httpUrl: string, wsUrl: string];\n}>;\n\nexport const DevToolsContextProvider: React.FC<Props> = ({\n  __devtools,\n  url = [\"http://localhost:5001\", \"ws://localhost:5001\"],\n  children,\n}) => {\n  const httpUrl = Array.isArray(url) ? url[0] : url;\n  const wsUrl = Array.isArray(url)\n    ? url[1]\n    : url.replace(/http(s)?:\\/\\//, \"ws$1://\");\n\n  const [values, setValues] = React.useState<DevtoolsContextValue>({\n    __devtools: __devtools ?? false,\n    httpUrl,\n    wsUrl,\n    ws: null,\n  });\n\n  const [ws, setWs] = React.useState<WebSocket | null>(null);\n\n  React.useEffect(() => {\n    let timeout: NodeJS.Timeout | null = null;\n    const wsInstance = new WebSocket(values.wsUrl);\n\n    wsInstance.addEventListener(\"open\", () => {\n      if (!values.__devtools) {\n        timeout = setTimeout(() => {\n          send(wsInstance, DevtoolsEvent.DEVTOOLS_INIT, {\n            url: window.location.origin,\n          });\n        }, 300);\n      }\n    });\n\n    setWs(wsInstance);\n\n    return () => {\n      if (timeout) clearTimeout(timeout);\n\n      // In strict mode, the WebSocket instance might not be connected yet\n      // so we need to wait for it to connect before closing it\n      // otherwise it will log an unnecessary error in the console\n      if (wsInstance.readyState === WebSocket.CONNECTING) {\n        wsInstance.addEventListener(\"open\", () => {\n          wsInstance.close(1000, window.location.origin);\n        });\n      } else {\n        wsInstance.close(1000, window.location.origin);\n      }\n    };\n  }, []);\n\n  const contextValues = React.useMemo<DevtoolsContextValue>(\n    () => ({\n      ...values,\n      ws,\n    }),\n    [values, ws],\n  );\n\n  return (\n    <DevToolsContext.Provider value={contextValues}>\n      {children}\n    </DevToolsContext.Provider>\n  );\n};\n", "import type { DevtoolsEvent, DevtoolsEventPayloads } from \"./event-types\";\n\nexport async function send<T extends DevtoolsEvent>(\n  ws: WebSocket,\n  event: T,\n  payload: DevtoolsEventPayloads[T],\n) {\n  // check if the socket is open\n  // if not, wait for it to open\n  if (ws.readyState !== ws.OPEN) {\n    await new Promise<void>((resolve) => {\n      const listener = () => {\n        ws.send(JSON.stringify({ event, payload }));\n        resolve();\n        ws.removeEventListener(\"open\", listener);\n      };\n\n      ws.addEventListener(\"open\", listener);\n    });\n    return;\n  }\n  ws.send(JSON.stringify({ event, payload }));\n  return;\n}\n", "// receive ws message by adding a listener to the ws object\n\nimport type { DevtoolsEvent, DevtoolsEventPayloads } from \"./event-types\";\n\nexport function receive<T extends DevtoolsEvent>(\n  ws: WebSocket,\n  event: T,\n  callback: (payload: DevtoolsEventPayloads[T]) => void,\n) {\n  const listener = (e: MessageEvent) => {\n    const { event: receivedEvent, payload } = JSON.parse(e.data);\n    if (event === receivedEvent) {\n      callback(payload);\n    }\n  };\n\n  ws.addEventListener(\"message\", listener);\n\n  return () => {\n    ws.removeEventListener(\"message\", listener);\n  };\n}\n"],
  "mappings": ";;;;;;;;AEAA,mBAAkB;AFUX,IAAKA,KAAAA,QACVA,EAAA,SAAS,mBACTA,EAAA,gBAAgB,iBAChBA,EAAA,6BAA6B,8BAC7BA,EAAA,WAAW,0BACXA,EAAA,2BAA2B,4BAC3BA,EAAA,yBAAyB,0BACzBA,EAAA,4BAA4B,6BAC5BA,EAAA,gCAAgC,iCAChCA,EAAA,uCAAuC,wCACvCA,EAAA,yBAAyB,0BACzBA,EAAA,iCAAiC,kCACjCA,EAAA,yBAAyB,0BACzBA,EAAA,8BAA8B,+BAC9BA,EAAA,4BAA4B,6BAC5BA,EAAA,mCAAmC,oCAfzBA,IAAAA,KAAA,CAAA,CAAA;ACkBL,IAAMC,IAAqC,EAChD,QAAQ,kBACR,QAAQ,aACR,YAAY,aACZ,WAAW,QACX,eAAe,QACf,WAAW,QACX,mBAAmB,QACnB,WAAW,QACX,eAAe,QACf,iBAAiB,QACjB,SAAS,QACT,SAAS,QACT,QAAQ,QACR,WAAW,QACX,eAAe,QACf,mBAAmB,QACnB,gBAAgB,QAChB,oBAAoB,QACpB,UAAU,QACV,WAAW,QACX,YAAY,QACZ,gBAAgB,QAChB,aAAa,QACb,mBAAmB,OACrB;AAzBO,IA2BMC,IAAe,OAAO,QAAQD,CAAM,EAAE,OACjD,CAACE,GAAK,CAACC,GAAMC,CAAK,OACXF,EAAIE,CAAK,MACZF,EAAIE,CAAK,IAAI,CAAC,IAGhBF,EAAIE,CAAK,EAAE,KAAKD,CAAkB,GAE3BD,IAET,CAAC,CACH;AEhEA,eAAsBG,EACpBC,GACAC,GACAC,GACA;AAGA,MAAIF,EAAG,eAAeA,EAAG,MAAM;AAC7B,UAAM,IAAI,QAAeG,OAAY;AACnC,UAAMC,IAAW,MAAM;AACrBJ,UAAG,KAAK,KAAK,UAAU,EAAE,OAAAC,GAAO,SAAAC,EAAQ,CAAC,CAAC,GAC1CC,EAAQ,GACRH,EAAG,oBAAoB,QAAQI,CAAQ;MACzC;AAEAJ,QAAG,iBAAiB,QAAQI,CAAQ;IACtC,CAAC;AACD;EAAA;AAEFJ,IAAG,KAAK,KAAK,UAAU,EAAE,OAAAC,GAAO,SAAAC,EAAQ,CAAC,CAAC;AAE5C;ADXO,IAAMG,IAAkBC,aAAAA,QAAM,cAAoC,EACvE,YAAY,OACZ,SAAS,yBACT,OAAO,uBACP,IAAI,KACN,CAAC;AALM,IAYMC,IAA2C,CAAC,EACvD,YAAAC,GACA,KAAAC,IAAM,CAAC,yBAAyB,qBAAqB,GACrD,UAAAC,EACF,MAAM;AACJ,MAAMC,IAAU,MAAM,QAAQF,CAAG,IAAIA,EAAI,CAAC,IAAIA,GACxCG,IAAQ,MAAM,QAAQH,CAAG,IAC3BA,EAAI,CAAC,IACLA,EAAI,QAAQ,iBAAiB,SAAS,GAEpC,CAACI,GAAQC,CAAS,IAAIR,aAAAA,QAAM,SAA+B,EAC/D,YAAYE,KAAc,OAC1B,SAAAG,GACA,OAAAC,GACA,IAAI,KACN,CAAC,GAEK,CAACZ,GAAIe,CAAK,IAAIT,aAAAA,QAAM,SAA2B,IAAI;AAEzDA,eAAAA,QAAM,UAAU,MAAM;AACpB,QAAIU,IAAiC,MAC/BC,IAAa,IAAI,UAAUJ,EAAO,KAAK;AAE7C,WAAAI,EAAW,iBAAiB,QAAQ,MAAM;AACnCJ,QAAO,eACVG,IAAU,WAAW,MAAM;AACzBjB,UAAKkB,GAAAA,iBAAyC,EAC5C,KAAK,OAAO,SAAS,OACvB,CAAC;MACH,GAAG,GAAG;IAEV,CAAC,GAEDF,EAAME,CAAU,GAET,MAAM;AACPD,WAAS,aAAaA,CAAO,GAK7BC,EAAW,eAAe,UAAU,aACtCA,EAAW,iBAAiB,QAAQ,MAAM;AACxCA,UAAW,MAAM,KAAM,OAAO,SAAS,MAAM;MAC/C,CAAC,IAEDA,EAAW,MAAM,KAAM,OAAO,SAAS,MAAM;IAEjD;EACF,GAAG,CAAC,CAAC;AAEL,MAAMC,IAAgBZ,aAAAA,QAAM,QAC1B,OAAO,EACL,GAAGO,GACH,IAAAb,EACF,IACA,CAACa,GAAQb,CAAE,CACb;AAEA,SACEM,aAAAA,QAAA,cAACD,EAAgB,UAAhB,EAAyB,OAAOa,EAAAA,GAC9BR,CACH;AAEJ;AEpFO,SAASS,EACdnB,GACAC,GACAmB,GACA;AACA,MAAMhB,IAAYiB,OAAoB;AACpC,QAAM,EAAE,OAAOC,GAAe,SAAApB,EAAQ,IAAI,KAAK,MAAMmB,EAAE,IAAI;AACvDpB,UAAUqB,KACZF,EAASlB,CAAO;EAEpB;AAEA,SAAAF,EAAG,iBAAiB,WAAWI,CAAQ,GAEhC,MAAM;AACXJ,MAAG,oBAAoB,WAAWI,CAAQ;EAC5C;AACF;",
  "names": ["DevtoolsEvent", "scopes", "hooksByScope", "acc", "hook", "scope", "send", "ws", "event", "payload", "resolve", "listener", "DevToolsContext", "React", "DevToolsContextProvider", "__devtools", "url", "children", "httpUrl", "wsUrl", "values", "setValues", "setWs", "timeout", "wsInstance", "contextValues", "receive", "callback", "e", "receivedEvent"]
}
